*-----------------------------------------------------------------------------
* <Rating>85</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE MULTI.GET.LOC.REF(APPL.ARR,FIELDNAME.ARR,POS.ARR)
************************************************************************************
* This program can in a single run return the field positions of multiple
* local reference fields from either a single or across multiple applications.
*
* This program accepts the following arguements
*
* Arguement 1 : APPL.ARR
* This is the array containing the name(s) of the application or multiple
* applications across which local reference field  positions need to be
* obtained. The syntax for passing in the names of the applications is as
* follows
*
* Appl Name 1<Field Marker>Appl Name 2<Field Marker>etc......
*
* Arguement 2 : FIELDNAME.ARR
* This is the array containing the name(s) of the actual local reference
* fields present inside either the single application or multiple applications
* for which the local reference field positions are to be returned. The syntax
* for passing in the names of the local reference field name(s) is as follows
*
* Appl1 LRef1<Value Marker>Appl1 LRef2.....<Field Marker>Appl2 LRef1........
*
* Arguement 3 : POS.ARR
* This is the arguement that is returned to the calling program. This arguement
* is formatted in exactly the same way as the FIELDNAME.ARR arguement. This
* arguement will contain the field position(s) names of the local reference
* field(s) in the respective applications. The field positions are inserted
* into this array in exactly the same position(s) that it was encountered in
* the FIELDNAME.ARR. The values being returned in this array will be like
*
* Appl1 LRef1 Posn<Value Marker>Appl1 LRef2 Posn......<Field Marker> Appl2
* LRef1 Posn......
***********************************************************************************
*  Example of Usage of MULTI.GET.LOC.REF
*
*    APPL.NAME.ARR<1> = 'GM.FUND.MASTER' ; APPL.NAME.ARR<2> = 'GM.TRANSACTION'
*    FLD.NAME.ARR<1,1> = 'VALUATION.FREQ' ; FLD.NAME.ARR<1,2> = 'MAX.BACK.DATE'
*    FLD.NAME.ARR<2,1> = 'CREDIT.ACCOUNT'
*    CALL MULTI.GET.LOC.REF(APPL.NAME.ARR,FLD.NAME.ARR,FLD.POS.ARR)
*    VAL.FREQ.POS = FLD.POS.ARR<1,1> ; MAX.BK.DT.POS = FLD.POS.ARR<1,2>
*    CR.AC.POS = FLD.POS.ARR<1,3>
***********************************************************************************

    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_F.STANDARD.SELECTION

MAIN:
    FN.STANDARD.SELECTION = 'F.STANDARD.SELECTION'
    FP.STANDARD.SELECTION = ''
    CALL OPF(FN.STANDARD.SELECTION,FP.STANDARD.SELECTION)
*
    CNTR1 = DCOUNT(APPL.ARR,FM)
    FOR I = 1 TO CNTR1
        APPL = APPL.ARR<I>
        CALL F.READ(FN.STANDARD.SELECTION,APPL,REC.STORE,FP.STANDARD.SELECTION,RVAL)
*
        USR.FIELD.NAME = REC.STORE<SSL.USR.FIELD.NAME>
        CONVERT VM TO FM IN USR.FIELD.NAME
*
        CNTR2 = DCOUNT(FIELDNAME.ARR<I>,VM)
        FOR J = 1 TO CNTR2
            FIELDNAME = FIELDNAME.ARR<I,J>
            LOCATE FIELDNAME IN USR.FIELD.NAME<1> SETTING CPOS ELSE CPOS = ''
            USR.FIELD.VALUE = REC.STORE<SSL.USR.FIELD.NO,CPOS,1>
            IF CPOS NE '' THEN
                Y.ID.LOCREF.POSN = FIELD(USR.FIELD.VALUE,",",2)
                Y.ID.LOCREF.POSN = TRIM(FIELD(Y.ID.LOCREF.POSN,'>',1))
                POS.ARR<I,J>=Y.ID.LOCREF.POSN
            END
        NEXT J
    NEXT I
    RETURN
END
