*-----------------------------------------------------------------------------
* <Rating>4730</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE BD.LIVE.E.STMT.ENQ.BY.CONCAT.COMB(YENQ.LIST,YSORT.DETS,SORT.FLD,SORT.BY,YOPERAND.DT,YOPERAND.ACC,YENQ.LIST.COPY,Y.ID.LIST)
*
    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_F.STMT.ENTRY
    $INSERT GLOBUS.BP I_ENQUIRY.COMMON
    $INSERT GLOBUS.BP I_F.ACCOUNT.STATEMENT
    $INSERT GLOBUS.BP I_F.AC.STMT.PARAMETER
    $INSERT GLOBUS.BP I_F.ACCOUNT.PARAMETER
    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT GLOBUS.BP I_F.USER
    $INSERT GLOBUS.BP I_F.COMPANY.SMS.GROUP
    $INSERT GLOBUS.BP I_DAS.COMMON
    $INSERT GLOBUS.BP I_DAS.ACCOUNT
*
*-----------------------------------------------------------------------
MAIN.PARA:
*=========
*
* Find the position of ACCOUNT and BOOKING.BOOKING.DATE
* 
    YENQ.LIST.TEMP = YENQ.LIST 
* 
    GOSUB OPEN.REQD.FILES
    GOSUB LIST.ACCT.NOS
    Y.CONCAT.REC = ""
    YOPEN.BAL = ""
    Y.AMOUNT = "" 
    YENQ.LIST = ""
    ENTRYID.LIST = ""         ;* Stores entry ids to check for duplicates
    YR.ACCT.STMT2.PRINT = ""
    YR.ENTRY.FILE = ""
    LOOP
        REMOVE YVALUE FROM YENQ.LIST.COPY SETTING YCODE
    UNTIL YVALUE = ''
        LOCATE YVALUE IN YENQ.LIST<1,1> BY 'AR' SETTING YPOS ELSE
            NULL
        END
        INS YVALUE BEFORE YENQ.LIST<1,YPOS>
    REPEAT
    LOOP
        Y.AC.NO = YACCT.LIST<1>
    UNTIL Y.AC.NO = "" DO
        DEL YACCT.LIST<1>
*        IF C$MULTI.BOOK THEN
        GOSUB CHECK.OTH.BOOK.ACCESS
        IF NEXT.ACCT.FLAG THEN
            GOTO NEXT.ACCT
        END
*        END
        GOSUB BUILD.CONCAT.LIST
NEXT.ACCT:
    REPEAT
*

    Y.CONCAT.REC.SEP.ID = ""
    GOSUB CHECK.NET.ENTRY
    Y.ID.LIST = Y.CONCAT.REC.SEP.ID
    RETURN
*
*------------------------------------------------------------------------
*
CHECK.NET.ENTRY:
*==============
*
* Check net entry, if not then form the concat list and return
*
    LOOP
        Y.CONCAT.REC.ID = Y.CONCAT.REC<1>
    UNTIL Y.CONCAT.REC.ID = '' DO
        DEL Y.CONCAT.REC<1>
        Y.ENTRY.ID = FIELD(Y.CONCAT.REC.ID,'*',2)
        Y.ENTRY.CHECK = COUNT(Y.ENTRY.ID,'!')
        IF Y.ENTRY.CHECK THEN
            GOSUB READ.STMT.ENTRY.DETAIL.XREF
        END ELSE
            R.STMT.ENTRY = ''
            YERR = ''
            CALL F.READ(YF.STMT.ENTRY,Y.ENTRY.ID,R.STMT.ENTRY,F.STMT.ENTRY,YERR)
            GOSUB BUILD.RETURN.LIST
        END
    REPEAT
    RETURN
*
*------------------------------------------------------------------------
*
BUILD.RETURN.LIST:
*================= 
    IF R.STMT.ENTRY<AC.STE.AMOUNT.FCY> THEN
        Y.AMOUNT = R.STMT.ENTRY<AC.STE.AMOUNT.FCY>
    END ELSE
        Y.AMOUNT = R.STMT.ENTRY<AC.STE.AMOUNT.LCY>
    END
    IF DCOUNT(Y.CONCAT.REC.ID,'*') EQ 5 THEN
        Y.CONCAT.REC.SEP.ID<-1> = Y.CONCAT.REC.ID:'*':R.STMT.ENTRY<AC.STE.TRANS.REFERENCE>:'*':Y.AMOUNT
    END ELSE
        Y.CONCAT.REC.SEP.ID<-1> = Y.CONCAT.REC.ID:'***':R.STMT.ENTRY<AC.STE.TRANS.REFERENCE>:'*':Y.AMOUNT
    END
    RETURN
*
*------------------------------------------------------------------------
*
READ.STMT.ENTRY.DETAIL.XREF:
*==========================
*
* Remove the id from list and read the record from stmt.entry.detail.xref file
*
    STMT.CNT = 1
    LOOP
        STMT.XREF.ID = Y.ENTRY.ID:'-':STMT.CNT
        R.STMT.ENTRY.DETAIL.XREF = ''
        YERR = ''
        CALL F.READ(FN.STMT.ENTRY.DETAIL.XREF, STMT.XREF.ID, R.STMT.ENTRY.DETAIL.XREF, F.STMT.ENTRY.DETAIL.XREF, YERR)
    WHILE NOT(YERR)
        STMT.CNT + = 1
        GOSUB READ.STMT.ENTRY.DETAIL
    REPEAT

    RETURN
*------------------------------------------------------------------------
*
READ.STMT.ENTRY.DETAIL:
*=====================
*
* Remove the id from list and read the record from stmt.entry.detail file
*
    LOOP
        REMOVE STMT.ENTRY.DETAIL.ID FROM R.STMT.ENTRY.DETAIL.XREF SETTING POS
    WHILE STMT.ENTRY.DETAIL.ID:POS
        R.STMT.ENTRY = ''
        YERR = ''
        CALL F.READ(FN.STMT.ENTRY.DETAIL,STMT.ENTRY.DETAIL.ID,R.STMT.ENTRY,F.STMT.ENTRY.DETAIL,YERR)
        GOSUB BUILD.RETURN.LIST
    REPEAT

    RETURN
*
*------------------------------------------------------------------------
*
OPEN.REQD.FILES:
*===============
*
    F.ACCOUNT = ''
    CALL OPF('F.ACCOUNT',F.ACCOUNT)
*
    F.COMP.SMS.GRP = ''
    CALL OPF('F.COMPANY.SMS.GROUP',F.COMP.SMS.GRP)
*
    F.ACCT.STMT.PRINT = ''
    CALL OPF('F.ACCT.STMT.PRINT',F.ACCT.STMT.PRINT)
*
    F.ACCT.STMT2.PRINT = ''
    CALL OPF('F.ACCT.STMT2.PRINT',F.ACCT.STMT2.PRINT)
*
    F.STMT2.PRINTED = ''
    CALL OPF('F.STMT2.PRINTED',F.STMT2.PRINTED)
*
    F.STMT.PRINTED = ''
    CALL OPF('F.STMT.PRINTED',F.STMT.PRINTED)
*
    F.ACCOUNT.STATEMENT = ''
    CALL OPF('F.ACCOUNT.STATEMENT',F.ACCOUNT.STATEMENT)
*
    F.ACCOUNT.STATEMENT$HIS = ''
    CALL OPF('F.ACCOUNT.STATEMENT$HIS',F.ACCOUNT.STATEMENT$HIS)
*
    YF.STMT.ENTRY = "F.STMT.ENTRY"
    F.STMT.ENTRY = ""
    CALL OPF(YF.STMT.ENTRY,F.STMT.ENTRY)
*
    FN.STMT.ENTRY.DETAIL.XREF = 'F.STMT.ENTRY.DETAIL.XREF'
    F.STMT.ENTRY.DETAIL.XREF = ''
    CALL OPF(FN.STMT.ENTRY.DETAIL.XREF,F.STMT.ENTRY.DETAIL.XREF)
*
    FN.STMT.ENTRY.DETAIL = 'F.STMT.ENTRY.DETAIL'
    F.STMT.ENTRY.DETAIL = ''
    CALL OPF(FN.STMT.ENTRY.DETAIL,F.STMT.ENTRY.DETAIL)
*
    F.FWD.STMT1.PRINTED = ''
    CALL OPF('F.FWD.STMT1.PRINTED', F.FWD.STMT1.PRINTED)

    F.FWD.STMT2.PRINTED = ''
    CALL OPF('F.FWD.STMT2.PRINTED',F.FWD.STMT2.PRINTED)

    FWD.MVMT.FLAG = "" ; STMT.DATE.FIELD = "" ; FWD.STMT.LIST = "" ; FWD.STMT1.LIST = "" ; FWD.STMT2.LIST = ""
    FWD.MVMT.REQD = ""
    IF R.ACCOUNT.PARAMETER<AC.PAR.VALUE.DATED.ACCTNG> EQ 'Y' THEN
        CALL DBR('AC.STMT.PARAMETER':FM:AC.STP.FWD.MVMT.REQD,'SYSTEM',FWD.MVMT.REQD)
        IF FWD.MVMT.REQD THEN
            FWD.MVMT.FLAG = 1 ;* Set forward movement flag
        END
    END

    RETURN
*
*------------------------------------------------------------------------
*
*
*------------------------------------------------------------------------
*
LIST.ACCT.NOS:
*=============
    YACCT.LIST = "" 
*
    YOPERAND = YOPERAND.ACC
    IF YOPERAND = 1 AND YENQ.LIST <> "ALL" THEN
        YENQ.LIST = YENQ.LIST.TEMP
        YACCT.LIST = YENQ.LIST
        CONVERT SM TO FM IN YACCT.LIST
        RETURN
    END
*
    RETURN
    YACCT.ID.LIST = DAS.ACCOUNT$BY.ID
    THE.ARGS = ''
    TABLE.SUFFIX = ''
    CALL DAS ('ACCOUNT', YACCT.ID.LIST, THE.ARGS, TABLE.SUFFIX)
*
    YOPERAND = YOPERAND.ACC
    ON YOPERAND GOSUB MATCH.EQUAL,
    MATCH.RANGE,
    MATCH.LESS.THAN,
    MATCH.GREATER.THAN,
    MATCH.NOT,
    MATCH.LIKE,
    MATCH.UNLIKE,
    MATCH.LE,
    MATCH.GE,
    MATCH.NR
    RETURN
*
*-----------------------------------------------------------------------
*
MATCH.EQUAL:
*===========
*
* For ALL Accounts
*
    YACCT.LIST = YACCT.ID.LIST
    RETURN
*
MATCH.RANGE:
*===========
    Y.END = ""
    LOOP
        YACC = YACCT.ID.LIST<1>
    UNTIL YACC = "" OR Y.END = "END" DO
        DEL YACCT.ID.LIST<1>
        IF YACC >= YENQ.LIST<1,1,1> AND YACC <= YENQ.LIST<1,1,2> THEN
            IF YACCT.LIST THEN
                YACCT.LIST := FM:YACC
            END ELSE
                YACCT.LIST = YACC
            END
        END ELSE
            IF YACC > YENQ.LIST<1,1,2> THEN
                Y.END = "END"
            END
        END
    REPEAT
    RETURN
*
MATCH.LESS.THAN:
*===============
    Y.END = ""
    LOOP
        YACC = YACCT.ID.LIST<1>
    UNTIL YACC = "" OR Y.END = "END" DO
        DEL YACCT.ID.LIST<1>
        IF YACC < YENQ.LIST<1,1,1> THEN
            IF YACCT.LIST THEN
                YACCT.LIST := FM:YACC
            END ELSE
                YACCT.LIST = YACC
            END
        END ELSE
            Y.END = "END"
        END
    REPEAT
    RETURN
*
MATCH.GREATER.THAN:
*==================
    Y.END = ""
    LOOP
        YACC = YACCT.ID.LIST<1>
    UNTIL YACC = "" OR Y.END = "END" DO
        IF YACC > YENQ.LIST<1,1,1> THEN
            YACCT.LIST = YACCT.ID.LIST
            Y.END = "END"
        END ELSE
            DEL YACCT.ID.LIST<1>
        END
    REPEAT
    RETURN
*
MATCH.NOT:
*=========
    LOOP
        YACC = YACCT.ID.LIST<1>
    UNTIL YACC = "" DO
        LOCATE YACC IN YENQ.LIST<1,1,1> SETTING YAC.LOC ELSE
            IF YACCT.LIST THEN
                YACCT.LIST := FM:YACC
            END ELSE
                YACCT.LIST = YACC
            END
        END
        DEL YACCT.ID.LIST<1>
    REPEAT
    RETURN
*
MATCH.LIKE:
*==========
    LOOP
        YACC = YACCT.ID.LIST<1>
    UNTIL YACC = "" DO
        IF INDEX(YACC,YENQ.LIST<1,1>,1) > 0 THEN
            IF YACCT.LIST THEN
                YACCT.LIST := FM:YACC
            END ELSE
                YACCT.LIST = YACC
            END
        END
        DEL YACCT.ID.LIST<1>
    REPEAT
    RETURN
*
MATCH.UNLIKE:
*============
    LOOP
        YACC = YACCT.ID.LIST<1>
    UNTIL YACC = "" DO
        IF INDEX(YACC,YENQ.LIST<1,1>,1) = 0 THEN
            IF YACCT.LIST THEN
                YACCT.LIST := FM:YACC
            END ELSE
                YACCT.LIST = YACC
            END
        END
        DEL YACCT.ID.LIST<1>
    REPEAT
    RETURN
*
MATCH.LE:
*========
    Y.END = ""
    LOOP
        YACC = YACCT.ID.LIST<1>
    UNTIL YACC = "" OR Y.END = "END" DO
        DEL YACCT.ID.LIST<1>
        IF YACC <= YENQ.LIST<1,1,1> THEN
            IF YACCT.LIST THEN
                YACCT.LIST := FM:YACC
            END ELSE
                YACCT.LIST = YACC
            END
        END ELSE
            Y.END = "END"
        END
    REPEAT
    RETURN
*
MATCH.GE:
*========
    Y.END = ""
    LOOP
        YACC = YACCT.ID.LIST<1>
    UNTIL YACC = "" OR Y.END = "END" DO
        IF YACC >= YENQ.LIST<1,1,1> THEN
            YACCT.LIST = YACCT.ID.LIST
            Y.END = "END"
        END ELSE
            DEL YACCT.ID.LIST<1>
        END
    REPEAT
    RETURN
*
MATCH.NR:
*========
    LOOP
        YACC = YACCT.ID.LIST<1>
    UNTIL YACC = ""
        DEL YACCT.ID.LIST<1>
        IF YACC < YENQ.LIST<1,1,1> OR YACC > YENQ.LIST<1,1,2> THEN
            IF YACCT.LIST THEN
                YACCT.LIST := FM:YACC
            END ELSE
                YACCT.LIST = YACC
            END
        END
    REPEAT
    RETURN
*
*-----------------------------------------------------------------------
*
*-----------------------------------------------------------------------
*
MATCH.DATE.EQUAL:
*================
*
* There may be more than 1 date in the list
*
    YSTORE.BAL.DATE = ''
    IF YSTORE.BAL.DATE = '' THEN
        YSTORE.BAL.DATE = YR.ACCOUNT.STATEMENT<AC.STA.FQU1.LAST.DATE>
    END
    YENQ.LIST = YENQ.LIST
    LOOP
*
* Get the booking date from the list specified
*
        REMOVE YBOOK.DATE FROM YENQ.LIST SETTING YCODE
    UNTIL YBOOK.DATE = ''
*
* Find the date nearest to the BOOKING DATE in ACCT.STMT.PRINTED
*
        Y.DATE = YBOOK.DATE
        LOCATE Y.DATE IN YACCT.STMT.DATES<1> BY 'AR' SETTING YPOS ELSE
            NULL
        END
        IF YACCT.STMT.DATES<YPOS> = '' THEN
* Existing code to refer fqu-2 if the relationship is combined is
* removed since each frequency is made independent and relationship
* field is made obsolate.

            GOSUB GET.ENTRIES
*
* Enquiry is for entries since the last statement, get entries from
* ACCT.STMT.ENTRY
*
        END ELSE
            IF YACCT.STMT.DATES<YPOS> LT YSTORE.BAL.DATE OR YSTORE.BAL.DATE = '' THEN
                YSTORE.BAL.DATE = YACCT.STMT.DATES<YPOS>
                YOPEN.BAL = YACCT.STMT.BAL<YPOS>
                YOPEN.BAL = SUM(YOPEN.BAL)
            END

            IF YACCT.STMT.DATES<YPOS> = "PASSBOOK" THEN
                GOSUB GET.LAST.PRINT.BAL
            END ELSE
                YOPEN.BAL = YACCT.STMT.BAL<YPOS>
            END
*
* Use this date to read the STMT.PRINTED record
*
            LOOP
                GOSUB READ.ENTRY.IDS
                GOSUB GET.ENTRIES.EQ
                YPOS +=1
            UNTIL YACCT.STMT.DATES<YPOS> = ''
            REPEAT
        END

        GOSUB GET.ENTRIES.EQ
*
    REPEAT
    RETURN
*
GET.ENTRIES.EQ:
*==============
    Y.END = ""
    LOOP
*
* Read in each entry and check the booking date against the chosen date
* THIS CAN BE MODIFIED TO FIND THE OPENING BALANCE
*
        REMOVE YENTRY.ID FROM YR.ENTRY.FILE SETTING YTYPE
    UNTIL YENTRY.ID = '' OR Y.END = "END"
        GOSUB READ.ENTRY
        IF YR.STMT.ENTRY THEN
            IF YR.STMT.ENTRY<AC.STE.BOOKING.DATE> EQ YBOOK.DATE THEN
                ENTRY.FOUND = 1
                IF Y.CONCAT.REC THEN
                    Y.CONCAT.REC := FM:Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                END ELSE
                    Y.CONCAT.REC = Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                END
            END ELSE
                IF YR.STMT.ENTRY<AC.STE.BOOKING.DATE> GT YBOOK.DATE THEN
                    Y.END = "END"
                END ELSE
                    GOSUB OPENING.BALANCE
                END
            END
        END
    REPEAT
    IF SORT.FLD = "BOOKING.DATE" THEN
        GOSUB SORT.ENT.BY.BOOKING.DATE
    END
    RETURN
*
*-----------------------------------------------------------------------
*
MATCH.DATE.RANGE:
*================
*
    YSTART.DATE = YENQ.LIST<1,1>
    IF YENQ.LIST<1,2> NE '' THEN
        YEND.DATE = YENQ.LIST<1,2>
    END ELSE
        YEND.DATE = YSTART.DATE
    END
    Y.END = ""
    LOCATE YSTART.DATE IN YACCT.STMT.DATES<1> BY 'AR' SETTING YPOS ELSE
        NULL
    END
    IF YACCT.STMT.DATES<YPOS> = '' THEN
        Y.DATE = YSTART.DATE
        GOSUB GET.ENTRIES
    END ELSE
        IF YACCT.STMT.DATES<YPOS> = "PASSBOOK" THEN
            GOSUB GET.LAST.PRINT.BAL
        END ELSE
            YOPEN.BAL = YACCT.STMT.BAL<YPOS>
        END
        LOOP
            GOSUB READ.ENTRY.IDS
            GOSUB GET.ENTRIES.RG
            YPOS += 1
        UNTIL YACCT.STMT.DATES<YPOS> = '' OR Y.END = "END"
        REPEAT
        IF Y.END = '' THEN
            GOSUB GET.ENTRIES.RG
        END
    END
    RETURN
*
GET.ENTRIES.RG:
*==============
    LOOP
        REMOVE YENTRY.ID FROM YR.ENTRY.FILE SETTING YCODE
    UNTIL YENTRY.ID = '' OR Y.END = 'END'
        GOSUB READ.ENTRY
        IF YR.STMT.ENTRY THEN
            IF YR.STMT.ENTRY<AC.STE.BOOKING.DATE> GT YEND.DATE THEN
                Y.END = 'END'
            END ELSE
                IF YR.STMT.ENTRY<AC.STE.BOOKING.DATE> GE YSTART.DATE THEN
                    ENTRY.FOUND = 1
                    IF Y.CONCAT.REC THEN
                        Y.CONCAT.REC := FM:Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                    END ELSE
                        Y.CONCAT.REC = Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                    END
                END ELSE
                    GOSUB OPENING.BALANCE
                END
            END
        END
    REPEAT
    IF SORT.FLD = "BOOKING.DATE" THEN
        GOSUB SORT.ENT.BY.BOOKING.DATE
    END
    RETURN
*
*-----------------------------------------------------------------------
*
MATCH.DATE.LESS.THAN:
*====================
*
    IF YACCT.STMT.DATES = "" THEN
        GOSUB GET.LAST.PRINT.BAL
        GOSUB GET.ENTRIES.LT
    END ELSE
        LOCATE YENQ.LIST<1,1> IN YACCT.STMT.DATES<1> BY 'AR' SETTING YCOUNT ELSE
            NULL
        END
        YOPEN.BAL = YACCT.STMT.BAL<1>
        FOR YPOS = 1 TO YCOUNT
            GOSUB READ.ENTRY.IDS
            IF YCOUNT NE YPOS THEN
                GOSUB EXTRACT.ENTRY.IDS
            END ELSE
                GOSUB GET.ENTRIES.LT
            END
        NEXT YPOS
    END
    RETURN
*
GET.ENTRIES.LT:
*==============
    Y.END = ""
    LOOP
        REMOVE YENTRY.ID FROM YR.ENTRY.FILE SETTING YCODE
    UNTIL YENTRY.ID = "" OR Y.END = "END"
        GOSUB READ.ENTRY
        IF YR.STMT.ENTRY NE '' THEN
            IF YR.STMT.ENTRY<AC.STE.BOOKING.DATE> LT YENQ.LIST<1,1> THEN
                ENTRY.FOUND = 1
                IF Y.CONCAT.REC THEN
                    Y.CONCAT.REC := FM:Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                END ELSE
                    Y.CONCAT.REC = Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                END
            END ELSE
                Y.END = "END"
            END
        END
    REPEAT
    IF SORT.FLD = "BOOKING.DATE" THEN
        GOSUB SORT.ENT.BY.BOOKING.DATE
    END
    RETURN
*
*-----------------------------------------------------------------------
*
MATCH.DATE.NOT:
*==============
*
    IF YACCT.STMT.DATES<1> = "" THEN
        GOSUB GET.LAST.PRINT.BAL
    END ELSE
        YOPEN.BAL = YACCT.STMT.BAL<1>
    END
    YNO.STMTS = COUNT(YACCT.STMT.DATES,FM) + (YACCT.STMT.DATES NE '')
    FOR YPOS = 1 TO YNO.STMTS
        GOSUB READ.ENTRY.IDS
        GOSUB GET.ENTRIES.NOT
    NEXT YPOS
    GOSUB GET.ENTRIES.NOT
    RETURN
*
GET.ENTRIES.NOT:
*===============
*
    LOOP
        REMOVE YENTRY.ID FROM YR.ENTRY.FILE SETTING YCODE
    UNTIL YENTRY.ID = ''
        GOSUB READ.ENTRY
        IF YR.STMT.ENTRY THEN
            LOCATE YR.STMT.ENTRY<AC.STE.BOOKING.DATE> IN YENQ.LIST<1,1> SETTING YCOUNT ELSE
                ENTRY.FOUND = 1
                IF Y.CONCAT.REC THEN
                    Y.CONCAT.REC := FM:Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                END ELSE
                    Y.CONCAT.REC = Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                END
            END
        END
    REPEAT
    IF SORT.FLD = "BOOKING.DATE" THEN
        GOSUB SORT.ENT.BY.BOOKING.DATE
    END
    RETURN
*
*-----------------------------------------------------------------------
*
MATCH.DATE.LIKE:
*===============
*
    RETURN
*
MATCH.DATE.UNLIKE:
*=================
*
    RETURN
*
*-----------------------------------------------------------------------
*
*-----------------------------------------------------------------------
*
MATCH.DATE.LE:
*=============
*
    IF YACCT.STMT.DATES = "" THEN
        GOSUB GET.LAST.PRINT.BAL
        GOSUB GET.ENTRIES.LE
    END ELSE
        YLE.DATE = YENQ.LIST<1,1> + 1
        LOCATE YLE.DATE IN YACCT.STMT.DATES<1> BY 'AR' SETTING YCOUNT ELSE
            NULL
        END
        YOPEN.BAL = YACCT.STMT.BAL<1>
        FOR YPOS = 1 TO YCOUNT
            GOSUB READ.ENTRY.IDS
            IF YCOUNT NE YPOS THEN
                GOSUB EXTRACT.ENTRY.IDS
            END ELSE
                GOSUB GET.ENTRIES.LE
            END
        NEXT YPOS
    END
    RETURN
*
GET.ENTRIES.LE:
*==============
*
    Y.END = ""
    LOOP
        REMOVE YENTRY.ID FROM YR.ENTRY.FILE SETTING YCODE
    UNTIL YENTRY.ID = "" OR Y.END = "END"
        GOSUB READ.ENTRY
        IF YR.STMT.ENTRY NE '' THEN
            IF YR.STMT.ENTRY<AC.STE.BOOKING.DATE> LE YENQ.LIST<1,1> THEN
                ENTRY.FOUND = 1
                IF Y.CONCAT.REC THEN
                    Y.CONCAT.REC := FM:Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                END ELSE
                    Y.CONCAT.REC = Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                END
            END ELSE
                Y.END = "END"
            END
        END
    REPEAT
    IF SORT.FLD = "BOOKING.DATE" THEN
        GOSUB SORT.ENT.BY.BOOKING.DATE
    END
    RETURN
*
*-----------------------------------------------------------------------
*
MATCH.DATE.GREATER.THAN:
*=======================
*
    Y.DATE = YENQ.LIST<1,1> + 1
    LOCATE Y.DATE IN YACCT.STMT.DATES<1> BY 'AR' SETTING YPOS ELSE
        NULL
    END
    IF YACCT.STMT.DATES<YPOS> = "" THEN
        GOSUB GET.ENTRIES
    END ELSE
        IF YACCT.STMT.DATES<YPOS> = "PASSBOOK" THEN
            GOSUB GET.LAST.PRINT.BAL
        END ELSE
            YOPEN.BAL = YACCT.STMT.BAL<YPOS>
        END
        YCOUNT = YPOS
        LOOP
            GOSUB READ.ENTRY.IDS
            IF YCOUNT NE YPOS THEN
                GOSUB EXTRACT.ENTRY.IDS
            END ELSE
                GOSUB GET.ENTRIES.GT
            END
            YPOS += 1
        UNTIL YACCT.STMT.DATES<YPOS> EQ ""
        REPEAT
    END
    GOSUB GET.ENTRIES.GT
    RETURN
*
GET.ENTRIES.GT:
*==============
*
    LOOP
        REMOVE YENTRY.ID FROM YR.ENTRY.FILE SETTING YCODE
    UNTIL YENTRY.ID = ""
        GOSUB READ.ENTRY
        IF YR.STMT.ENTRY THEN
            IF YR.STMT.ENTRY<AC.STE.BOOKING.DATE> GT YENQ.LIST<1,1> THEN
                ENTRY.FOUND = 1
                IF Y.CONCAT.REC THEN
                    Y.CONCAT.REC := FM:Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                END ELSE
                    Y.CONCAT.REC = Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                END
            END ELSE
                GOSUB OPENING.BALANCE
            END
        END
    REPEAT
    IF SORT.FLD = "BOOKING.DATE" THEN
        GOSUB SORT.ENT.BY.BOOKING.DATE
    END
    RETURN
*
*-----------------------------------------------------------------------
*
MATCH.DATE.GE:
*=============
*
    LOCATE YENQ.LIST<1,1> IN YACCT.STMT.DATES<1> BY 'AR' SETTING YPOS ELSE
        NULL
    END
    IF YACCT.STMT.DATES<YPOS> = "" THEN
        Y.DATE = YENQ.LIST<1,1>
        GOSUB GET.ENTRIES
    END ELSE
        IF YACCT.STMT.DATES<YPOS> = "PASSBOOK" THEN
            GOSUB GET.LAST.PRINT.BAL
        END ELSE
            YOPEN.BAL = YACCT.STMT.BAL<YPOS>
            YOPEN.BAL = SUM(YOPEN.BAL)
        END
        YCOUNT = YPOS
        LOOP
            GOSUB READ.ENTRY.IDS
            IF YCOUNT NE YPOS THEN
                GOSUB EXTRACT.ENTRY.IDS
            END ELSE
                GOSUB GET.ENTRIES.GE
            END
            YPOS += 1
        UNTIL YACCT.STMT.DATES<YPOS> EQ ""
        REPEAT
    END
    GOSUB GET.ENTRIES.GE
    RETURN
*
GET.ENTRIES.GE:
*==============
*
    LOOP
        REMOVE YENTRY.ID FROM YR.ENTRY.FILE SETTING YCODE
    UNTIL YENTRY.ID = ""
        GOSUB READ.ENTRY
        IF YR.STMT.ENTRY THEN
            IF YR.STMT.ENTRY<AC.STE.BOOKING.DATE> GE YENQ.LIST<1,1> THEN
                ENTRY.FOUND = 1
                IF Y.CONCAT.REC THEN
                    Y.CONCAT.REC := FM:Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL:"*":YR.STMT.ENTRY<AC.STE.BOOKING.DATE>:'*'
                END ELSE
                    Y.CONCAT.REC = Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL:"*":YR.STMT.ENTRY<AC.STE.BOOKING.DATE>:'*'
                END
            END ELSE
                GOSUB OPENING.BALANCE
            END
        END
    REPEAT
    IF SORT.FLD = "BOOKING.DATE" THEN
        GOSUB SORT.ENT.BY.BOOKING.DATE
    END
    RETURN
*
*-----------------------------------------------------------------------
*
MATCH.DATE.NR:
*=============
*
    YSTART.DATE = YENQ.LIST<1,1>
    IF YENQ.LIST<1,2> NE '' THEN
        YEND.DATE = YENQ.LIST<1,2> + 1
    END ELSE
        YEND.DATE = YENQ.LIST<1,1> + 1
    END
    IF YACCT.STMT.DATES = "" THEN
        GOSUB GET.LAST.PRINT.BAL
    END ELSE
        LOCATE YSTART.DATE IN YACCT.STMT.DATES<1> BY 'AR' SETTING YCOUNT ELSE
            NULL
        END
        YOPEN.BAL = YACCT.STMT.BAL<1>
        YCOUNT -= 1
        FOR YPOS = 1 TO YCOUNT
            GOSUB READ.ENTRY.IDS
            GOSUB EXTRACT.ENTRY.IDS
        NEXT YPOS
        YPOS = YCOUNT + 1
        GOSUB READ.ENTRY.IDS
        GOSUB GET.ENTRIES.NR.PRE
        LOCATE YEND.DATE IN YACCT.STMT.DATES<1> BY 'AR' SETTING YPOS ELSE
            NULL
        END
        GOSUB READ.ENTRY.IDS
        GOSUB GET.ENTRIES.NR.POST
        YPOS += 1
        LOOP
        UNTIL YACCT.STMT.DATES<YPOS> = ''
            GOSUB READ.ENTRY.IDS
            GOSUB EXTRACT.ENTRY.IDS
            YPOS += 1
        REPEAT
    END
    GOSUB GET.ENTRIES.NR.PRE
    GOSUB GET.ENTRIES.NR.POST
    RETURN
*
GET.ENTRIES.NR.PRE:
*==================
*
    Y.END = ''
    LOOP
        REMOVE YENTRY.ID FROM YR.ENTRY.FILE SETTING YCODE
    UNTIL YENTRY.ID = '' OR Y.END = 'END'
        GOSUB READ.ENTRY
        IF YR.STMT.ENTRY THEN
            IF YR.STMT.ENTRY<AC.STE.BOOKING.DATE> LT YSTART.DATE THEN
                ENTRY.FOUND = 1
                IF Y.CONCAT.REC THEN
                    Y.CONCAT.REC := FM:Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                END ELSE
                    Y.CONCAT.REC = Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                END
            END ELSE
                Y.END = 'END'
            END
        END
    REPEAT
    IF SORT.FLD = "BOOKING.DATE" THEN
        GOSUB SORT.ENT.BY.BOOKING.DATE
    END
    RETURN
*
GET.ENTRIES.NR.POST:
*===================
*
    LOOP
        REMOVE YENTRY.ID FROM YR.ENTRY.FILE SETTING YCODE
    UNTIL YENTRY.ID = ''
        GOSUB READ.ENTRY
        IF YR.STMT.ENTRY THEN
            IF YR.STMT.ENTRY<AC.STE.BOOKING.DATE> GT YEND.DATE THEN
                ENTRY.FOUND = 1
                IF Y.CONCAT.REC THEN
                    Y.CONCAT.REC := FM:Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                END ELSE
                    Y.CONCAT.REC = Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL
                END
            END
        END
    REPEAT
    IF SORT.FLD = "BOOKING.DATE" THEN
        GOSUB SORT.ENT.BY.BOOKING.DATE
    END
    RETURN
*
*-----------------------------------------------------------------------
*
EXTRACT.ENTRY.IDS:
*=================
*
    LOOP
        REMOVE YENTRY.ID FROM YR.ENTRY.FILE SETTING YCODE
    UNTIL YENTRY.ID = ''
        YSTMT.CHK = 1
        READ R.ENTRY FROM F.STMT.ENTRY,YENTRY.ID THEN
            ENTRY.FOUND = 1
            ADD.DET = Y.AC.NO:"*":YENTRY.ID:"*":YOPEN.BAL:"*":R.ENTRY<AC.STE.BOOKING.DATE>:"*":R.ENTRY<AC.STE.ACCOUNT.NUMBER>
            IF Y.CONCAT.REC THEN
                Y.CONCAT.REC := FM:ADD.DET
            END ELSE
                Y.CONCAT.REC = ADD.DET
            END
        END
    REPEAT
    RETURN
*
*-----------------------------------------------------------------------
*
GET.ENTRIES:
***********
    GOSUB GET.LAST.PRINT.BAL
    IF Y.DATE GT YACCT.STMT.DATES<YPOS-1> AND YACCT.STMT.DATES<YPOS-1> GT YR.ACCOUNT.STATEMENT<AC.STA.FQU1.LAST.DATE> THEN
        READ YENTRY.IDS FROM F.STMT.PRINTED,Y.AC.NO:'-':YACCT.STMT.DATES<YPOS-1> ELSE YENTRY.IDS = ''
        LOOP
            REMOVE YENTRY.ID FROM YENTRY.IDS SETTING ENT.POS
        UNTIL YENTRY.ID = ''
            GOSUB READ.ENTRY
            GOSUB OPENING.BALANCE
        REPEAT
        RETURN
    END
    RETURN
*
*-----------------------------------------------------------------------
*
BUILD.CONCAT.LIST:
*=================
*
*
* Read the ACCOUNT.STATEMENT record and ACCT.STMT.PRINTED
*
*
* Extract the dates only from YR.ACCT.STMT.PRINT to allow locate to work
*
    YR.ACCOUNT.STATEMENT = '' ; YERR = '' ; YACCT.NO = ''
    CALL F.READ('F.ACCOUNT.STATEMENT',Y.AC.NO,YR.ACCOUNT.STATEMENT,F.ACCOUNT.STATEMENT,YERR)
    IF YERR THEN
        YERR = ''
        YACCT.NO = Y.AC.NO
        CALL EB.READ.HISTORY.REC(F.ACCOUNT.STATEMENT$HIS,YACCT.NO,YR.ACCOUNT.STATEMENT,YERR)
    END
    IF NOT(YERR) THEN
        IF YR.ACCOUNT.STATEMENT<AC.STA.CURRENCY> = LCCY THEN
            YAMOUNT.POS = AC.STE.AMOUNT.LCY
        END ELSE
            YAMOUNT.POS = AC.STE.AMOUNT.FCY
        END
    END ELSE
        YR.ACCOUNT.STATEMENT = ''
        YAMOUNT.POS=0         ;* eg. account closed; can be determined later by stmt entry
    END

    YACCT.STMT.DATES = "" ; YACCT.STMT.TYPE = "" ; YACCT.STMT.BAL = ""
    YLAST.DATE = "" ; YACCT.AC.NO = ""
    SAVE.Y.AC.NO = Y.AC.NO
    LOOP
        REMOVE ACC.NO FROM SUB.ACC.LIST SETTING POS
    WHILE ACC.NO:POS
        GOSUB BUILD.CONCAT
    REPEAT
*
* Existing code to refer stmt-2 fqu files removed since the frequencies
* are made independent and relationship concept is changed to allow
* multiple frequencies.
*
    IF FWD.MVMT.FLAG THEN
        STMT.DATE.FIELD = AC.STE.STMT1.DATE
    END
    ENTRY.FOUND = 0
    YOPERAND = YOPERAND.DT
    ON YOPERAND GOSUB MATCH.DATE.EQUAL,
    MATCH.DATE.RANGE,
    MATCH.DATE.LESS.THAN,
    MATCH.DATE.GREATER.THAN,
    MATCH.DATE.NOT,
    MATCH.DATE.LIKE,
    MATCH.DATE.UNLIKE,
    MATCH.DATE.LE,
    MATCH.DATE.GE,
    MATCH.DATE.NR
*
* CB8800866. If no entries found then pass a null value for the account
*
    Y.AC.NO = SAVE.Y.AC.NO
    IF NOT(ENTRY.FOUND)AND R.ACCT THEN
        Y.CONCAT.REC<-1> = Y.AC.NO:"*":"*":YOPEN.BAL
    END

    RETURN

************************************************************8
BUILD.CONCAT:
*************
*
* This was causing problems viz...
* Local currency accounts were having YAMOUNT.POS set to AC.STE.AMOUNT.FCY
* and thus opening balance was Allways Zero.

    READ YR.ACCT.STMT.PRINT FROM F.ACCT.STMT.PRINT, ACC.NO ELSE
        YR.ACCT.STMT.PRINT = ''
    END
    LOOP
    UNTIL YR.ACCT.STMT.PRINT<1> = ''
*
* EB8800923. If a special statement has been produced on the same day as
* the frequency 1 statement there will be 2 entries on ACCT.STMT.PRINT
* for the same date. Do not include the second in the date array.
*
        YDATE = FIELD(YR.ACCT.STMT.PRINT<1>,"/",1)
* needs to be a locate

* need an array of dates and account numbers


        LOCATE YDATE IN YACCT.STMT.DATES BY 'AR' SETTING POS THEN
            YACCT.AC.NO<POS,-1> = ACC.NO
            YACCT.STMT.BAL<POS,-1> = FIELD(YR.ACCT.STMT.PRINT<1>,"/",2) *1
            YACCT.STMT.TYPE<POS,-1> = 1
        END ELSE
            INS YDATE BEFORE YACCT.STMT.DATES<POS>
            INS FIELD(YR.ACCT.STMT.PRINT<1>,"/",2) *1 BEFORE YACCT.STMT.BAL<POS>
            INS 1 BEFORE YACCT.STMT.TYPE<POS>
            INS ACC.NO BEFORE YACCT.AC.NO<POS>
        END
*
        DEL YR.ACCT.STMT.PRINT<1>

    REPEAT

    RETURN

*-----------------------------------------------------------------------
*
READ.ENTRY.IDS:
*==============
*
    YR.ENTRY.FILE = ""
    AC.COUNT = DCOUNT(YACCT.AC.NO<YPOS>,VM)
    FOR AC.CNT = 1 TO AC.COUNT
        GOSUB READ.ENTRY.ID
    NEXT AC.CNT
*
    RETURN

*------------------------------------------------------------------------
READ.ENTRY.ID:
*=============

    ACC.NO =  YACCT.AC.NO<YPOS,AC.CNT>
    IF YACCT.STMT.TYPE<YPOS,AC.CNT> = 1 THEN
*
*** Change key to use '-' instead of '.' GB7900049
*
        ID.STMT.PRINTED = ACC.NO:'-':YACCT.STMT.DATES<YPOS>
        READ YR.ENTRY.LIST FROM F.STMT.PRINTED, ID.STMT.PRINTED ELSE
            YR.ENTRY.LIST = ''
        END
        IF YR.ENTRY.LIST THEN
            IF YR.ENTRY.FILE THEN
                YR.ENTRY.FILE<-1> = YR.ENTRY.LIST
            END ELSE
                YR.ENTRY.FILE = YR.ENTRY.LIST
            END
        END

* Add stmt entries from FWD.STMT1.PRINTED

        IF FWD.MVMT.FLAG THEN
            READ FWD.STMT1.LIST FROM F.FWD.STMT1.PRINTED, ACC.NO:'-':YACCT.STMT.DATES<YPOS> ELSE
                FWD.STMT1.LIST = ''
            END
            IF FWD.STMT1.LIST THEN
                YR.ENTRY.FILE<-1> = FWD.STMT1.LIST
            END
        END

    END ELSE
        IF YR.ACCOUNT.STATEMENT<AC.STA.STMT.FQU.2> # "" THEN
            FREQ.NOS = DCOUNT(YR.ACCOUNT.STATEMENT<AC.STA.FREQ.NO>,VM)

            FOR I = 1 TO FREQ.NOS
* If the freq is other than "2" then concatenate that freq with ac no.
                IF YR.ACCOUNT.STATEMENT<AC.STA.FREQ.NO,I> = "2" THEN
                    STMT2.PRINTED.ID = ACC.NO:"-":YACCT.STMT.DATES<YPOS>
                END ELSE
                    STMT2.PRINTED.ID = ACC.NO:".":YR.ACCOUNT.STATEMENT<AC.STA.FREQ.NO,I>:"-":YACCT.STMT.DATES<YPOS>
                END
                READ REC.ENTRY.FILE FROM F.STMT2.PRINTED,STMT2.PRINTED.ID ELSE
                    REC.ENTRY.FILE = ""
                END


                IF FWD.MVMT.FLAG THEN
                    READ FWD.STMT2.LIST FROM F.FWD.STMT2.PRINTED,STMT2.PRINTED.ID ELSE
                        FWD.STMT2.LIST = ''
                    END
                    IF FWD.STMT2.LIST THEN
                        IF YR.ENTRY.FILE THEN
                            YR.ENTRY.FILE<-1> = FWD.STMT2.LIST
                        END ELSE
                            YR.ENTRY.FILE = FWD.STMT2.LIST
                        END
                    END
                END
            NEXT I
        END

* Add stmt entries from FWD.STMT2.PRINTED
    END

    RETURN
*-----------------------------------------------------------------------
*
GET.LAST.PRINT.BAL:
*==================
*
* Existing code to refer fqu-2 if the relationship is combined is
* removed since each frequency is made independent and relationship
* field is made obsolate.
*
    YOPEN.BAL = YR.ACCOUNT.STATEMENT<AC.STA.FQU1.LAST.BALANCE>
    IF FWD.MVMT.FLAG THEN
        STMT.DATE.FIELD = AC.STE.STMT1.DATE
    END

*
* EB8800496. If there is no last balance set this to zero
*
    IF YOPEN.BAL = "" THEN
        YOPEN.BAL = 0
    END
    RETURN
*
*-----OPENING BALANCE----------------------------------------------------
*
OPENING.BALANCE:
    IF NOT(YAMOUNT.POS) THEN
        BEGIN CASE
        CASE YR.STMT.ENTRY<AC.STE.CURRENCY>=LCCY
            YAMOUNT.POS=AC.STE.AMOUNT.LCY
        CASE YR.STMT.ENTRY<AC.STE.CURRENCY>=''
            YAMOUNT.POS=AC.STE.AMOUNT.LCY
        CASE 1
            YAMOUNT.POS=AC.STE.AMOUNT.FCY
        END CASE
    END

* Amount of only those stmt entries which are not already printed
* should only be added to the opening balance because this would
* have already been added to account statement last balance.

    IF FWD.MVMT.FLAG THEN
        IF YR.STMT.ENTRY<STMT.DATE.FIELD> EQ "" THEN
            YOPEN.BAL +=YR.STMT.ENTRY<YAMOUNT.POS>
        END
    END ELSE
        YOPEN.BAL += YR.STMT.ENTRY<YAMOUNT.POS>
    END
    RETURN
*
*----------------------------------------------------------
READ.ENTRY:
* Read entry and check for duplicates which can happen during the eod.
*
    YR.STMT.ENTRY = ""        ;* Return null if can't read or duplicate

    LOCATE YENTRY.ID IN ENTRYID.LIST<1> SETTING POS ELSE
        READ YR.STMT.ENTRY FROM F.STMT.ENTRY, YENTRY.ID ELSE
            YR.STMT.ENTRY = ''
        END
        IF ENTRYID.LIST THEN
            ENTRYID.LIST:=@FM: YENTRY.ID
        END ELSE
            ENTRYID.LIST = YENTRY.ID
        END
    END

    RETURN
*-----------------------------------------------------------------------------
*
SORT.ENT.BY.BOOKING.DATE:
*------------------------
*
    BOOK.DATES = ""
    CONCAT.REC = Y.CONCAT.REC
    STMT.CNT = DCOUNT(CONCAT.REC,FM)
    FOR K = 1 TO STMT.CNT
        STMT.ID = FIELD(CONCAT.REC<K>,"*",2)
        READ STMT.ENT.REC FROM F.STMT.ENTRY,STMT.ID ELSE
            STMT.ENT.REC = ""
        END
        IF STMT.ENT.REC THEN
            IF BOOK.DATES THEN
                BOOK.DATES<-1> = STMT.ENT.REC<AC.STE.BOOKING.DATE>
            END ELSE
                BOOK.DATES = STMT.ENT.REC<AC.STE.BOOKING.DATE>
            END
        END
    NEXT K
*
    IF SORT.BY # 'DSND' THEN
        FOR I = 1 TO STMT.CNT-1
            FOR J = I+1 TO STMT.CNT
                IF BOOK.DATES<I> GT BOOK.DATES<J> THEN
                    TEMP.CONCAT.REC = CONCAT.REC<I>
                    TEMP.DATE = BOOK.DATES<I>
                    CONCAT.REC<I> = CONCAT.REC<J>
                    BOOK.DATES<I> = BOOK.DATES<J>
                    CONCAT.REC<J> = TEMP.CONCAT.REC
                    BOOK.DATES<J> = TEMP.DATE
                END
            NEXT J
        NEXT I
    END ELSE
        FOR I = 1 TO STMT.CNT-1
            FOR J = I+1 TO STMT.CNT
                IF BOOK.DATES<I> LT BOOK.DATES<J> THEN
                    TEMP.CONCAT.REC = CONCAT.REC<I>
                    TEMP.CONCAT.REC = CONCAT.REC<I>
                    TEMP.DATE = BOOK.DATES<I>
                    CONCAT.REC<I> = CONCAT.REC<J>
                    BOOK.DATES<I> = BOOK.DATES<J>
                    CONCAT.REC<J> = TEMP.CONCAT.REC
                    BOOK.DATES<J> = TEMP.DATE
                END
            NEXT J
        NEXT I
    END
*
    Y.CONCAT.REC = CONCAT.REC
    RETURN
*
*-----------------------------------------------------------------------------------------
*
CHECK.OTH.BOOK.ACCESS:
*---------------------
*
    NEXT.ACCT.FLAG = ''
    R.ACCT = '' ; AC.POS = '' ; SUB.ACC.LIST = Y.AC.NO
    READ R.ACCT FROM F.ACCOUNT,Y.AC.NO THEN
        IF R.ACCT<AC.CO.CODE> NE ID.COMPANY THEN
            LOCATE R.ACCT<AC.CO.CODE> IN R.USER<EB.USE.OTH.BOOK.ACCESS,1> SETTING AC.POS ELSE
                Y.AC.POS = ''
                Y.COMPANY.ID = R.USER<EB.USE.OTH.BOOK.ACCESS,1>
                READ R.CSG FROM F.COMP.SMS.GRP,Y.COMPANY.ID THEN
                    LOCATE R.ACCT<AC.CO.CODE> IN R.CSG<CO.SMS.COMPANY.CODE,1> SETTING Y.AC.POS ELSE
                        Y.CONCAT.REC <-1>= Y.AC.NO:"**":0
                        NEXT.ACCT.FLAG = 1
                    END
                END ELSE
                    Y.CONCAT.REC <-1>= Y.AC.NO:"**":0
                    NEXT.ACCT.FLAG = 1
                END
            END
        END
        IF R.ACCT<AC.MAX.SUB.ACCOUNT> THEN
            CALL F.READ("F.AC.SUB.ACCOUNT",Y.AC.NO,R.SUB.ACC.LIST,F.AC.SUB.ACCOUNT,ER)
            IF R.SUB.ACC.LIST THEN
                SUB.ACC.LIST := FM:R.SUB.ACC.LIST
            END
        END
        IF ENQ.SELECTION<9> = "BOOKING.DATE" THEN
            SORT.FLD = "BOOKING.DATE"
        END
    END ELSE
        ENQ.ERROR = "AC.ACS.AC.DOES.NOT.EXIST.COMP"
    END
*
    RETURN
*-----------------------------------------------------------------------------------------
*
END
