*-----------------------------------------------------------------------------
* <Rating>-145</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE  ABL.S.CD.STD.HALF.YR.CHRG
!----------------------------------------------------------------------------------
!This Mainline is for Half yearly charges for CD and STD account.
!It reads the local parameter file ABL.H.CDSTD.HY
!----------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ACCOUNT
    $INSERT I_F.ABL.H.CDSTD.HY

    GOSUB INIT
    GOSUB OPENFILES
    GOSUB PROCESS

INIT:
    FN.ACC='F.ACCOUNT'
    F.ACC=''
    REC.ACC=''
    Y.AC.ID=''
    Y.CHRG.INTERNAL.AC=''

    FN.CDSTD.HF='F.ABL.H.CDSTD.HY'
    F.CDSTD.HF=''
    Y.CDSTD.HF.ID=''
    REC.CDSTD.HF=''

    Y.CD.CHRG.AMT=''
    Y.CD.VAT.AMT=''
    Y.CD.CHRG.AMT.SLAB=''
    Y.CHRG.INTERNAL.AC=''
    Y.VAT.PER=''
    Y.FT.COMM=''
    Y.EXCLUDE.AC.LIST=''

    RETURN

OPENFILES:
    CALL OPF(FN.ACC,F.ACC)
    CALL OPF(FN.CDSTD.HF,F.CDSTD.HF)
    RETURN

PROCESS:
!-----Half Yearly Charge For Current Account ----!
!---Charge Tk 200/- + VAT Tk 30

    CALL F.READ(FN.CDSTD.HF,'SYSTEM',REC.CDSTD.HF.SYS,F.CDSTD.HF,ERR.CDSTD.HF)
    IF REC.CDSTD.HF.SYS EQ '' THEN
        ETEXT="There must be a record SYSTEM in ABL.H.CDSTD.HY"
        CALL STORE.END.ERROR
        RETURN
    END

    Y.CD.CHRG.AMT.SLAB=REC.CDSTD.HF.SYS<HF.CHRG.SLAB.AMT>
    Y.CHRG.INTERNAL.AC="PL":REC.CDSTD.HF.SYS<HF.CHRG.CATEG>
    Y.VAT.PER=REC.CDSTD.HF.SYS<HF.VAT.PERCENT>
    Y.FT.COMM=REC.CDSTD.HF.SYS<HF.FT.COMM>

    SEL.CMD.CDSTD.HF="SELECT ":FN.CDSTD.HF:" WITH @ID NE 'SYSTEM'"
    CALL EB.READLIST(SEL.CMD.CDSTD.HF,SEL.LIST.CDSTD.HF,'',NO.OF.REC.CDSTD.HF,ERR.CDSTD.HF)
    REC.CDSTD.HF=''
    J="1"
    LOOP
        REMOVE Y.CDSTD.HF.ID FROM SEL.LIST.CDSTD.HF SETTING CDSTD.HF.POS
    WHILE Y.CDSTD.HF.ID:CDSTD.HF.POS
        CALL F.READ(FN.CDSTD.HF,Y.CDSTD.HF.ID,REC.CDSTD.HF,F.CDSTD.HF,ERR1.CDSTD.HF)
        IF  NO.OF.REC.CDSTD.HF EQ '1' OR J EQ '1' THEN
            Y.EXCLUDE.AC.LIST = Y.EXCLUDE.AC.LIST:REC.CDSTD.HF<HF.EXCLUDE.ACCT>
            J=J+1
        END ELSE
            Y.EXCLUDE.AC.LIST = Y.EXCLUDE.AC.LIST:"ý":REC.CDSTD.HF<HF.EXCLUDE.ACCT>
        END
        REC.CDSTD.HF=''
    REPEAT

    SEL.CMD.AC="SELECT ":FN.ACC:" WITH MAIN.CHARGE NE 'Waive' AND ( CO.CODE EQ "
    CNT.CO = DCOUNT(REC.CDSTD.HF.SYS<HF.INCLUDE.COMP>,VM)
    FOR I = 1 TO CNT.CO
        IF I = CNT.CO THEN
            SEL.CMD.AC :=  REC.CDSTD.HF.SYS<HF.INCLUDE.COMP,I>
        END ELSE
            SEL.CMD.AC :=  REC.CDSTD.HF.SYS<HF.INCLUDE.COMP,I>:" OR CO.CODE EQ "
        END
    NEXT I
    SEL.CMD.AC= SEL.CMD.AC:" ) AND ( CATEGORY EQ "

    CNT.CATEG = DCOUNT(REC.CDSTD.HF.SYS<HF.INCLUDE.CATEG>,VM)
    FOR I = 1 TO CNT.CATEG
        IF I = CNT.CATEG THEN
            SEL.CMD.AC :=  REC.CDSTD.HF.SYS<HF.INCLUDE.CATEG,I>
        END ELSE
            SEL.CMD.AC :=  REC.CDSTD.HF.SYS<HF.INCLUDE.CATEG,I>:" OR CATEGORY EQ "
        END
    NEXT I

    IF Y.EXCLUDE.AC.LIST THEN
        SEL.CMD.AC= SEL.CMD.AC:") AND ( @ID NE "

        CONVERT FM TO VM IN Y.EXCLUDE.AC.LIST

        CNT.EX.ACC = DCOUNT(Y.EXCLUDE.AC.LIST,VM)
        FOR I = 1 TO CNT.EX.ACC
            IF I = CNT.EX.ACC THEN
                SEL.CMD.AC := Y.EXCLUDE.AC.LIST<1,I>
            END ELSE
                SEL.CMD.AC := Y.EXCLUDE.AC.LIST<1,I>:" AND @ID NE "
            END
        NEXT I

        SEL.CMD.AC= SEL.CMD.AC:") AND WORKING.BALANCE GT 0 "
    END
    ELSE
        SEL.CMD.AC= SEL.CMD.AC:") AND WORKING.BALANCE GT 0 "
    END

    CALL EB.READLIST(SEL.CMD.AC,SEL.LIST.AC,'',NO.OF.REC.AC,ERR.AC)

    CRT" TOTAL RECORDS SELECTED FOR CD AND STD HALF YEARLY CHRG ......":NO.OF.REC.AC
    CRT" DO YOU WANT TO START THE PROCESSING OF CD AND STD HALF YEARLY CHRG Y/N"
    INPUT USER.CHOICE

    IF USER.CHOICE EQ 'Y' THEN

        LOOP
            REMOVE Y.AC.ID FROM SEL.LIST.AC SETTING CD.POS
        WHILE Y.AC.ID:CD.POS
            CALL F.READ(FN.ACC,Y.AC.ID,REC.ACC,F.ACC,ERR.ACC)
            Y.CD.VAT.AMT = ( Y.CD.CHRG.AMT.SLAB * Y.VAT.PER ) / 100
            CALL EB.ROUND.AMOUNT(LCCY,Y.CD.VAT.AMT,"","")
            Y.CD.CHRG.AMT = Y.CD.CHRG.AMT.SLAB + Y.CD.VAT.AMT
            IF REC.ACC<AC.WORKING.BALANCE> LT Y.CD.CHRG.AMT THEN
                Y.CD.CHRG.AMT = ( REC.ACC<AC.WORKING.BALANCE> * 100 ) / ( Y.VAT.PER + 100 )
                CALL EB.ROUND.AMOUNT(LCCY,Y.CD.CHRG.AMT,"","")
                Y.CD.VAT.AMT = REC.ACC<AC.WORKING.BALANCE> - Y.CD.CHRG.AMT
            END
            ELSE
                Y.CD.CHRG.AMT = Y.CD.CHRG.AMT.SLAB
            END
!            Y.RETURN<-1> = Y.AC.ID:"*":REC.ACC<AC.CATEGORY>:"*":Y.CD.CHRG.AMT:"*":Y.CD.VAT.AMT:"*":REC.ACC<AC.CO.CODE>
            Y.MESSAGE="FUNDS.TRANSFER,MAIN.CHARGES/I/PROCESS,DMUSER.1//":REC.ACC<AC.CO.CODE>:",,TRANSACTION.TYPE=ACHY,DEBIT.ACCT.NO=":Y.AC.ID:",CREDIT.ACCT.NO=":Y.CHRG.INTERNAL.AC:",DEBIT.AMOUNT=":Y.CD.CHRG.AMT:",DEBIT.CURRENCY=BDT,ORDERING.BANK=ABL,DR.ADVICE.REQD.Y.N=N,CR.ADVICE.REQD.Y.N=N,COMMISSION.CODE=DEBIT PLUS CHARGES,COMMISSION.TYPE=":Y.FT.COMM:",COMMISSION.AMT=BDT ":Y.CD.VAT.AMT
            GOSUB DO.TRANSACTION
            Y.CD.CHRG.AMT = ''
            Y.CD.VAT.AMT  = ''
            REC.AC=''
        REPEAT
    END
    RETURN

DO.TRANSACTION:
    *RUNNING.UNDER.BATCH=1
    Y.SOURCE="DM.OFS.SRC"
   * CALL OFS.GLOBUS.MANAGER(Y.SOURCE,Y.MESSAGE)
    *RUNNING.UNDER.BATCH=0
    *SENSITIVITY=''

	    OPTNS = ''
            MSG.ID = ''
            CALL OFS.POST.MESSAGE(Y.MESSAGE, MSG.ID , Y.SOURCE, OPTNS)
            CALL JOURNAL.UPDATE ('TEST')

    Y.STATUS =FIELD(FIELD(Y.MESSAGE,"/",3,1),",",1)
    Y.MESSAGE = ''
    IF Y.STATUS EQ '1' THEN
        CNT =CNT+1
        CRT" PROCESS................":CNT
    END

    RETURN
END
