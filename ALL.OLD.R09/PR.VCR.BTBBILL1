*-----------------------------------------------------------------------------
* <Rating>357</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE PR.VCR.BTBBILL1
!PROGRAM PR.VCR.BTBBILL
*----------------------------------------------------------------------------
*displays the advse ref no when the record opend in a particular format
*----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.LETTER.OF.CREDIT
    $INSERT I_F.DRAWINGS
    $INSERT I_F.INTERCO.PARAMETER
    $INSERT I_F.PR.H.ADCODES
    $INSERT I_F.COMPANY
    $INSERT I_F.PR.T.BRCODE.SEQ.NO1

    GOSUB INITIALISE
    GOSUB OPENFILES
    GOSUB CHECK.REFNO
    RETURN

INITIALISE:

    FN.LETTER.OF.CREDIT="F.LETTER.OF.CREDIT"
    F.LETTER.OF.CREDIT=""
    FN.PR.T.BRCODE.SEQ.NO="F.PR.T.BRCODE.SEQ.NO1"
    F.PR.T.BRCODE.SEQ.NO=""
    FN.PR.H.ADCODES="F.PR.H.ADCODES"
    F.PR.H.ADCODES=""
    CALL OPF(FN.PR.H.ADCODES,F.PR.H.ADCODES)
    FN.DRAWINGS="F.DRAWINGS"
    F.DRAWINGS=""

    RETURN

OPENFILES:

    CALL OPF(FN.LETTER.OF.CREDIT,F.LETTER.OF.CREDIT)
    CALL OPF(FN.PR.T.BRCODE.SEQ.NO,F.PR.T.BRCODE.SEQ.NO)
    CALL OPF(FN.DRAWINGS,F.DRAWINGS)
    RETURN

CHECK.REFNO:
!DEBUG
    Y.ID=ID.NEW
    Y.ID1=Y.ID[1,12]

    CALL F.READ(FN.LETTER.OF.CREDIT,Y.ID1,R.LETTER.OF.CREDIT,F.LETTER.OF.CREDIT,Y.ERR)

!CALL GET.LOC.REF("LETTER.OF.CREDIT","ADVISE.REF.NO",Y.ADV.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","JOB.NO",Y.JOB.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","INDENTOR.NAME",Y.IND.NAM)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","INDENTOR.ADDRES",Y.IND.ADD)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","INDENTOR.PR.NO",Y.IND.BNKNO)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","IND.CCIE.PR.NO",Y.IND.NUM)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","TENOR.DAYS",Y.TEN.POS)

    CALL GET.LOC.REF("DRAWINGS","TENOR.DAYS",Y.TEN.NUM)
    CALL GET.LOC.REF("DRAWINGS","JOB.NO",D.JOB.POS)
    CALL GET.LOC.REF("DRAWINGS","INDENTOR.NAME",D.IND.NAM)
    CALL GET.LOC.REF("DRAWINGS","INDENTOR.ADDRES",D.IND.ADD)
    CALL GET.LOC.REF("DRAWINGS","INDENTOR.PR.NO",D.IND.BNKNO)
    CALL GET.LOC.REF("DRAWINGS","IND.CCIE.PR.NO",D.IND.NUM)
    CALL GET.LOC.REF("DRAWINGS","APPL.CUST.NO",Y.IMP.CUS.NO)
    CALL GET.LOC.REF("DRAWINGS","IMPORTER.NAME",D.IMP.POS)
    CALL GET.LOC.REF("DRAWINGS","EXPORTER.NAME",D.EXP.POS)
    CALL GET.LOC.REF("DRAWINGS","BTB.BILL.NO",Y.BILL.POS)
    CALL GET.LOC.REF("DRAWINGS","LC.NO",Y.BTB.LC.NO.POS)
    CALL GET.LOC.REF("DRAWINGS","EXPORT.LC.DATE",Y.BTB.ISS.DT.POS)
    CALL GET.LOC.REF("DRAWINGS","CAT.CODE",D.LC.CATE.POS)


    IF R.NEW.LAST(TF.DR.LOCAL.REF)<1,Y.BILL.POS> EQ '' AND R.OLD(TF.DR.LOCAL.REF)<1,Y.BILL.POS> EQ '' AND V$FUNCTION EQ "I" OR V$FUNCTION EQ "A" OR V$FUNCTION EQ "C" THEN

        Y.MNEMONIC=R.COMPANY(EB.COM.MNEMONIC)
        Y.FIN.MNEMONIC=R.INTERCO.PARAMETER<ST.ICP.FIN.MNEMONIC>
        Y.BRANCH.CODE1=R.INTERCO.PARAMETER<ST.ICP.BRANCH.CODE>
        CONVERT SM TO VM IN Y.BRANCH.CODE1

        Y.BRANCH.CODE=R.COMPANY(EB.COM.SUB.DIVISION.CODE)
        CALL F.READ(FN.PR.H.ADCODES,Y.BRANCH.CODE,R.PR.H.ADCODES,F.PR.H.ADCODES,Y.ERR)
        Y.ADCODE=R.PR.H.ADCODES<AD.ADCODE>

        IF Y.BRANCH.CODE EQ '' THEN
            ETEXT = "BRANCH CODE NOT PRESENT"
        END ELSE
            Y.ADVICE="BTBBILL"
            Y.DATE1=TODAY[3,2]
            Y.DATE=Y.MNEMONIC:APPLICATION:PGM.VERSION:".":TODAY[3,2]
!      CALL F.READ(FN.PR.T.BRCODE.SEQ.NO,Y.ADCODE,R.PR.T.BRCODE.SEQ.NO,F.PR.T.BRCODE.SEQ.NO,Y.ERR)
            OPEN 'F.LOCKING' TO F.LOCKING ELSE F.LOCKING=''
READ.ID:
            READ.ERR  =  ''
*generates the serial number
            READU R.PR.T.BRCODE.SEQ.NO FROM F.LOCKING,Y.DATE LOCKED
                SLEEP 10
                GOTO READ.ID
            END THEN NULL
            R.PR.T.BRCODE.SEQ.NO<1>+=1
            IF R.PR.T.BRCODE.SEQ.NO<1> = 9999 THEN R.PR.T.BRCODE.SEQ.NO<1>=1
            Y.SERIAL.NO1 = R.PR.T.BRCODE.SEQ.NO<1>+0
            Y.SERIAL.NO1=FMT(Y.SERIAL.NO1,'R%4')
            CALL  F.RELEASE("F.LOCKING",  Y.DATE,  F.LOCKING)
            WRITE R.PR.T.BRCODE.SEQ.NO TO F.LOCKING,Y.DATE ON ERROR NULL
*updating the concat table
            CALL CONCAT.FILE.UPDATE(FN.PR.T.BRCODE.SEQ.NO,Y.ADCODE,Y.SERIAL.NO1,"I","AL")
            CALL F.RELEASE(FN.PR.T.BRCODE.SEQ.NO,Y.DATE,F.PR.T.BRCODE.SEQ.NO)
            IF R.NEW(TF.DR.LOCAL.REF)<1,Y.BILL.POS> EQ '' THEN
                R.NEW(TF.DR.LOCAL.REF)<1,Y.BILL.POS>= Y.ADCODE:"/":Y.ADVICE:"/":Y.SERIAL.NO1:"/":Y.DATE1
            END
        END
    END

    RETURN
END
