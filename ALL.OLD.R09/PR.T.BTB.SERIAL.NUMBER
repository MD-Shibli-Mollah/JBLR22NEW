*-----------------------------------------------------------------------------
* <Rating>136</Rating>
*-----------------------------------------------------------------------------
* Version 5 02/06/00  GLOBUS Release No. G15.0.01 31/08/04

    SUBROUTINE PR.T.BTB.SERIAL.NUMBER

*MODIFICATIONS
*************************************************************************
*18/05/00 - GB0001261
*           Jbase changes.
*          All the commented lines containing the keyword ERROR
*          has been changed to V$ERROR

*
* 02/09/02 - GLOBUS_EN_10001055
*          Conversion Of all Error Messages to Error Codes
*
*MODIFICATIONS
*****************************************************************
*18/05/00 - GB0001261
*           Jbase changes.
*           All commented lines containing the key word ERROR has been
*           changed to V$ERROR.

    $INSERT I_COMMON
    $INSERT I_EQUATE

*************************************************************************

    GOSUB DEFINE.PARAMETERS

    IF LEN(V$FUNCTION) GT 1 THEN
        GOTO V$EXIT
    END

    CALL MATRIX.UPDATE

REM > GOSUB INITIALISE                ;* Special Initialising

*************************************************************************

* Main Program Loop

    LOOP

        CALL RECORDID.INPUT

    UNTIL MESSAGE = 'RET' DO

        V$ERROR = ''

        IF MESSAGE = 'NEW FUNCTION' THEN

            GOSUB CHECK.FUNCTION        ;* Special Editing of Function

            IF V$FUNCTION EQ 'E' OR V$FUNCTION EQ 'L' THEN
                CALL FUNCTION.DISPLAY
                V$FUNCTION = ''
            END

        END ELSE

REM >       GOSUB CHECK.ID                     ;* Special Editing of ID
REM >       IF V$ERROR THEN GOTO MAIN.REPEAT

            CALL RECORD.READ

            IF MESSAGE = 'REPEAT' THEN
                GOTO MAIN.REPEAT
            END

            CALL MATRIX.ALTER

            CALL TABLE.DISPLAY          ;* For Table Files

        END

MAIN.REPEAT:
    REPEAT

    V$EXIT:
    RETURN          ;* From main program

*************************************************************************
*                      Special Tailored Subroutines                     *
*************************************************************************

CHECK.ID:

* Validation and changes of the ID entered.  Set ERROR to 1 if in error.


    RETURN


*************************************************************************

CHECK.FUNCTION:

* Validation of function entered.  Set FUNCTION to null if in error.

    IF INDEX('V',V$FUNCTION,1) THEN
        E ='EB.RTN.FUNT.NOT.ALLOWED.APP.17'
        CALL ERR
        V$FUNCTION = ''
    END

    RETURN

*************************************************************************

INITIALISE:


    RETURN

*************************************************************************

DEFINE.PARAMETERS:  * SEE 'I_RULES' FOR DESCRIPTIONS *


    MAT F = "" ; MAT N = "" ; MAT T = ""
    MAT CHECKFILE = "" ; MAT CONCATFILE = ""
    ID.CHECKFILE = "" ; ID.CONCATFILE = ""

    ID.F  = "BTB.TYPE"; ID.N  = "25"; ID.T  = "A"
REM > ID.CHECKFILE = "Main.File.Name" : FM : Enrichment.Field
    Z = 0
    Z = 1 ;   F(Z)  = "SERIAL.NUMBER";  N(Z)  = "8.1" ; T(Z)=""
REM > CHECKFILE(1) = "Indexed.File.Name" : FM : Enrichment.Field

    RETURN

*************************************************************************

END
