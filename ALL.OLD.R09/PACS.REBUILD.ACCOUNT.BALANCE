*-----------------------------------------------------------------------------
* <Rating>1174</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE PACS.REBUILD.ACCOUNT.BALANCE
*-----------------------------------------------------------------------------
* This routine will rebuild account balance fields 23 - 27
* Relies on last ACCT.ACTIVITY & DATES.EXPOSURE
* Make sure there are no Unauthorized transactions for account before rebuild

    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT GLOBUS.BP I_F.STMT.ENTRY
    $INSERT GLOBUS.BP I_F.DATES
    $INSERT GLOBUS.BP I_F.EB.CONTRACT.BALANCES
    $INSERT GLOBUS.BP I_F.SPF
    $INSERT GLOBUS.BP I_F.ACCOUNT.PARAMETER
    EXECUTE "COMO ON PACS.REBUILD.ACCOUNT.BALANCE-":TODAY
    CRT '***************************PACS.REBUILD.ACCOUNT.BALANCE****************************'

    GOSUB INITIALISE
    GOSUB GET.ACCT.IDS

    LOOP
        REMOVE ACC.ID FROM ACC.IDS SETTING POS
    WHILE ACC.ID:POS
        GOSUB INIT.VARS
        GOSUB PROCESS
    REPEAT

PROGRAM.END:
    CRT '***********************************************************************************'
    EXECUTE "COMO OFF PACS.REBUILD.ACCOUNT.BALANCE-":TODAY
    RETURN

*************
GET.ACCT.IDS:
*************

    FN.SL="&SAVEDLISTS&"
    F.SL=""
    CALL OPF(FN.SL,F.SL)
*    ACC.IDS=""

*    READ ACC.IDS FROM F.SL, 'PROB.ACC.ID' ELSE
 *       ACC.IDS=""
 *   END

   ACC.IDS<-1> = '0100034455826'

    CRT "Application|AccountNumber|Before rebuild|OPEN.ACTUAL.BAL|OPEN.CLEARED.BAL|ONLINE.ACTUAL.BAL|ONLINE.CLEARED.BAL|WORKING.BALANCE"

    RETURN
************
INITIALISE:
************

    FN.ACCOUNT="F.ACCOUNT"
    F.ACCOUNT=""
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.STMT.ENTRY="F.STMT.ENTRY"
    F.STMT.ENTRY=""
    CALL OPF(FN.STMT.ENTRY,F.STMT.ENTRY)

    FN.DATE.EXPOSURE="F.DATE.EXPOSURE"
    F.DATE.EXPOSURE=""
    CALL OPF(FN.DATE.EXPOSURE,F.DATE.EXPOSURE)

    FN.ECB="F.EB.CONTRACT.BALANCES"
    F.ECB=""
    CALL OPF(FN.ECB,F.ECB)

    FN.ENTRY.HOLD="F.ENTRY.HOLD"
    F.ENTRY.HOLD=""
    CALL OPF(FN.ENTRY.HOLD,F.ENTRY.HOLD)

    R.ACCT='';UPDATE.ECB.BAL=0
    CURR.RELEASE = R.SPF.SYSTEM<SPF.CURRENT.RELEASE>

    IF CURR.RELEASE[1,1]="R" AND CURR.RELEASE[2,3] GT '11' THEN
        UPDATE.ECB.BAL=1
    END

    IF CURR.RELEASE[1,1] NE "R" AND CURR.RELEASE[1,4] GE '2012' THEN
        UPDATE.ECB.BAL=1
    END

    UPD.OPN.BAL=0
    IF R.ACCOUNT.PARAMETER<AC.PAR.ENT.TODAY.UPDATE> NE 'NO' THEN
        UPD.OPN.BAL=1
    END


    RETURN

**********
INIT.VARS:
**********
    READ R.ACCT FROM F.ACCOUNT, ACC.ID ELSE
        CRT "Account ":ACC.ID:" does not exist, cannot rebuild balance"
        GOTO PROGRAM.END
    END

    BALANCE.DATE1=""; BALANCE.DATE2=""; YBALANCE1=""; YBALANCE2=""
    CR.MVMT1=""; CR.MVMT2=""; DR.MVMT1=""; DR.MVMT2=""; ERR1=""; ERR2=""
    OPN.ACT.BAL=""; OPN.CLR.BAL=""; ONL.ACT.BAL=""; ONL.CLR.BAL=""; WORK.BAL=""
    EXP.CNT=""; J=""; R.ACCT=""; WB.DIFF=0

    RETURN
*********
PROCESS:
*********
    READU R.ACCT FROM F.ACCOUNT, ACC.ID THEN

        R.ECB=""; HVT.ACT='';DIFF1=0;DIFF2=0
        READU R.ECB FROM F.ECB,ACC.ID ELSE
            R.ECB=""
        END

        BALANCE.DATE1 = R.DATES(EB.DAT.TODAY)
        BALANCE.DATE2 = R.DATES(EB.DAT.LAST.WORKING.DAY)

        BEGIN CASE
        CASE R.ACCT<AC.ARRANGEMENT.ID> EQ '' AND R.ACCT<AC.HVT.FLAG> NE 'YES'
            CALL EB.GET.ACCT.BALANCE(ACC.ID, R.ACCT, "BOOKING", BALANCE.DATE1, "", YBALANCE1, CR.MVMT1, DR.MVMT1, ERR1) ;* Get online actual balance
            CALL EB.GET.ACCT.BALANCE(ACC.ID, R.ACCT, "BOOKING", BALANCE.DATE2, "", YBALANCE2, CR.MVMT2, DR.MVMT2, ERR2)
        CASE R.ACCT<AC.ARRANGEMENT.ID> NE ''
            CALL AA.GET.ACCT.BALANCE(ACC.ID, R.ACCT, "BOOKING", BALANCE.DATE1, "", YBALANCE1, CR.MVMT1, DR.MVMT1, ERR1)
            CALL AA.GET.ACCT.BALANCE(ACC.ID, R.ACCT, "BOOKING", BALANCE.DATE2, "", YBALANCE2, CR.MVMT1, DR.MVMT2, ERR2)
        CASE R.ACCT<AC.HVT.FLAG> EQ 'YES' AND R.ACCT<AC.ARRANGEMENT.ID> EQ ''
            CALL EB.GET.ACCT.BALANCE(ACC.ID, R.ACCT, "BOOKING", BALANCE.DATE1, "", YBALANCE1, CR.MVMT1, DR.MVMT1, ERR1)
            CALL EB.GET.ACCT.BALANCE(ACC.ID, R.ACCT, "BOOKING", BALANCE.DATE2, "", YBALANCE2, CR.MVMT2, DR.MVMT2, ERR2)

            ECB.ERR = '';R.ECB.HVT = ''
            CALL EB.READ.HVT("EB.CONTRACT.BALANCES" , ACC.ID , R.ECB.HVT , ECB.ERR)

            HVT.ACT=1

            DIFF2 = R.ECB<ECB.OPEN.ACTUAL.BAL> - R.ECB.HVT<ECB.OPEN.ACTUAL.BAL> ;* Eliminating Trigger amount for HVT ACCOUNTS
            DIFF1 = R.ECB<ECB.ONLINE.ACTUAL.BAL> - R.ECB.HVT<ECB.ONLINE.ACTUAL.BAL>       ;* Eliminating Trigger amount for HVT ACCOUNTS

        END CASE
* Get open actual balance

        AC.OPN.ACT.BAL = R.ACCT<AC.OPEN.ACTUAL.BAL>+0
        AC.OPN.CLR.BAL = R.ACCT<AC.OPEN.CLEARED.BAL>+0
        AC.ONL.ACT.BAL = R.ACCT<AC.ONLINE.ACTUAL.BAL>+0
        AC.ONL.CLR.BAL = R.ACCT<AC.ONLINE.CLEARED.BAL>+0
        AC.WRK.BAL = R.ACCT<AC.WORKING.BALANCE>+0

        IF UPDATE.ECB.BAL THEN
            ECB.OPN.ACT.BAL = R.ECB<ECB.OPEN.ACTUAL.BAL>+0
            ECB.OPN.CLR.BAL = R.ECB<ECB.OPEN.CLEARED.BAL>+0
            ECB.ONL.ACT.BAL = R.ECB<ECB.ONLINE.ACTUAL.BAL>+0
            ECB.ONL.CLR.BAL = R.ECB<ECB.ONLINE.CLEARED.BAL>+0
            ECB.WRK.BAL = R.ECB<ECB.WORKING.BALANCE>+0
        END

        OPN.ACT.BAL = YBALANCE2 + 0 + DIFF2
        OPN.CLR.BAL = YBALANCE2 + 0 + DIFF2
        ONL.ACT.BAL = YBALANCE1 + 0 + DIFF1
        ONL.CLR.BAL = YBALANCE1 + 0 + DIFF1
        WORK.BAL = YBALANCE1 + 0 + DIFF1
    END

    IF R.ACCT AND R.ECB THEN

        GOSUB CALCULATE.CLR.WBAL
        IF R.ACCT<AC.LIMIT.REF> NE "NOSTRO" AND NUM(ACC.ID) THEN
            GOSUB CALCULATE.WRK.BAL
        END ELSE
            WORK.BAL=ONL.CLR.BAL
        END
        GOSUB UPDATE.AC.BAL
        IF UPDATE.ECB.BAL THEN
            GOSUB UPDATE.ECB.BAL
        END

    END

    RETURN

CALCULATE.CLR.WBAL:

    IF R.ACCT<AC.NEXT.EXP.DATE> NE "" THEN
        EXP.CNT = DCOUNT(R.ACCT<AC.EXPOSURE.DATES>,@VM)
        FOR J = 1 TO EXP.CNT
            I=""; CNT=""; EXP.DATE=""; EXP.ID=""; R.EXPOSURE=""
            EXP.DATE = R.ACCT<AC.EXPOSURE.DATES,J>
            EXP.ID = ACC.ID:"-":EXP.DATE
            READ R.EXPOSURE FROM F.DATE.EXPOSURE, EXP.ID ELSE R.EXPOSURE=""
            CNT = DCOUNT(R.EXPOSURE,@FM)
            FOR I = 1 TO CNT
                R.ENTRY=""
                READ R.ENTRY FROM F.STMT.ENTRY, R.EXPOSURE<I> ELSE R.ENTRY=""
                IF R.ENTRY<AC.STE.AMOUNT.FCY> THEN
                    IF R.ENTRY<AC.STE.BOOKING.DATE> NE TODAY THEN OPN.CLR.BAL -= R.ENTRY<AC.STE.AMOUNT.FCY>
                    ONL.CLR.BAL -= R.ENTRY<AC.STE.AMOUNT.FCY>
                    WORK.BAL -= R.ENTRY<AC.STE.AMOUNT.FCY>
                END ELSE
                    IF R.ENTRY<AC.STE.BOOKING.DATE> NE TODAY THEN OPN.CLR.BAL -= R.ENTRY<AC.STE.AMOUNT.LCY>
                    ONL.CLR.BAL -= R.ENTRY<AC.STE.AMOUNT.LCY>
                    WORK.BAL -= R.ENTRY<AC.STE.AMOUNT.LCY>
                END
            NEXT I
        NEXT J
    END

    RETURN

CALCULATE.WRK.BAL:

    SEL.CMD1 = "SELECT ":FN.ENTRY.HOLD
    NO.OF.RECS="";WB.DIFF = 0
    CALL EB.READLIST(SEL.CMD1,SEL.LIST1,"",NO.OF.RECS,RET.CODES)
    FOR J=1 TO NO.OF.RECS
        ENT.HOLD.ID = SEL.LIST1<J>
        R.ENT.HOLD=""
        READ R.ENT.HOLD FROM F.ENTRY.HOLD,ENT.HOLD.ID ELSE R.ENT.HOLD=""
        IF R.ENT.HOLD  THEN
            FMC=DCOUNT(R.ENT.HOLD,FM)
            IF R.ENT.HOLD<FMC,1> NE "NONE" THEN
                FOR K = 1 TO FMC
                    ACC.NUM = '' ; ENT.AMT=''
                    ACC.NUM=R.ENT.HOLD<K,AC.STE.ACCOUNT.NUMBER>
                    IF ACC.NUM  EQ ACC.ID THEN

        BEGIN CASE
        CASE R.ENT.HOLD<K,AC.STE.AMOUNT.FCY> LT 0
            ENT.AMT  = R.ENT.HOLD<K,AC.STE.AMOUNT.FCY>
        CASE R.ENT.HOLD<K,AC.STE.AMOUNT.LCY> LT 0
            ENT.AMT = R.ENT.HOLD<K,AC.STE.AMOUNT.LCY>
        END CASE

        IF ENT.AMT LT 0 THEN
            WB.DIFF +=ENT.AMT
        END
                    END
                NEXT K
            END
        END
    NEXT J
    WORK.BAL +=WB.DIFF

    RETURN

UPDATE.AC.BAL:
    TEMP.VAR1="";TEMP.VAR2="";TEMP.VAR3="";TEMP.VAR4="";TEMP.VAR5="";TEMP.VAR6="";UPD.AC.BAL=0
    CRT "Account|":ACC.ID:"|Before rebuild|":R.ACCT<AC.OPEN.ACTUAL.BAL>:"|":R.ACCT<AC.OPEN.CLEARED.BAL>:"|":R.ACCT<AC.ONLINE.ACTUAL.BAL>:"|":R.ACCT<AC.ONLINE.CLEARED.BAL>:"|":R.ACCT<AC.WORKING.BALANCE>
    TEMP.VAR1="Account|":ACC.ID:"|After Rebuild|"
    IF (UPD.OPN.BAL AND (OPN.ACT.BAL NE AC.OPN.ACT.BAL)) THEN
        R.ACCT<AC.OPEN.ACTUAL.BAL> = OPN.ACT.BAL
        TEMP.VAR2=OPN.ACT.BAL
        UPD.AC.BAL=1
    END

    IF (UPD.OPN.BAL AND (OPN.CLR.BAL NE AC.OPN.CLR.BAL)) THEN
        R.ACCT<AC.OPEN.CLEARED.BAL> = OPN.CLR.BAL
        TEMP.VAR3="|":OPN.CLR.BAL
        UPD.AC.BAL=1
    END

    IF ONL.ACT.BAL NE AC.ONL.ACT.BAL THEN
        R.ACCT<AC.ONLINE.ACTUAL.BAL> = ONL.ACT.BAL
        TEMP.VAR4= "|":ONL.ACT.BAL
        UPD.AC.BAL=1
    END

    IF ONL.CLR.BAL NE AC.ONL.CLR.BAL THEN
        R.ACCT<AC.ONLINE.CLEARED.BAL> = ONL.CLR.BAL
        TEMP.VAR5= "|":ONL.CLR.BAL
        UPD.AC.BAL=1
    END

    IF WORK.BAL NE AC.WRK.BAL THEN
        R.ACCT<AC.WORKING.BALANCE> = WORK.BAL
        TEMP.VAR6= "|":WORK.BAL
        UPD.AC.BAL=1
    END

    IF UPD.AC.BAL THEN
        CRT TEMP.VAR1:TEMP.VAR2:TEMP.VAR3:TEMP.VAR4:TEMP.VAR5:TEMP.VAR6
        WRITE R.ACCT TO F.ACCOUNT, ACC.ID
    END ELSE
        CRT 'Account balance correction skipped - Balance in sync with ACCT.ACTIVITY'
        RELEASE F.ACCOUNT, ACC.ID
    END


    RETURN

UPDATE.ECB.BAL:

    TEMP.VAR1="";TEMP.VAR2="";TEMP.VAR3="";TEMP.VAR4="";TEMP.VAR5="";TEMP.VAR6="";UPD.ECB.BAL=0
    CRT "ECB BALANCE|":ACC.ID:"|Before rebuild|":R.ECB<ECB.OPEN.ACTUAL.BAL>:"|":R.ECB<ECB.OPEN.CLEARED.BAL>:"|":R.ECB<ECB.ONLINE.ACTUAL.BAL>:"|":R.ECB<ECB.ONLINE.CLEARED.BAL>:"|":R.ECB<ECB.WORKING.BALANCE>
    TEMP.VAR1="ECB BALANCE|":ACC.ID:"|After Rebuild|"

    IF  UPD.OPN.BAL AND OPN.ACT.BAL NE ECB.OPN.ACT.BAL THEN
        R.ECB<ECB.OPEN.ACTUAL.BAL>    = OPN.ACT.BAL
        TEMP.VAR2=OPN.ACT.BAL
        UPD.ECB.BAL=1
    END

    IF UPD.OPN.BAL AND OPN.CLR.BAL NE ECB.OPN.CLR.BAL THEN
        R.ECB<ECB.OPEN.CLEARED.BAL>   = OPN.CLR.BAL
        TEMP.VAR3="|":OPN.CLR.BAL
        UPD.ECB.BAL=1
    END

    IF ONL.ACT.BAL NE ECB.ONL.ACT.BAL THEN
        R.ECB<ECB.ONLINE.ACTUAL.BAL>  = ONL.ACT.BAL
        TEMP.VAR4="|":ONL.ACT.BAL
        UPD.ECB.BAL=1
    END

    IF ONL.CLR.BAL NE ECB.ONL.CLR.BAL THEN
        R.ECB<ECB.ONLINE.CLEARED.BAL> = ONL.CLR.BAL
        TEMP.VAR5="|":ONL.CLR.BAL
        UPD.ECB.BAL=1
    END

    IF WORK.BAL NE ECB.WRK.BAL THEN
        R.ECB<ECB.WORKING.BALANCE>    = WORK.BAL
        TEMP.VAR6="|":WORK.BAL
        UPD.ECB.BAL=1
    END

    IF UPD.ECB.BAL THEN
        CRT TEMP.VAR1:TEMP.VAR2:TEMP.VAR3:TEMP.VAR4:TEMP.VAR5:TEMP.VAR6
        WRITE R.ECB TO F.ECB, ACC.ID
        CRT "ECB balance is updated successfully"
    END ELSE
        RELEASE F.ECB,ACC.ID
        CRT 'ECB balance correction skipped - Balance in sync with ACCT.ACTIVITY'
    END

    RETURN

END 
