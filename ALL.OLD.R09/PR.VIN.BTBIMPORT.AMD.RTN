*-----------------------------------------------------------------------------
* <Rating>783</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE PR.VIN.BTBIMPORT.AMD.RTN

*------------------------------------------------------------------------------
*THIS ROUTINE IS TO UPDATE THE IMPORT LC DETAILS TO THE JOB REGISTER TABLE
*IF THE AMOUNT EXCEEDS THE AVAILABLE IT THROWS OVERRIDE
*DURING OPEN OPRATION


*name srivathsan

* application input routine attached to the lc,ibtb.excess.open version

*---------------------------------------------------------------------------
*
*
*---------------------------
*INSERT FILES INCLUDE
*---------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.LETTER.OF.CREDIT
    $INSERT I_F.PR.H.BTB.JOB.REGISTER
    $INSERT I_F.COMPANY
    $INSERT I_F.LC.TYPES
    $INSERT I_F.INTERCO.PARAMETER
    $INSERT I_F.PR.T.BTB.JOB.NO.LC.REF
*
*
    RUNNING.UNDER.BATCH=1
    GOSUB INIT
    GOSUB GET.LOC.REF.VAL
    GOSUB JOB.UPDATE
    GOSUB DEL.JOB
    RUNNING.UNDER.BATCH=0
*
    RETURN
*
*----------------
INIT:
*----------------

*initialising and open files

    FN.PR.H.BTB.JOB.REGISTER="F.PR.H.BTB.JOB.REGISTER"
    F.PR.H.BTB.JOB.REGISTER= ''
    FN.LETTER.OF.CREDIT="F.LETTER.OF.CREDIT"
    F.LETTER.OF.CREDIT= ''
    FN.JOB="F.PR.H.BTB.JOB.REGISTER"
    F.JOB=""
    FN.LC.TYPE="F.LC.TYPES"
    F.LC.TYPE= ''
    FN.PR.T.BTB.CUSTOMER.JOB.NO = "F.PR.T.BTB.CUSTOMER.JOB.NO"
    F.PR.T.BTB.CUSTOMER.JOB.NO = ""
    R.PR.H.BTB.JOB.REGISTER = ''
    FN.PR.T.BTB.JOB.NO.LC.REF="F.PR.T.BTB.JOB.NO.LC.REF"
    F.PR.T.BTB.JOB.NO.LC.REF= ' '
    R.PR.T.BTB.JOB.NO.LC.REF= ' '
    Y.NULL="NULL"
    Y.JOB.ERR=''
    Y.ERR=''
*
    CALL OPF(FN.PR.T.BTB.CUSTOMER.JOB.NO,F.PR.T.BTB.CUSTOMER.JOB.NO)
    CALL OPF(FN.PR.T.BTB.JOB.NO.LC.REF,F.PR.T.BTB.JOB.NO.LC.REF)
    CALL OPF(FN.PR.H.BTB.JOB.REGISTER,F.PR.H.BTB.JOB.REGISTER)
    CALL OPF(FN.LETTER.OF.CREDIT,F.LETTER.OF.CREDIT)
    CALL OPF(FN.LC.TYPE,F.LC.TYPE)
*
    RETURN
*-----------
GET.LOC.REF.VAL:
*-----------
!CALL GET.LOC.REF("LETTER.OF.CREDIT","ADVISE.REF.NO",Y.ADV.POS)

    CALL GET.LOC.REF("LETTER.OF.CREDIT","FOB.VALUE",Y.FOB.VAL.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","ENTITLEMENT.PER",Y.ENT.PR.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","NEW.EXIST.JOBNO",Y.NEW.EXIST.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","JOB.VALUE",Y.JOB.VAL.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","JOB.ENTITLEMENT",Y.JOB.ENT.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","JOB.NO",Y.JOB.NO.POS)
    RETURN
*-----------
JOB.UPDATE:
*-----------
    Y.OPERATION = R.NEW(TF.LC.OPERATION)
    IF Y.OPERATION EQ 'A' AND V$FUNCTION EQ 'I' OR V$FUNCTION EQ 'A' OR V$FUNCTION EQ 'C' THEN

        Y.ID=ID.NEW
        Y.TYPE=R.NEW(TF.LC.LC.TYPE)
        Y.JOB.NO=R.NEW(TF.LC.LOCAL.REF)<1,Y.JOB.NO.POS>
        CALL OPF(FN.JOB,F.JOB)
        CALL F.READ(FN.PR.H.BTB.JOB.REGISTER,Y.JOB.NO,R.PR.H.BTB.JOB.REGISTER,F.PR.H.BTB.JOB.REGISTER,Y.JOB.ERR)
        CALL F.READ(FN.JOB,Y.JOB.NO,R.JOB,F.JOB,Y.ERR)
        Y.EXP.LC.CCY = R.JOB<BTB.JOB.EXPORT.LC.CY,1>
        FINDSTR Y.ID IN R.JOB<BTB.JOB.IMPORT.LC.RF> SETTING POS1,POS2 THEN
            Y.BTB.AMT=R.NEW(TF.LC.LC.AMOUNT)
            AMT1=''
            AMT2=''
            Y.CCY=R.NEW(TF.LC.LC.CURRENCY)
            IF Y.CCY NE LCCY THEN
                CALL EXCHRATE('1',Y.CCY,Y.BTB.AMT,LCCY,AMT1,'','','','',RET.CODE)
                Y.LCCY.AMT=AMT1
            END ELSE
                Y.LCCY.AMT=Y.BTB.AMT
            END

            IF Y.CCY NE Y.EXP.LC.CCY THEN
                CALL EXCHRATE('1',LCCY,Y.LCCY.AMT,Y.EXP.LC.CCY,AMT2,'','','','',RET.CODE)
                Y.AMT=AMT2
            END ELSE
                Y.AMT=Y.BTB.AMT
            END


!Y.ADV.NO=R.NEW(TF.LC.LOCAL.REF)<1,Y.ADV.POS>
            Y.ADV.NO = R.NEW(TF.LC.OLD.LC.NUMBER)
            Y.EXP.DATE=R.NEW(TF.LC.EXPIRY.DATE)
            Y.FC.AMT=R.JOB<BTB.JOB.CONTRACT.VAL,POS2>
            Y.LC.AMT=R.JOB<BTB.JOB.CONT.VAL.LCY,POS2>
            Y.AMOUNT.FC=R.JOB<BTB.JOB.TOT.CONT.FC> - Y.FC.AMT
            Y.AMOUNT.LC=R.JOB<BTB.JOB.TOT.CONT.LCY> - Y.LC.AMT
            Y.FCY.AMT=Y.AMOUNT.FC + Y.AMT
            Y.LCY.AMT=Y.AMOUNT.LC + Y.LCCY.AMT
            Y.FC.IMP=R.JOB<BTB.JOB.TOT.CONT.FC>+Y.AMT
            Y.LC.IMP=R.JOB<BTB.JOB.TOT.CONT.LCY>+Y.LCCY.AMT
            Y.AVL.ENT.FC1=R.JOB<BTB.JOB.TOT.CON.FC> +  R.JOB<BTB.JOB.TOT.ENT.FC>
            Y.AVL.ENT.FC=Y.AVL.ENT.FC1 - Y.FCY.AMT
            Y.AVL.ENT.LC1=R.JOB<BTB.JOB.TOT.CON.LCY> +  R.JOB<BTB.JOB.TOT.ENT.LCY>
            Y.AVL.ENT.LC= Y.AVL.ENT.LC1 - Y.LCY.AMT


        END
!Y.SOURCE="BTB.JOB.REGISTER"
!Y.MESSAGE="PR.H.BTB.JOB.REGISTER,PR.BTB/I/PROCESS,,":Y.JOB.NO:",IMPORT.LC.RF:":POS2:":=":Y.ID:",IMPORT.LC.ADV.NO:":POS2:":=":Y.ADV.NO:",IMPORT.LC.CY:":POS2:":=":Y.CCY:",CONTRACT.VAL:":POS2:":=":Y.AMT:",CONT.VAL.LCY:":POS2:":=":Y.LCCY.AMT:",CONT.EX.DATE:":POS2:":=":Y.EXP.DATE:",TOT.CONT.FC::=":Y.FCY.AMT:",TOT.CONT.LCY::=":Y.LCY.AMT:",AVL.ENT.FC::=":Y.AVL.ENT.FC:",AVL.ENT.LCY::=":Y.AVL.ENT.LC
!Y.MESSAGE="PR.H.BTB.JOB.REGISTER,PR.BTB/I/PROCESS,,":Y.JOB.NO:",

        R.PR.H.BTB.JOB.REGISTER<BTB.JOB.IMPORT.LC.RF,POS2>=Y.ID
        R.PR.H.BTB.JOB.REGISTER<BTB.JOB.IMPORT.LC.ADV.NO,POS2>=Y.ADV.NO
        R.PR.H.BTB.JOB.REGISTER<BTB.JOB.IMPORT.LC.CY,POS2>=Y.CCY
        R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONTRACT.VAL,POS2>=Y.AMT
        R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONT.VAL.LCY,POS2>=Y.LCCY.AMT
        R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONT.EX.DATE,POS2>=Y.EXP.DATE
        R.PR.H.BTB.JOB.REGISTER<BTB.JOB.TOT.CONT.FC>=Y.FCY.AMT
        R.PR.H.BTB.JOB.REGISTER<BTB.JOB.TOT.CONT.LCY>=Y.LCY.AMT
        R.PR.H.BTB.JOB.REGISTER<BTB.JOB.AVL.ENT.FC>=Y.AVL.ENT.FC
        R.PR.H.BTB.JOB.REGISTER<BTB.JOB.AVL.ENT.LCY>=Y.AVL.ENT.LC

        CALL F.WRITE(FN.PR.H.BTB.JOB.REGISTER,Y.JOB.NO,R.PR.H.BTB.JOB.REGISTER)

!CALL OFS.GLOBUS.MANAGER(Y.SOURCE,Y.MESSAGE)
        SENSITIVITY=''
        RETURN




*for delete and reverse operation
*----------------
DEL.JOB:
*----------------
        IF V$FUNCTION EQ 'D' OR V$FUNCTION EQ 'R' THEN

            TEXT="LC.RTN.ENTITLEMENT.JOB.AF.RECAL"
            CALL STORE.OVERRIDE(CURR.NO)
*checking override msg
            IF TEXT = "Y" THEN
                BEGIN CASE
                CASE R.NEW(TF.LC.LOCAL.REF)<1,Y.NEW.EXIST.POS> EQ "NEW"
                    Y.CONT.ID=ID.NEW
*read btb job number from respective contract
                    CALL F.READ(FN.PR.T.BTB.JOB.NO.LC.REF,Y.CONT.ID,R.BTB.JOB.NO.LC.REF,F.BTB.JOB.NO.LC.REF,Y.ERR)
                    Y.JOB.NUM = R.PR.T.BTB.JOB.NO.LC.REF<BTB.JOB.NO>
*delete that record from concat table
                    CALL CONCAT.FILE.UPDATE(FN.PR.T.BTB.JOB.NO.LC.REF,Y.CONT.ID,Y.JOB.NUM,'D','AL')
*raed btb job register table
                    CALL F.READ(FN.PR.H.BTB.JOB.REGISTER,Y.JOB.NUM,R.PR.H.BTB.JOB.REGISTER,F.PR.H.BTB.JOB.REGISTER,Y.ERR)
*if that record exist delete it
                    IF R.PR.T.BTB.JOB.NO.LC.REF THEN
                        CMD = "DELETE ":FN.PR.H.BTB.JOB.REGISTER:" ":Y.JOB.NUM
                        EXEC CMD
                    END
*if this field is set to exist
                    Y.NULL=""
                CASE R.NEW(TF.LC.LOCAL.REF)<1,Y.NEW.EXIST.POS> EQ "EXIST"
                    Y.CONT.ID=ID.NEW
                    CALL F.READ(FN.PR.T.BTB.JOB.NO.LC.REF,Y.CONT.ID,R.PR.T.BTB.JOB.NO.LC.REF,F.PR.T.BTB.JOB.NO.LC.REF,Y.ERR)
                    Y.JOB.NUM = R.PR.T.BTB.JOB.NO.LC.REF<BTB.JOB.NO>
                    CALL CONCAT.FILE.UPDATE(FN.PR.T.BTB.JOB.NO.LC.REF,Y.CONT.ID,Y.JOB.NUM,'D','AL')
                    CALL F.READ(FN.PR.H.BTB.JOB.REGISTER,Y.JOB.NUM,R.PR.H.BTB.JOB.REGISTER,F.PR.H.BTB.JOB.REGISTER,Y.ERR)
                    FINDSTR Y.CONT.ID IN R.PR.H.BTB.JOB.REGISTER SETTING Y.CON.POS1,Y.CON.POS ELSE Y.CON.POS=0
*calculating total and available lcy
                    Y.TOT.CONT.LCY=R.PR.H.BTB.JOB.REGISTER<BTB.JOB.TOT.CONT.LCY>- R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONT.VAL.LCY,Y.CON.POS>
                    Y.AVL.ENT.LCY=R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONT.VAL.LCY,Y.CON.POS> + R.PR.H.BTB.JOB.REGISTER<BTB.JOB.AVL.ENT.LCY>
*deleting the respective contract
                    R.PR.H.BTB.JOB.REGISTER<BTB.JOB.IMPORT.LC.RF,Y.CON.POS>= Y.NULL
                    R.PR.H.BTB.JOB.REGISTER<BTB.JOB.IMPORT.LC.CY,Y.CON.POS>= Y.NULL
                    R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONTRACT.VAL,Y.CON.POS>= Y.NULL
                    R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONT.VAL.LCY,Y.CON.POS>= Y.NULL
                    R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONT.EX.DATE,Y.CON.POS>= Y.NULL
                    Y.CONT.RF=R.PR.H.BTB.JOB.REGISTER<BTB.JOB.IMPORT.LC.RF,Y.CON.POS>
                    Y.CCY= R.PR.H.BTB.JOB.REGISTER<BTB.JOB.IMPORT.LC.CY,Y.CON.POS>
                    Y.CONT.VAL=R.PR.H.BTB.JOB.REGISTER<BTB.JOB.IMPORT.LC.CY,Y.CON.POS>
                    Y.CONT.VAL.LCY=R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONT.VAL.LCY,Y.CON.POS>
                    Y.EX.DATE=R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONT.EX.DATE,Y.CON.POS>
                    Y.ADV.NO=R.PR.H.BTB.JOB.REGISTER<BTB.JOB.IMPORT.LC.ADV.NO>

                    R.PR.H.BTB.JOB.REGISTER<BTB.JOB.IMPORT.LC.RF,Y.CON.POS>=Y.CONT.RF
                    R.PR.H.BTB.JOB.REGISTER<BTB.JOB.IMPORT.LC.CY,Y.CON.POS>=Y.CCY
                    R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONTRACT.VAL,Y.CON.POS>=Y.CONT.VAL
                    R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONT.VAL.LCY,Y.CON.POS>=Y.CONT.VAL.LCY
                    R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONT.EX.DATE,Y.CON.POS>=Y.EX.DATE
                    R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONT.EX.DATE>=Y.TOT.CONT.LCY
                    R.PR.H.BTB.JOB.REGISTER<BTB.JOB.CONT.EX.DATE>=Y.AVL.ENT.LCY

                    CALL F.WRITE(FN.PR.H.BTB.JOB.REGISTER,Y.JOB.NUM,R.PR.H.BTB.JOB.REGISTER)

**************
!IMPORT.LC.RF:":Y.CON.POS:":=":Y.CONT.RF:",
!IMPORT.LC.CY:":Y.CON.POS:":=":Y.CCY:",
!CONTRACT.VAL:":Y.CON.POS:":=":Y.CONT.VAL:",
!CONT.VAL.LCY:":Y.CON.POS:":=":Y.CONT.VAL.LCY:",
!CONT.EX.DATE:":Y.CON.POS:":=":Y.EX.DATE:",
!TOT.CONT.LCY::=":Y.TOT.CONT.LCY:",
!AVL.ENT.LCY::=":Y.AVL.ENT.LCY

!Y.SOURCE="BTB.JOB.REGISTER"
!Y.MESSAGE = "PR.H.BTB.JOB.REGISTER,PR.BTB/I/PROCESS,,":Y.JOB.NUM:",
!CALL OFS.GLOBUS.MANAGER(Y.SOURCE,Y.MESSAGE)
                    SENSITIVITY= ''
                END CASE
            END ELSE
                RETURN
            END
        END ELSE
            RETURN
        END
        RETURN
*------------------
OVERIDE.CHCK:
*------------------
        IF R.PR.H.BTB.JOB.REGISTER<BTB.JOB.AVL.ENT.FC> GT 0 THEN
            Y.DIFF = Y.AMT -R.PR.H.BTB.JOB.REGISTER<BTB.JOB.AVL.ENT.FC>
        END ELSE
            Y.DIFF = Y.AMT + R.PR.H.BTB.JOB.REGISTER<BTB.JOB.AVL.ENT.FC>
        END
        Y.PR.AVL=Y.DIFF/Y.AVL.ENT.FC
        IF Y.PR.AVL LT 0 THEN
            Y.PR.AVL= Y.PR.AVL * (-1)
        END
        Y.PR.AVL=FMT(Y.PR.AVL,"R2#10")
*if lc amount working override thrown
        TEXT="LC AMOUNT EXCEEDS":"BY":SPACE(2):Y.DIFF
        CALL STORE.OVERRIDE(CURR.NO)
        RETURN
    END
