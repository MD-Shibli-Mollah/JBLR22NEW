*-----------------------------------------------------------------------------
*-----------------------------------------------------------------------------
* <Rating>58</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE BD.V.EXP.ISSUE.TFID
*-----------------------------------------------------------------------------
* Subroutine Description:
*------------------------
* This routine is fatch record from DRAWINGS
*-----------------------------------------------------------------------------
* Modification History:
* ---------------------
* 20/04/2012 - New - Rayhan
*
*-----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.LETTER.OF.CREDIT
    $INSERT I_F.LC.TYPES
    $INSERT I_F.DRAWINGS
    $INSERT I_F.FUNDS.TRANSFER


    GOSUB INITIALISE
    GOSUB PROCESS

    RETURN
*-----------------------------------------------------------------------------
INITIALISE:
***********

    FN.LETTER.OF.CREDIT = 'F.LETTER.OF.CREDIT'
    F.LETTER.OF.CREDIT  = ''
    CALL OPF(FN.LETTER.OF.CREDIT,F.LETTER.OF.CREDIT)
    R.LETTER.OF.CREDIT  = ''


    FN.DRAWINGS = 'F.DRAWINGS'
    F.DRAWINGS = ''
    CALL OPF(FN.DRAWINGS,F.DRAWINGS)
    R.DRAWINGS = ''
    Y.DRAWINGS.ERR = ''

    FN.LC.TYPES = 'F.LC.TYPES'
    F.LC.TYPES = ''
    CALL OPF(FN.LC.TYPES,F.LC.TYPES)
    R.LC.TYPES = ''
    Y.LC.TYPES.ERR = ''

    FN.FT = 'F.FUNDS.TRANSFER'
    F.FT = ''
    CALL OPF(FN.FT,F.FT)
    R.FT.REC = ''
    Y.FT.ERR = ''


    RETURN
*-----------------------------------------------------------------------------
PROCESS:
********
    GOSUB GET.LOC.REF.POS
    Y.LC.NO = COMI
    CALL F.READ(FN.LETTER.OF.CREDIT,Y.LC.NO,R.LETTER.OF.CREDIT,F.LETTER.OF.CREDIT,Y.LETTER.OF.CREDIT.ERR)
    IF R.LETTER.OF.CREDIT EQ '' THEN RETURN

    Y.EXP.LC.NO = R.LETTER.OF.CREDIT<TF.LC.ISS.BANK.REF>
    Y.CONT.NO = R.LETTER.OF.CREDIT<TF.LC.LOCAL.REF,Y.LC.CONTNO.POS>
    Y.CUST.NO = R.LETTER.OF.CREDIT<TF.LC.BENEFICIARY.CUSTNO>
    Y.LC.TYPE = R.LETTER.OF.CREDIT<TF.LC.LC.TYPE>
    Y.LC.CURR = R.LETTER.OF.CREDIT<TF.LC.LC.CURRENCY>
    Y.LC.LIAB.AMT = R.LETTER.OF.CREDIT<TF.LC.LIABILITY.AMT>
!Y.LC.HSCODE = R.LETTER.OF.CREDIT<TF.LC.LOCAL.REF,Y.LC.HSCODE.POS>
    CALL F.READ(FN.LC.TYPES,Y.LC.TYPE,R.LC.TYPES,F.LC.TYPES,Y.LC.TYPES.ERR)
    Y.LC.IMP.EXP = R.LC.TYPES<LC.TYP.IMPORT.EXPORT>
    IF Y.LC.IMP.EXP EQ 'E' THEN
        IF Y.LC.LIAB.AMT EQ 0 THEN
            ETEXT ="No Export LC Value Outstanding"
            CALL STORE.END.ERROR
        END ELSE
            GOSUB SET.LC.JOB.VALUE.LD
        END
    END ELSE
        ETEXT ="Not Export LC Type"
        CALL STORE.END.ERROR
    END

    RETURN
*-----------------------------------------------------------------------------
GET.LOC.REF.POS:
*--------------
    CALL GET.LOC.REF("LETTER.OF.CREDIT","BTB.CONTRACT.NO",Y.LC.CONTNO.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","EXPORT.LC.NO",Y.FT.EXPLCNO.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","BTB.CONTRACT.NO",Y.FT.CONTNO.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","CUSTOMER.ID",Y.FT.EXPCUS.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","EXP.CURRENCY",Y.FT.EXPCURR.POS)

!CALL GET.LOC.REF("LETTER.OF.CREDIT","HS.CODE",Y.LC.HSCODE.POS)
!CALL GET.LOC.REF("FUNDS.TRANSFER","HS.CODE",Y.FT.HSCODE.POS)

    RETURN

SET.LC.JOB.VALUE.LD:
*------------------
    R.NEW(FT.LOCAL.REF)<1,Y.FT.EXPLCNO.POS> = Y.EXP.LC.NO
    R.NEW(FT.LOCAL.REF)<1,Y.FT.CONTNO.POS> = Y.CONT.NO
    R.NEW(FT.LOCAL.REF)<1,Y.FT.EXPCUS.POS> = Y.CUST.NO
    R.NEW(FT.LOCAL.REF)<1,Y.FT.EXPCURR.POS> = Y.LC.CURR
!R.NEW(FT.LOCAL.REF)<1,Y.FT.HSCODE.POS> = Y.LC.HSCODE
    RETURN
