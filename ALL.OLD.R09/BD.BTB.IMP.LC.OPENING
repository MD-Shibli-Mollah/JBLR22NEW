*-----------------------------------------------------------------------------
* <Rating>-40</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE BD.BTB.IMP.LC.OPENING

    $INSERT I_EQUATE
    $INSERT I_COMMON
    $INSERT I_F.LETTER.OF.CREDIT
    $INSERT I_F.BD.BTB.JOB.REGISTER

    IF V$FUNCTION EQ 'A' THEN
        GOSUB INITIALISE
        GOSUB PROCESS
    END

INITIALISE:

    FN.BD.BTB.JOB.REGISTER = 'F.BD.BTB.JOB.REGISTER'
    F.BD.BTB.JOB.REGISTER = ''
    CALL OPF(FN.BD.BTB.JOB.REGISTER,F.BD.BTB.JOB.REGISTER)
    RETURN

PROCESS:
    GOSUB GET.LOC.REF.POS
    Y.JOB.NUMBER = R.NEW(TF.LC.LOCAL.REF)<1,Y.JOB.NO.POS>
    Y.BTB.LC.AMT = R.NEW(TF.LC.LC.AMOUNT)

    CALL F.READ(FN.BD.BTB.JOB.REGISTER,Y.JOB.NUMBER,R.BTB.JOB.REGISTER,F.BD.BTB.JOB.REGISTER,Y.BD.JOB.REG.ERR)
    IF NOT(Y.BD.JOB.REG.ERR) THEN
        Y.ENT.AVAIL = R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.AVL.AMT>
        Y.IMP.LC.REF = R.BTB.JOB.REGISTER<BTB.JOB.IM.TF.REF>
        IF NOT(Y.IMP.LC.REF) THEN
            Y.COUNT = "1"
            Y.TOT.BTB.LC.AMT = "0"
        END ELSE
            LOCATE ID.NEW IN Y.IMP.LC.REF<1,1> SETTING Y.CNT.POS THEN
                Y.COUNT = Y.CNT.POS
                Y.TOT.BTB.LC.AMT = R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.AMT> - R.BTB.JOB.REGISTER<BTB.JOB.IM.LC.AMOUNT,Y.COUNT>
                R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.AVL.AMT> += R.BTB.JOB.REGISTER<BTB.JOB.IM.LC.AMOUNT,Y.COUNT>
            END ELSE
                Y.COUNT = DCOUNT(Y.IMP.LC.REF,@VM)
                Y.COUNT += 1
                Y.TOT.BTB.LC.AMT = R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.AMT>
            END
        END
        GOSUB UPDATE.JOB.REGISTER
    END

    RETURN

UPDATE.JOB.REGISTER:

    R.BTB.JOB.REGISTER<BTB.JOB.IM.TF.REF,Y.COUNT> = ID.NEW
    R.BTB.JOB.REGISTER<BTB.JOB.IM.BB.LC.NO,Y.COUNT> = R.NEW(TF.LC.OLD.LC.NUMBER)
    R.BTB.JOB.REGISTER<BTB.JOB.IM.LC.CURRENCY,Y.COUNT> = R.NEW(TF.LC.LC.CURRENCY)
    R.BTB.JOB.REGISTER<BTB.JOB.IM.LC.AMOUNT,Y.COUNT> = R.NEW(TF.LC.LC.AMOUNT)
    R.BTB.JOB.REGISTER<BTB.JOB.IM.ISSUE.DATE,Y.COUNT> = R.NEW(TF.LC.ISSUE.DATE)
    R.BTB.JOB.REGISTER<BTB.JOB.IM.EXPIRY.DATE,Y.COUNT> = R.NEW(TF.LC.ADVICE.EXPIRY.DATE)
    R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.AMT> = Y.BTB.LC.AMT + Y.TOT.BTB.LC.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.AVL.AMT> -= Y.BTB.LC.AMT
    CALL F.WRITE(FN.BD.BTB.JOB.REGISTER,Y.JOB.NUMBER,R.BTB.JOB.REGISTER)

    RETURN

GET.LOC.REF.POS:

    Y.JOB.NO.POS=''
    Y.JOB.ENT.POS=''
    Y.LC.AMT.LCY.POS = ''
    Y.ENT.PR.POS = ''
    Y.LC.AMT.POS = ''
    Y.EXCH.RATE.POS = ''

    CALL GET.LOC.REF("LETTER.OF.CREDIT","JOB.NUMBER",Y.JOB.NO.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","BTB.ENT.AMT",Y.JOB.ENT.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","BTB.ENT.RATE",Y.ENT.PR.POS)

    CALL GET.LOC.REF("LETTER.OF.CREDIT","EXCHANGE.RATE",Y.EXCH.RATE.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","LC.AMT.LCY",Y.LC.AMT.POS)
    RETURN
