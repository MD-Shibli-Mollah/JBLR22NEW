*--------------------------------------------------------------------------------------------------------
*-----------------------------------------------------------------------------
* <Rating>-58</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE JBL.V.VAL.INS.COVERED
*--------------------------------------------------------------------------------------------------------
* This routine check the value in the INS.COVER local fields and validates the
* record. When INS.COVERED is "N" then its associated fields will be noinput & Validation to throw error if
* Fields values are provided.
* When INS.COVERED is "Y" then its associated fields will be inputable & Validation to throw error if field
* Values are not Provided.
*--------------------------------------------------------------------------------------------------------
* Modification History :
* --------------------
* 20110210 - New - Naveen Kumar N
*--------------------------------------------------------------------------------------------------------
* Common Variables :
* ----------------
* R.NEW - Holds the current record values
* ETEXT - Error Varable in the cross validations
* AF    - Current Field number at the field validation
* AV    - Current Value number at the field validation
* AS    - Current SUB value number at the field validation
* COMI  - Holds the current inputted field value and used at field validation
*--------------------------------------------------------------------------------------------------------
    $INCLUDE GLOBUS.BP I_COMMON
    $INCLUDE GLOBUS.BP I_EQUATE
    $INCLUDE GLOBUS.BP I_F.COLLATERAL
*---------------------------------------------------------------------------------------------------------
!---------------Main Para---------------------------------------------------------------------------------
*
    GOSUB GET.LOC.MULTI.REF
    GOSUB PROCESS.ONE
*
    IF MESSAGE EQ "VAL" THEN
        GOSUB PROCESS.TWO
    END
    RETURN
*---------------------------------------------------------------------------------------------------------
GET.LOC.MULTI.REF:
******************
! This gosub is to get the respective positions for the Local reference Fields
*
    Y.APPLICATION       = "COLLATERAL"
    FIELD.NAME          = "INS.COVER.DATE":VM:"INS.COMP.NAME":VM:"INS.COVER":VM:"INS.COVER.AMT":VM:"INS.EXPIRY.DATE":VM:"INS.COVERED"
    FIELD.POS           = ""
    CALL MULTI.GET.LOC.REF(Y.APPLICATION,FIELD.NAME,FIELD.POS)
*
    INS.COVER.DATE.POS  = FIELD.POS<1,1>
    INS.COMP.NAME.POS   = FIELD.POS<1,2>
    INS.COVER.POS       = FIELD.POS<1,3>
    INS.COVER.AMT.POS   = FIELD.POS<1,4>
    INS.EXPIRY.DATE.POS = FIELD.POS<1,5>
    INS.COVERED.POS     = FIELD.POS<1,6>
*
    RETURN
*----------------------------------------------------------------------------------------------------------
PROCESS.ONE:
************
! Cross validation is returned . And Process is executed only at field validation
*
!-----MANIK/S---!
*    IF MESSAGE EQ "VAL" THEN RETURN
!----MANIK/E----!
    Y.INS.COVERED = COMI
*
    BEGIN CASE
    CASE Y.INS.COVERED EQ "N"
        R.NEW(COLL.LOCAL.REF)<1,INS.COVER.DATE.POS>  = ""
        R.NEW(COLL.LOCAL.REF)<1,INS.COMP.NAME.POS>   = ""
        R.NEW(COLL.LOCAL.REF)<1,INS.COVER.POS>       = ""
        R.NEW(COLL.LOCAL.REF)<1,INS.COVER.AMT.POS>   = ""
        R.NEW(COLL.LOCAL.REF)<1,INS.EXPIRY.DATE.POS> = ""
*
        T.LOCREF<INS.COVER.DATE.POS,7>  = "NOINPUT"
        T.LOCREF<INS.COMP.NAME.POS,7>   = "NOINPUT"
        T.LOCREF<INS.COVER.POS,7>       = "NOINPUT"
        T.LOCREF<INS.COVER.AMT.POS,7>   = "NOINPUT"
        T.LOCREF<INS.EXPIRY.DATE.POS,7> = "NOINPUT"
*
        CALL REFRESH.FIELD(COLL.LOCAL.REF<1,INS.COVER.DATE.POS>,'')
        CALL REFRESH.FIELD(COLL.LOCAL.REF<1,INS.COMP.NAME.POS>,'')
        CALL REFRESH.FIELD(COLL.LOCAL.REF<1,INS.COVER.POS>,'')
        CALL REFRESH.FIELD(COLL.LOCAL.REF<1,INS.COVER.AMT.POS>,'')
        CALL REFRESH.FIELD(COLL.LOCAL.REF<1,INS.EXPIRY.DATE.POS>,'')
*
    CASE Y.INS.COVERED EQ "Y"
        GOSUB INNER.CASE
    END CASE
*
    RETURN
*-------------------------------------------------------------------------------
INNER.CASE:
***********
! Inner case to Make Associated fields as Inputtable. When INS.COVERED is "Y"
*
    T.LOCREF<INS.COVER.DATE.POS,7>  = ""
    T.LOCREF<INS.COMP.NAME.POS,7>   = ""
    T.LOCREF<INS.COVER.POS,7>       = ""
    T.LOCREF<INS.COVER.AMT.POS,7>   = ""
    T.LOCREF<INS.EXPIRY.DATE.POS,7> = ""
*
    CALL REFRESH.FIELD(COLL.LOCAL.REF<1,INS.COVER.DATE.POS>,'')
    CALL REFRESH.FIELD(COLL.LOCAL.REF<1,INS.COMP.NAME.POS>,'')
    CALL REFRESH.FIELD(COLL.LOCAL.REF<1,INS.COVER.POS>,'')
    CALL REFRESH.FIELD(COLL.LOCAL.REF<1,INS.COVER.AMT.POS>,'')
    CALL REFRESH.FIELD(COLL.LOCAL.REF<1,INS.EXPIRY.DATE.POS>,'')
*
    RETURN
*-------------------------------------------------------------------------------
PROCESS.TWO:
************
! Process.Two is executed only at cross validation time.
! Validations are provided when no data is provided in the associated fields.
*
    IF COMI EQ "Y" THEN
        IF NOT(R.NEW(COLL.LOCAL.REF)<1,INS.COVER.DATE.POS>) THEN
            ETEXT = "EB-INPUT.MADATORY"
            AF    = COLL.LOCAL.REF
            AV    = INS.COVER.DATE.POS
            CALL STORE.END.ERROR
        END
        IF NOT(R.NEW(COLL.LOCAL.REF)<1,INS.COMP.NAME.POS>) THEN
            ETEXT = "EB-INPUT.MADATORY"
            AF    = COLL.LOCAL.REF
            AV    = INS.COMP.NAME.POS
            CALL STORE.END.ERROR
        END
        IF NOT(R.NEW(COLL.LOCAL.REF)<1,INS.COVER.POS>) THEN
            ETEXT = "EB-INPUT.MADATORY"
            AF    = COLL.LOCAL.REF
            AV    = INS.COVER.POS
            CALL STORE.END.ERROR
        END
        IF NOT(R.NEW(COLL.LOCAL.REF)<1,INS.COVER.AMT.POS>) THEN
            ETEXT = "EB-INPUT.MADATORY"
            AF    = COLL.LOCAL.REF
            AV    = INS.COVER.AMT.POS
            CALL STORE.END.ERROR
        END
        IF NOT(R.NEW(COLL.LOCAL.REF)<1,INS.EXPIRY.DATE.POS>) THEN
            ETEXT = "EB-INPUT.MADATORY"
            AF    = COLL.LOCAL.REF
            AV    = INS.EXPIRY.DATE.POS
            CALL STORE.END.ERROR
        END
!-----MANIK/S------!
!        CALL REFRESH.FIELD(COLL.LOCAL.REF,'')
!----MANIK/E-------!
END ELSE
        IF R.NEW(COLL.LOCAL.REF)<1,INS.COVER.DATE.POS> THEN
            ETEXT = "EB-INPUT.NOT.MADATORY"
            AF    = COLL.LOCAL.REF
            AV    = INS.COVER.DATE.POS
            CALL STORE.END.ERROR
        END
        IF R.NEW(COLL.LOCAL.REF)<1,INS.COMP.NAME.POS> THEN
            ETEXT = "EB-INPUT.NOT.MADATORY"
            AF    = COLL.LOCAL.REF
            AV    = INS.COMP.NAME.POS
            CALL STORE.END.ERROR
        END
        IF R.NEW(COLL.LOCAL.REF)<1,INS.COVER.POS> THEN
            ETEXT = "EB-INPUT.NOT.MADATORY"
            AF    = COLL.LOCAL.REF
            AV    = INS.COVER.POS
            CALL STORE.END.ERROR
        END
        IF R.NEW(COLL.LOCAL.REF)<1,INS.COVER.AMT.POS> THEN
            ETEXT = "EB-INPUT.NOT.MADATORY"
            AF    = COLL.LOCAL.REF
            AV    = INS.COVER.AMT.POS
            CALL STORE.END.ERROR
        END
        IF R.NEW(COLL.LOCAL.REF)<1,INS.EXPIRY.DATE.POS> THEN
            ETEXT = "EB-INPUT.NOT.MADATORY"
            AF    = COLL.LOCAL.REF
            AV    = INS.EXPIRY.DATE.POS
            CALL STORE.END.ERROR
        END
!----MANIK/S-----!
!        CALL REFRESH.FIELD(COLL.LOCAL.REF,'')
!-----MANIK/E-----!
    END
    RETURN
*-------------------------------------------------------------------------------
END
