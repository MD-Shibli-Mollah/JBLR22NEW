*******Develop By: Robiul (JBL)********
*****Date: 31 JAN 2017 ***************
    SUBROUTINE ATM.VALIDATION.CHK
!PROGRAM ATM.VALIDATION.CHK

    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT BP I_F.ATM.CARD.MGT
    $INSERT GLOBUS.BP I_F.CARD.ISSUE

    FN.AC = "F.ACCOUNT"
    F.AC = ""
    FN.ATM="F.EB.ATM.CARD.MGT"
    F.ATM=""
    FN.ATM.NAU="F.EB.ATM.CARD.MGT$NAU"
    F.ATM.NAU=""
    FN.C.ISSUE = "F.CARD.ISSUE"
    F.C.ISSUE  = ""

    Y.REQUEST="EB.ATM.CARD.MGT":PGM.VERSION
    CALL OPF(FN.ATM,F.ATM)
    CALL OPF(FN.ATM.NAU,F.ATM.NAU)
    CALL OPF(FN.C.ISSUE,F.C.ISSUE)

    Y.ACCOUNT=R.NEW(EB.ATM19.ACCT.NO)
    CALL OPF(FN.AC,F.AC)
    CALL F.READ(FN.AC,Y.ACCOUNT,R.AC.REC,F.AC,Y.ERR)
    Y.CATEGORY=R.AC.REC<AC.CATEGORY>


    IF R.NEW(EB.ATM19.FROM.DATE) > R.NEW(EB.ATM19.TO.DATE) THEN
        ETEXT ="FROM DATE MUST BE LESS THEN TO DATE"
        CALL STORE.END.ERROR
    END
    IF R.NEW(EB.ATM19.ATTRIBUTE4) NE "" AND R.NEW(EB.ATM19.ATTRIBUTE4) > R.NEW(EB.ATM19.TO.DATE) THEN
        ETEXT ="REISSUE DATE MUST BE LESS THEN TO DATE"
        CALL STORE.END.ERROR
    END
    IF R.NEW(EB.ATM19.CARD.STATUS)="DONE" AND R.NEW(EB.ATM19.DELIVERY.DATE) NE "" AND R.NEW(EB.ATM19.DELIVERY.DATE) NE TODAY AND V$FUNCTION EQ 'I' THEN
        ETEXT ="DELIVERY DATE MUST BE TODAY"
        CALL STORE.END.ERROR
    END

    IF LEN(R.NEW(EB.ATM19.CARD.NO)) NE 18 AND Y.REQUEST EQ "EB.ATM.CARD.MGT,UPDATE" THEN
        ETEXT ="CARD NUMBER MUST BE 18 DIGIT"
        CALL STORE.END.ERROR
    END
    ELSE  IF R.NEW(EB.ATM19.CARD.NO) NE "" AND R.NEW(EB.ATM19.CARD.STATUS)="APPROVED" AND Y.REQUEST EQ "EB.ATM.CARD.MGT,UPDATE" AND V$FUNCTION EQ 'I' THEN

        Y.CARD.NO=R.NEW(EB.ATM19.CARD.NO)
        Y.CHECK=0
        SEL.CMD = "SELECT ":FN.ATM:" WITH CARD.NO LIKE ..." : RIGHT(Y.CARD.NO,4)
        CALL EB.READLIST(SEL.CMD,SEL.LIST,"",NO.OF.RECORD,RET.CODE)
        LOOP
            REMOVE Y.REC.ID FROM SEL.LIST SETTING Y.POS
        WHILE Y.REC.ID:Y.POS

            CALL F.READ(FN.ATM,Y.REC.ID,R.ATM.REC,F.ATM,Y.ERR)
            Y.CARD.NODB=R.ATM.REC<EB.ATM19.CARD.NO>
            Y.MASK=R.ATM.REC<EB.ATM19.CARD.MASK>
            Y.CARD.NAME=R.NEW(EB.ATM19.CARD.NAME)
            CALL ATM.MS.MASK(Y.MASK,"DEP",Y.RESULT.DATA,Y.CARD.NAME)
            Y.CARD.NO=LEFT(Y.CARD.NODB,6):Y.RESULT.DATA:RIGHT(Y.CARD.NODB,4)
            IF Y.CARD.NO EQ R.NEW(EB.ATM19.CARD.NO) THEN
                ETEXT ="CARD NUMBER ALREADY USED ANOTHER ACCOUNT"
                CALL STORE.END.ERROR
                Y.CHECK=1
                BREAK
            END
        REPEAT

        IF Y.CHECK EQ 0 THEN
            SEL.CMD = "SELECT ":FN.ATM.NAU:" WITH CARD.NO LIKE ..." : RIGHT(Y.CARD.NO,4)
            CALL EB.READLIST(SEL.CMD,SEL.LIST,"",NO.OF.RECORD,RET.CODE)
            LOOP
                REMOVE Y.REC.ID FROM SEL.LIST SETTING Y.POS
            WHILE Y.REC.ID:Y.POS
                CALL F.READ(FN.ATM.NAU,Y.REC.ID,R.ATM.REC,F.ATM.NAU,Y.ERR)
                Y.CARD.NODB=R.ATM.REC<EB.ATM19.CARD.NO>
                Y.MASK=R.ATM.REC<EB.ATM19.CARD.MASK>
                Y.CARD.NAME=R.NEW(EB.ATM19.CARD.NAME)
                CALL ATM.MS.MASK(Y.MASK,"DEP",Y.RESULT.DATA,Y.CARD.NAME)
                Y.CARD.NO=LEFT(Y.CARD.NODB,6):Y.RESULT.DATA:RIGHT(Y.CARD.NODB,4)
                IF Y.CARD.NO EQ R.NEW(EB.ATM19.CARD.NO) THEN
                    ETEXT ="CARD NUMBER ALREADY USED ANOTHER ACCOUNT"
                    CALL STORE.END.ERROR
                    BREAK
                END
            REPEAT
        END
    END
    SEL.CMD = "SELECT ":FN.C.ISSUE:" WITH @ID LIKE ..." : R.NEW(EB.ATM19.CARD.NO)
    CALL EB.READLIST(SEL.CMD,SEL.LIST,"",NO.OF.RECORD,RET.CODE)

    IF NO.OF.RECORD >0 THEN
        ETEXT ="CARD NUMBER ALREADY USED ANOTHER ACCOUNT"
        CALL STORE.END.ERROR
    END
    RETURN
