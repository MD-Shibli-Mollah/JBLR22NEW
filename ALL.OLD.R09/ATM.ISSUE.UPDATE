*-----------------------------------------------------------------------------
* <Rating>0</Rating>
*-----------------------------------------------------------------------------
*-----------------------------------------------------------------------------
* THIS ROUTINE USE FOR UPDATE DATA OF ALL VERSION
* Developed By: Md. Robiul Islam
*Deploy Date: 12 JAN 2017
*-----------------------------------------------------------------------------
    SUBROUTINE ATM.ISSUE.UPDATE

    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT BP I_F.ATM.CARD.MGT
    $INSERT GLOBUS.BP I_F.FUNDS.TRANSFER


    FN.AC = "F.ACCOUNT"
    F.AC = ""
    FN.ATM="F.EB.ATM.CARD.MGT"
    F.ATM=""
    FN.ATM.NAU="F.EB.ATM.CARD.MGT$NAU"
    F.ATM.NAU=""
    FN.ATM.HIS="F.EB.ATM.CARD.MGT$HIS"
    F.ATM.HIS=""

    FN.FT.NAU = "F.FUNDS.TRANSFER$NAU"
    F.FT.NAU = ""
    FN.FT = "F.FUNDS.TRANSFER"
    F.FT = ""
    FN.FT.HIS = "F.FUNDS.TRANSFER$HIS"
    F.FT.HIS = ""
    CALL OPF(FN.ATM,F.ATM)
    CALL OPF(FN.ATM.NAU,F.ATM.NAU)
    CALL OPF(FN.ATM.HIS,F.ATM.HIS)
    CALL OPF(FN.FT.NAU,F.FT.NAU)
    CALL OPF(FN.FT,F.FT)
    CALL OPF(FN.FT.HIS,F.FT.HIS)

    Y.ACCOUNT=R.NEW(EB.ATM19.ACCT.NO)
    CALL OPF(FN.AC,F.AC)
    CALL F.READ(FN.AC,Y.ACCOUNT,R.AC.REC,F.AC,Y.ERR)
    Y.CATEGORY=R.AC.REC<AC.CATEGORY>
    Y.AC.COMPANY=R.AC.REC<AC.CO.CODE>
    Y.TIME.STAMP = TIMEDATE()
    IF R.NEW(EB.ATM19.CARD.STATUS)="PENDING" AND R.NEW(EB.ATM19.REQUEST.TYPE)="ISSUE" AND V$FUNCTION EQ 'I' THEN
        R.NEW(EB.ATM19.ISSUE.TIME)=Y.TIME.STAMP[1,2]:Y.TIME.STAMP[4,2]
    END
    IF R.NEW(EB.ATM19.CARD.STATUS)="APPROVED" AND R.NEW(EB.ATM19.REQUEST.TYPE)="CLOSE" AND V$FUNCTION EQ 'I' THEN

        R.NEW(EB.ATM19.APPROVED.DATE)=TODAY
    END

    R.NEW(EB.ATM19.ACCT.CATEGORY)=Y.CATEGORY
    Y.REQUEST="EB.ATM.CARD.MGT":PGM.VERSION

    IF Y.REQUEST EQ "EB.ATM.CARD.MGT,REISSUE" AND V$FUNCTION EQ 'I' THEN
        R.NEW(EB.ATM19.REQUEST.TYPE)="REISSUE"
        R.NEW(EB.ATM19.CARD.STATUS)="PENDING"
        R.NEW(EB.ATM19.RE.ISSUE.TIME)=Y.TIME.STAMP[1,2]:Y.TIME.STAMP[4,2]
        R.NEW(EB.ATM19.RE.ISSUE.DATE)=TODAY

        IF R.NEW(EB.ATM19.REISSUE.REASON) NE 5 AND R.NEW(EB.ATM19.ISSUE.WAIVE.CHARGE) EQ "YES" AND R.NEW(EB.ATM19.NARRATIVE) EQ "" THEN
            ETEXT ="Please Provide Reissue Waive Reason"
            CALL STORE.END.ERROR
        END
    END
    IF Y.REQUEST EQ "EB.ATM.CARD.MGT,PINREQ" AND V$FUNCTION EQ 'I' THEN
        R.NEW(EB.ATM19.ATTRIBUTE3)=TODAY
        R.NEW(EB.ATM19.REQUEST.TYPE)="PINREISSUE"
        R.NEW(EB.ATM19.CARD.STATUS)="PENDING"
        IF R.NEW(EB.ATM19.ISSUE.WAIVE.CHARGE) EQ "YES" AND R.NEW(EB.ATM19.NARRATIVE) EQ "" AND R.NEW(EB.ATM19.REISSUE.REASON) NE 7 THEN
            ETEXT ="Please Provide Pin Reissue Waive Reason"
            CALL STORE.END.ERROR
        END
    END
    IF Y.REQUEST EQ "EB.ATM.CARD.MGT,CLOSE" AND V$FUNCTION EQ 'I' THEN
        R.NEW(EB.ATM19.CARD.CLOSE.RE.DATE)=TODAY
        R.NEW(EB.ATM19.REQUEST.TYPE)="CLOSE"
        R.NEW(EB.ATM19.CARD.STATUS)="PENDING"
        IF R.NEW(EB.ATM19.ISSUE.WAIVE.CHARGE) EQ "YES" AND R.NEW(EB.ATM19.NARRATIVE) EQ "" THEN
            ETEXT ="Please Provide Card Close Waive Reason"
            CALL STORE.END.ERROR
        END
    END
    IF Y.REQUEST EQ "EB.ATM.CARD.MGT,WAIVE" AND V$FUNCTION EQ 'I' THEN
        R.NEW(EB.ATM19.REQUEST.TYPE)="WAIVE"
    END

    IF Y.REQUEST EQ "EB.ATM.CARD.MGT,WAIVE" AND V$FUNCTION EQ 'A' THEN
        R.NEW(EB.ATM19.CARD.STATUS)="DONE"
    END

    IF Y.REQUEST EQ "EB.ATM.CARD.MGT,ISSUE" AND V$FUNCTION EQ 'I' THEN
        R.NEW(EB.ATM19.CARD.STATUS)="PENDING"
    END

    Y.ID= ID.NEW
    CALL F.READ(FN.ATM,Y.ID,R.ATM.REC,F.ATM,Y.ERR)
    IF R.ATM.REC NE "" AND V$FUNCTION EQ 'I' THEN
        IF R.ATM.REC<EB.ATM19.CARD.STATUS> EQ "DENIED" THEN
            R.ATM.REC<EB.ATM19.CARD.STATUS>=""
        END
        ELSE
            R.ATM.REC<EB.ATM19.CARD.STATUS>="PROCESSING"
        END
        CALL F.WRITE(FN.ATM,Y.ID,R.ATM.REC)
    END
    IF R.ATM.REC NE "" AND V$FUNCTION EQ 'D' AND ( Y.REQUEST EQ "EB.ATM.CARD.MGT,UPDATE" OR Y.REQUEST EQ "EB.ATM.CARD.MGT,DENIED" OR Y.REQUEST EQ "EB.ATM.CARD.MGT,CLOSEHO" OR  Y.REQUEST EQ "EB.ATM.CARD.MGT,PINHO") THEN
        R.ATM.REC<EB.ATM19.CARD.STATUS>="PENDING"
        CALL F.WRITE(FN.ATM,Y.ID,R.ATM.REC)
    END
    IF R.ATM.REC NE "" AND V$FUNCTION EQ 'D' AND ( Y.REQUEST EQ "EB.ATM.CARD.MGT,REISSUE" OR Y.REQUEST EQ "EB.ATM.CARD.MGT,CLOSE" OR Y.REQUEST EQ "EB.ATM.CARD.MGT,ISSUE" OR Y.REQUEST EQ "EB.ATM.CARD.MGT,WAIVE" OR Y.REQUEST EQ "EB.ATM.CARD.MGT,PINREQ") THEN
        IF R.ATM.REC<EB.ATM19.CARD.STATUS> EQ "" THEN
            R.ATM.REC<EB.ATM19.CARD.STATUS>="DENIED"
        END
        ELSE
            R.ATM.REC<EB.ATM19.CARD.STATUS>="DONE"
        END
        CALL F.WRITE(FN.ATM,Y.ID,R.ATM.REC)
    END
    IF R.ATM.REC NE "" AND V$FUNCTION EQ 'D' AND ( Y.REQUEST EQ "EB.ATM.CARD.MGT,DELIVERY" OR Y.REQUEST EQ "EB.ATM.CARD.MGT,CLOSEBR" ) THEN
        R.ATM.REC<EB.ATM19.CARD.STATUS>="APPROVED"
        CALL F.WRITE(FN.ATM,Y.ID,R.ATM.REC)
    END

    IF V$FUNCTION EQ 'I' THEN
        R.NEW(EB.ATM19.INPUTTER.CO.CODE)=ID.COMPANY
    END

    IF V$FUNCTION EQ 'R' THEN
        ETEXT ="REVERSE NOT ALLOW"
        CALL STORE.END.ERROR
    END

!IF ID.COMPANY NE "BD0012001" AND (Y.REQUEST  EQ "EB.ATM.CARD.MGT,UPDATE" OR Y.REQUEST EQ  "EB.ATM.CARD.MGT,CLOSEHO" OR Y.REQUEST EQ  "EB.ATM.CARD.MGT,DENIED" OR Y.REQUEST EQ  "EB.ATM.CARD.MGT,PINHO") THEN
!ETEXT ="CARD PROCESSING ALLOW ONLY HEAD OFFICE"
!CALL STORE.END.ERROR
!END
!IF ID.COMPANY NE Y.AC.COMPANY THEN
!IF Y.REQUEST  EQ "EB.ATM.CARD.MGT,UPDATE" OR Y.REQUEST EQ "EB.ATM.CARD.MGT,CLOSEHO" OR Y.REQUEST EQ  "EB.ATM.CARD.MGT,DENIED" OR Y.REQUEST EQ "EB.ATM.CARD.MGT,PINHO" THEN

!END
!ELSE
!ETEXT ="CARD INPUT GIVEN ONLY OWN BRANCH"
!CALL STORE.END.ERROR
!END
!END
    IF Y.REQUEST EQ "EB.ATM.CARD.MGT,UPDATE"  AND V$FUNCTION EQ 'I' AND  R.NEW(EB.ATM19.REQUEST.TYPE) EQ "REISSUE"  AND R.NEW(EB.ATM19.CARD.CLOSE.DATE) EQ "" AND R.NEW(EB.ATM19.ATTRIBUTE4) EQ "" THEN
        ETEXT ="Please Provide Reissue Date "
        CALL STORE.END.ERROR
    END
    IF R.NEW(EB.ATM19.NARRATIVE) NE "" AND   LEN(R.NEW(EB.ATM19.NARRATIVE)) GT 80 THEN
        ETEXT ="narrative within 80 characters "
        CALL STORE.END.ERROR
    END
    IF Y.REQUEST EQ "EB.ATM.CARD.MGT,UPDATE"  AND V$FUNCTION EQ 'I' AND  R.NEW(EB.ATM19.REQUEST.TYPE) NE "REISSUE" THEN
        T(EB.ATM19.ATTRIBUTE4)<3> = 'NOINPUT'
    END
    IF Y.REQUEST EQ "EB.ATM.CARD.MGT,UPDATE"  AND V$FUNCTION EQ 'I' AND  R.NEW(EB.ATM19.REQUEST.TYPE) EQ "REISSUE" THEN
        IF R.NEW(EB.ATM19.CARD.CLOSE.DATE) NE "" THEN
            T(EB.ATM19.ATTRIBUTE4)<3> = 'NOINPUT'
        END
        ELSE IF R.NEW(EB.ATM19.CARD.CLOSE.DATE) EQ "" THEN
            T(EB.ATM19.FROM.DATE)<3> = 'NOINPUT'
        END
    END
    IF V$FUNCTION EQ 'D' AND  R.NEW(EB.ATM19.CARD.STATUS) EQ "PENDING" AND R.NEW(EB.ATM19.ATTRIBUTE5) NE "" THEN
        Y.ATM.CR.ID=R.NEW(EB.ATM19.ATTRIBUTE5)
        CALL F.READ(FN.FT.NAU,Y.ATM.CR.ID,REC.FT.CHK,F.FT.NAU,ERR.FT)
        IF REC.FT.CHK EQ "" THEN
            CALL F.READ(FN.FT,Y.ATM.CR.ID,REC.FT.CHK,F.FT,ERR.FT.LIVE)
        END
        IF REC.FT.CHK EQ "" THEN
            CALL EB.READ.HISTORY.REC(F.FT.HIS, Y.ATM.CR.ID,REC.FT.CHK,Y.ERR.FT.HIS)
        END

        IF REC.FT.CHK NE "" AND REC.FT.CHK<FT.RECORD.STATUS> EQ "REVE" THEN

        END
        ELSE  IF REC.FT.CHK NE ""  THEN

            ETEXT ="FUNDS TRANSFER UNAUTHRISED STAGE OR ALREADY DEDUCT THIS REQUEST"
            CALL STORE.END.ERROR
        END

    END

    IF Y.REQUEST EQ "EB.ATM.CARD.MGT,REISSUE"  AND V$FUNCTION EQ 'I' AND  R.NEW(EB.ATM19.CARD.STATUS) EQ "PENDING" AND R.NEW(EB.ATM19.REISSUE.REASON) EQ 5 THEN
        Y.DAYS="C"
        CALL CDD("",TODAY,R.NEW(EB.ATM19.TO.DATE),Y.DAYS)
        IF(Y.DAYS GE 30) THEN
            ETEXT ="CARD VALIDATION " : Y.DAYS :" DAYS REMAINING"
            CALL STORE.END.ERROR
        END

    END


    RETURN
