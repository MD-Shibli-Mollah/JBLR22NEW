*-----------------------------------------------------------------------------
* <Rating>60</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE BD.PC.OPEN.ATUH.RTN

    $INSERT I_EQUATE
    $INSERT I_COMMON
    $INSERT I_F.LETTER.OF.CREDIT
    $INSERT I_F.LD.LOANS.AND.DEPOSITS
    $INSERT I_F.BD.BTB.JOB.REGISTER

    IF R.NEW(LD.RECORD.STATUS) = "INAU" THEN
        GOSUB INITIALISE
        GOSUB PROCESS
    END

INITIALISE:

    FN.BD.BTB.JOB.REGISTER = 'F.BD.BTB.JOB.REGISTER'
    F.BD.BTB.JOB.REGISTER = ''
    CALL OPF(FN.BD.BTB.JOB.REGISTER,F.BD.BTB.JOB.REGISTER)

    FN.LD="F.LD.LOANS.AND.DEPOSITS"
    F.LD=""
    CALL OPF(FN.LD,F.LD)

    RETURN

PROCESS:
    GOSUB GET.LOC.REF.POS
    IF R.NEW(LD.LOCAL.REF)<1,Y.JOBNO.POS> EQ "" THEN RETURN
    Y.JOB.NUMBER = R.NEW(LD.LOCAL.REF)<1,Y.JOBNO.POS>
    Y.PC.LD.AMT = R.NEW(LD.LOCAL.REF)<1,Y.PC.FCVAL.POS>
    CALL F.READ(FN.BD.BTB.JOB.REGISTER,Y.JOB.NUMBER,R.BTB.JOB.REGISTER,F.BD.BTB.JOB.REGISTER,Y.BD.JOB.REG.ERR)
    IF NOT(Y.BD.JOB.REG.ERR) THEN
        Y.PC.ENT.AVAIL = R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AVL.AMT>
        Y.PC.LD.REF = R.BTB.JOB.REGISTER<BTB.JOB.PCECC.LOAN.ID>
        IF NOT(Y.PC.LD.REF) THEN
            Y.COUNT = "1"
            Y.TOT.PC.LD.AMT = "0"
        END ELSE
            LOCATE ID.NEW IN Y.PC.LD.REF<1,1> SETTING Y.CNT.POS THEN
                Y.COUNT = Y.CNT.POS
                Y.TOT.PC.LD.AMT = R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AMT> - R.BTB.JOB.REGISTER<BTB.JOB.LOAN.AMT.FCY,Y.COUNT>
                R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AVL.AMT> += R.BTB.JOB.REGISTER<BTB.JOB.LOAN.AMT.FCY,Y.COUNT>
            END ELSE
                Y.COUNT = DCOUNT(Y.PC.LD.REF,@VM)
                Y.COUNT += 1
                Y.TOT.PC.LD.AMT = R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AMT>
            END
        END
        GOSUB UPDATE.JOB.REGISTER
    END

    RETURN

UPDATE.JOB.REGISTER:

    R.BTB.JOB.REGISTER<BTB.JOB.PCECC.LOAN.ID,Y.COUNT> = ID.NEW
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.REF.NO,Y.COUNT> = R.NEW(LD.LOCAL.REF)<1,Y.PCREF.POS>
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.LI.PROD,Y.COUNT> = R.NEW(LD.LOCAL.REF)<1,Y.LIPROD.POS>
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.STAT.DT,Y.COUNT> = R.NEW(LD.VALUE.DATE)
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.FC.CUR,Y.COUNT> = R.NEW(LD.LOCAL.REF)<1,Y.JOBCUR.POS>
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.AMT.FCY,Y.COUNT> = R.NEW(LD.LOCAL.REF)<1,Y.PC.FCVAL.POS>
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.EX.RT,Y.COUNT> = R.NEW(LD.LOCAL.REF)<1,Y.RATE.POS>
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.AMT.LCY,Y.COUNT> = R.NEW(LD.AMOUNT)
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.MAT.DT,Y.COUNT> = R.NEW(LD.FIN.MAT.DATE)
    R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AMT> = Y.PC.LD.AMT + Y.TOT.PC.LD.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AVL.AMT> -= Y.PC.LD.AMT
    CALL F.WRITE(FN.BD.BTB.JOB.REGISTER,Y.JOB.NUMBER,R.BTB.JOB.REGISTER)

    RETURN

GET.LOC.REF.POS:

    CALL GET.LOC.REF("LD.LOANS.AND.DEPOSITS","DOC.VALUE.FC",Y.PC.FCVAL.POS)
    CALL GET.LOC.REF("LD.LOANS.AND.DEPOSITS","EXCHANGE.RATE",Y.RATE.POS)
    CALL GET.LOC.REF("LD.LOANS.AND.DEPOSITS","JOB.NUMBER",Y.JOBNO.POS)
    CALL GET.LOC.REF("LD.LOANS.AND.DEPOSITS","OLD.LEGACY.ID",Y.PCREF.POS)
    CALL GET.LOC.REF("LD.LOANS.AND.DEPOSITS","LIMIT.PROD",Y.LIPROD.POS)
    CALL GET.LOC.REF("LD.LOANS.AND.DEPOSITS","JOB.ENT.CUR",Y.JOBCUR.POS)
    CALL GET.LOC.REF("LD.LOANS.AND.DEPOSITS","JOB.ENTIT.AMT",Y.JOBAMT.POS)

    RETURN
