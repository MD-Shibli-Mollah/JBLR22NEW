    SUBROUTINE JBL.MICR.STOCK.MGT.ID
!    PROGRAM JBL.MICR.STOCK.MGT.ID
    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INCLUDE BP I_F.JBL.MICR.STOCK.MGT

    FN.CHQ.TYPE='F.JBL.MICR.STOCK.MGT'
    F.CHQ.TYPE=''

    CALL OPF(FN.CHQ.TYPE, F.CHQ.TYPE)

    Y.TR.TYPE = COMI

    ALPHA.ARRAY = "A" :@FM: "B" :@FM: "C" :@FM: "D" :@FM: "E" :@FM: "F" :@FM: "G" :@FM: "H" :@FM: "I" :@FM: "J" :@FM: "K" :@FM: "L" :@FM: "M" :@FM: "N" :@FM: "O" :@FM: "P" :@FM: "Q" :@FM: "R" :@FM: "S" :@FM: "T" :@FM: "U" :@FM: "V" :@FM: "W" :@FM: "X" :@FM: "Y" :@FM: "Z"

    TYPE.ARRAY = "SB" :@FM: "CD" :@VM: "CURR" :@VM: "STD" :@VM: "SOD" :@VM: "CCHY" :@VM: "CCH" :@FM: "DD" :@FM: "PO" :@FM: "SD" :@FM: "TR" :@FM: "PS" :@FM: "FD" :@FM: "MT" :@FM: "FC" :@FM: "FD"

    IF V$FUNCTION EQ "I" THEN
        FIND LEFT(Y.TR.TYPE,2) IN TYPE.ARRAY SETTING V.FLD, V.VAL ELSE NULL
        IF(TYPE.ARRAY<V.FLD,1> NE '' AND LEN(Y.TR.TYPE) GT 2) THEN
            ID.NEW = COMI
        END
        ELSE
            FIND COMI IN TYPE.ARRAY SETTING V.FLD, V.VAL ELSE NULL

            Y.TR.TYPE = TYPE.ARRAY<V.FLD,1>

            IF (Y.TR.TYPE NE '') THEN
                SEL.CMD = "SELECT ":FN.CHQ.TYPE:" WITH TR.TYPE EQ ":Y.TR.TYPE
                CALL EB.READLIST(SEL.CMD,SEL.LIST,'',NO.OF.REC,RET.CODE)
                IF (NO.OF.REC EQ 0) THEN
                    ID.NEW = Y.TR.TYPE:"A"
                END
                ELSE
                    FOR V.I = NO.OF.REC TO NO.OF.REC
                        IF(LEN(SEL.LIST) EQ 3) THEN
                            CALL F.READ(FN.CHQ.TYPE,SEL.LIST,REC.BOOK,F.CHQ.TYPE,ERR.REQ)
                            IF (REC.BOOK<MICR.STOCK.BALANCE>) LT 1000 THEN
                                FIND RIGHT(SEL.LIST,1) IN ALPHA.ARRAY SETTING V.FLD, V.VAL ELSE NULL
                                ID.NEW = Y.TR.TYPE : ALPHA.ARRAY<V.FLD + 1,2>
                            END
                            ELSE
                                ID.NEW = SEL.LIST
                            END

                        END
!ELSE
!   ID.NEW = SEL.LIST
!END
                    NEXT V.I
                END
            END
            ELSE
                E="INVALID PARAMETER"
                CALL STORE.END.ERROR
            END
        END
        RETURN
    END
