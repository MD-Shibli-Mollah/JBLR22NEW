*-------------------------------------------------------------------------------
*-----------------------------------------------------------------------------
* <Rating>-180</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE JBL.V.AUT.LIM.LTR.RTN
*-------------------------------------------------------------------------------
* Subroutine Description:
*------------------------
* This auth routine will perform Opening of LIM/LTR, Associated charge deduction
* and Closure of PAD.
*-------------------------------------------------------------------------------
* Modification History:
* ---------------------
* 04/03/2011 - New - G.Sabari
*                    Thesys Technologies
*-------------------------------------------------------------------------------
    $INCLUDE GLOBUS.BP I_COMMON
    $INCLUDE GLOBUS.BP I_EQUATE
    $INCLUDE GLOBUS.BP I_ACCT.COMMON
    $INCLUDE GLOBUS.BP I_F.LD.LOANS.AND.DEPOSITS
    $INCLUDE GLOBUS.BP I_F.STMT.ENTRY
    $INCLUDE GLOBUS.BP I_F.CATEG.ENTRY
    $INCLUDE JBL.BP I_F.BD.LIM.LTR.PARAMETER
    $INCLUDE JBL.BP I_F.BD.LIM.LTR.REGISTER
    $INCLUDE GLOBUS.BP I_F.COMPANY
    $INCLUDE GLOBUS.BP I_F.ACCOUNT

    GOSUB INITIALISE
    GOSUB PROCESS

    RETURN
*-------------------------------------------------------------------------------
INITIALISE:
***********

    FN.LD.LOANS.AND.DEPOSITS  = 'F.LD.LOANS.AND.DEPOSITS'
    F.LD.LOANS.AND.DEPOSITS   = ''
    CALL OPF(FN.LD.LOANS.AND.DEPOSITS,F.LD.LOANS.AND.DEPOSITS)
    R.LD.LOANS.AND.DEPOSITS   = ''

    FN.BD.LIM.LTR.PARAMETER   = 'F.BD.LIM.LTR.PARAMETER'
    F.BD.LIM.LTR.PARAMETER    = ''
    CALL OPF(FN.BD.LIM.LTR.PARAMETER,F.BD.LIM.LTR.PARAMETER)
    R.BD.LIM.LTR.PARAMETER    = ''

    FN.BD.LIM.LTR.REGISTER    = 'F.BD.LIM.LTR.REGISTER'
    F.BD.LIM.LTR.REGISTER     = ''
    CALL OPF(FN.BD.LIM.LTR.REGISTER,F.BD.LIM.LTR.REGISTER)
    R.BD.LIM.LTR.REGISTER     = ''

    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT  = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
    R.ACCOUNT  = ''

    Y.VAR = ''

    RETURN
*-------------------------------------------------------------------------------
PROCESS:
********

    Y.PAD.ID = R.NEW(BD.REG.PAD.ID)
    CALL F.READ(FN.LD.LOANS.AND.DEPOSITS,Y.PAD.ID,R.LD.LOANS.AND.DEPOSITS,F.LD.LOANS.AND.DEPOSITS,Y.PAD.ERR)
    IF R.LD.LOANS.AND.DEPOSITS THEN
        Y.CCY = R.LD.LOANS.AND.DEPOSITS<LD.CURRENCY>
    END
    CALL F.READ(FN.BD.LIM.LTR.PARAMETER,'SYSTEM',R.BD.LIM.LTR.PARAMETER,F.BD.LIM.LTR.PARAMETER,Y.PARAM.ERR)
    IF R.BD.LIM.LTR.PARAMETER<BD.PARAM.AUTO.DEBIT> EQ 'YES' THEN
        Y.VAR = "LD.LOANS.AND.DEPOSITS,PAD.CLOSURE.AUTO I ":ID.NEW
        CALL EB.SET.NEW.TASK(Y.VAR)

        IF R.BD.LIM.LTR.PARAMETER THEN
            Y.CHG.CR.ACCT       = R.BD.LIM.LTR.PARAMETER<BD.PARAM.CHG.CR.ACCT>
            Y.PADINT.CR.ACCT    = R.BD.LIM.LTR.PARAMETER<BD.PARAM.PADINT.CR.ACCT>
            Y.PARAM.CHARGE.TYPE = R.BD.LIM.LTR.PARAMETER<BD.PARAM.CHG.TYPE>
            Y.PARAM.CR.ACCT     = R.BD.LIM.LTR.PARAMETER<BD.PARAM.CHG.CR.ACCT>
            Y.PAD.CR.TXN.CODE   = R.BD.LIM.LTR.PARAMETER<BD.PARAM.PAD.CR.TXN.CODE>
            Y.PAD.DR.TXN.CODE   = R.BD.LIM.LTR.PARAMETER<BD.PARAM.PAD.DR.TXN.CODE>
            Y.CHG.CR.TXN.CODE   = R.BD.LIM.LTR.PARAMETER<BD.PARAM.CHG.CR.TXN.CODE>
            Y.CHG.DR.TXN.CODE   = R.BD.LIM.LTR.PARAMETER<BD.PARAM.CHG.DR.TXN.CODE>
            Y.OTH.CR.TXN.CODE   = R.BD.LIM.LTR.PARAMETER<BD.PARAM.OTH.CR.TXN.CODE>
            Y.OTH.DR.TXN.CODE   = R.BD.LIM.LTR.PARAMETER<BD.PARAM.OTH.DR.TXN.CODE>
            Y.MAR.CR.TXN.CODE   = R.BD.LIM.LTR.PARAMETER<BD.PARAM.MAR.CR.TXN.CODE>
            Y.MAR.DR.TXN.CODE   = R.BD.LIM.LTR.PARAMETER<BD.PARAM.MAR.DR.TXN.CODE>
        END

        Y.PAD.AMOUNT = R.NEW(BD.REG.PAD.INTEREST)
        Y.DR.ACCT    = R.NEW(BD.REG.PAD.DEBIT.ACCT)
        Y.MARGIN.AMT = R.NEW(BD.REG.LC.MARGIN.AMT)

        GOSUB RAISE.PAD.ENTRIES
        GOSUB CHARGE.ENTRIES
        GOSUB OTHER.CHARGE.ENTRIES

        IF Y.MARGIN.AMT THEN
            Y.CR.MAR.ACCT = R.NEW(BD.REG.CR.MARGIN.ACCT)
            Y.DR.MAR.ACCT = R.NEW(BD.REG.DR.MARGIN.ACCT)

            GOSUB GET.MAR.CR.DETAILS
            GOSUB GET.MAR.DR.DETAILS
        END
        CALL EB.ACCOUNTING('LD','SAO',FINAL.ENTRY.REC,'')
    END
    RETURN
*-------------------------------------------------------------------------------
RAISE.PAD.ENTRIES:
******************

    FINAL.ENTRY.REC = ''

    IF R.NEW(BD.REG.PAD.INT.PAYMT) EQ 'By Customer' THEN
        GOSUB GET.PAD.CR.DETAILS
        GOSUB GET.PAD.DR.DETAILS
    END

    RETURN
*-------------------------------------------------------------------------------
CHARGE.ENTRIES:
***************

    Y.CHARGE.TYPE     = R.NEW(BD.REG.CHG.TYPE)
    Y.CHARGE.AMOUNT   = R.NEW(BD.REG.CHG.AMOUNT)
    Y.CHG.DR.ACCOUNT  = R.NEW(BD.REG.CHG.DR.ACCT)
    Y.CHG.PAY.MTD     = R.NEW(BD.REG.CHG.PAY.METHOD)
    Y.CHARGE.TYPE.CNT = DCOUNT(Y.CHARGE.TYPE,VM)
    Y.CHARGE.TYPE.INT = 1

    LOOP
    WHILE Y.CHARGE.TYPE.INT LE Y.CHARGE.TYPE.CNT
        Y.CHARGE.VAL          = Y.CHARGE.TYPE<1,Y.CHARGE.TYPE.INT>
        Y.CHARGE.AMOUNT.VAL   = Y.CHARGE.AMOUNT<1,Y.CHARGE.TYPE.INT>
        Y.CHG.DR.ACCOUNT.VAL  = Y.CHG.DR.ACCOUNT<1,Y.CHARGE.TYPE.INT>
        Y.CHG.PAY.MTD.VAL     = Y.CHG.PAY.MTD<1,Y.CHARGE.TYPE.INT>

        IF Y.CHG.PAY.MTD.VAL EQ 'By Customer' THEN
            LOCATE Y.CHARGE.VAL IN Y.PARAM.CHARGE.TYPE<1,1> SETTING Y.POS1 THEN
                Y.CR.ACCOUNT = Y.PARAM.CR.ACCT<1,Y.POS1>
                GOSUB CHARGE.CR.ENTRIES
                GOSUB CHARGE.DR.ENTRIES
            END
        END
        Y.CHARGE.TYPE.INT++
    REPEAT

    RETURN
*------------------------------------------------------------------------------------------
CHARGE.DR.ENTRIES:
******************

    STMT.ENTRY.REC = ''
    CALL F.READ(FN.ACCOUNT,Y.CHG.DR.ACCOUNT.VAL,R.ACCOUNT,F.Y.DR.ACCT,Y.ACC.ERR)
    IF R.ACCOUNT<AC.CURRENCY> NE LCCY THEN
        Y.AMT         = Y.CHARGE.AMOUNT.VAL
        Y.TARGET.CCY  = R.ACCOUNT<AC.CURRENCY>
        Y.CCY.MKT     = R.ACCOUNT<AC.CURRENCY.MARKET>
        Y.EXCH.RATE   = ''
        Y.CONV.AMT    = ''
        CALL MIDDLE.RATE.CONV.CHECK(Y.CONV.AMT,Y.TARGET.CCY,Y.EXCH.RATE,Y.CCY.MKT,Y.AMT,'','')
        STMT.ENTRY.REC<AC.STE.CURRENCY>      = Y.TARGET.CCY
        STMT.ENTRY.REC<AC.STE.AMOUNT.FCY>    = (-1)*Y.CONV.AMT
        STMT.ENTRY.REC<AC.STE.EXCHANGE.RATE> = Y.EXCH.RATE
    END ELSE
        STMT.ENTRY.REC<AC.STE.CURRENCY>      = LCCY
    END

    STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER>    = Y.CHG.DR.ACCOUNT.VAL
    STMT.ENTRY.REC<AC.STE.AMOUNT.LCY>        = (-1)*Y.CHARGE.AMOUNT.VAL
    STMT.ENTRY.REC<AC.STE.TRANSACTION.CODE>  = Y.CHG.DR.TXN.CODE

    GOSUB STMT.COMMON.DETS

    IF FINAL.ENTRY.REC THEN
        FINAL.ENTRY.REC := FM:LOWER(STMT.ENTRY.REC)
    END ELSE
        FINAL.ENTRY.REC  = LOWER(STMT.ENTRY.REC)
    END

    RETURN
*------------------------------------------------------------------------------
CHARGE.CR.ENTRIES:
******************

    STMT.ENTRY.REC = ''
    STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER>     = LCCY:Y.CR.ACCOUNT:'0001'
    IF C$MULTI.BOOK THEN
        STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER> = LCCY:Y.CR.ACCOUNT:'0001':R.COMPANY(EB.COM.SUB.DIVISION.CODE)
    END

    STMT.ENTRY.REC<AC.STE.AMOUNT.LCY>         = Y.CHARGE.AMOUNT.VAL
    STMT.ENTRY.REC<AC.STE.TRANSACTION.CODE>   = Y.CHG.CR.TXN.CODE

    GOSUB STMT.COMMON.DETS

    IF FINAL.ENTRY.REC THEN
        FINAL.ENTRY.REC := FM:LOWER(STMT.ENTRY.REC)
    END ELSE
        FINAL.ENTRY.REC  = LOWER(STMT.ENTRY.REC)
    END

    RETURN
*------------------------------------------------------------------------------
OTHER.CHARGE.ENTRIES:
*********************

    Y.OTH.CHARGE.DESC     = R.NEW(BD.REG.OTH.CHGS.DESC)
    Y.OTH.CHARGE.AMT      = R.NEW(BD.REG.OTH.CHGS.AMT)
    Y.OTH.CHARGE.DR.ACCT  = R.NEW(BD.REG.OTH.CHG.DRACCT)
    Y.OTH.CHARGE.DESC.CNT = DCOUNT(Y.OTH.CHARGE.DESC,VM)
    Y.OTH.MTD             = R.NEW(BD.REG.OTH.CHG.PAYMTD)
    Y.OTH.CHARGE.DESC.INT = 1

    LOOP
    WHILE Y.OTH.CHARGE.DESC.INT LE Y.OTH.CHARGE.DESC.CNT
        Y.OTH.CHARGE.AMT.VAL     = Y.OTH.CHARGE.AMT<1,Y.OTH.CHARGE.DESC.INT>
        Y.OTH.CHARGE.DR.ACCT.VAL = Y.OTH.CHARGE.DR.ACCT<1,Y.OTH.CHARGE.DESC.INT>
        Y.OTH.MTD.VAL            = Y.OTH.MTD<1,Y.OTH.CHARGE.DESC.INT>

        IF Y.OTH.MTD.VAL EQ 'By Customer' THEN
            LOCATE 'OTHER.CHARGES' IN Y.PARAM.CHARGE.TYPE<1,1> SETTING Y.POS THEN
                Y.OTH.CR.ACCT = Y.PARAM.CR.ACCT<1,Y.POS>
                GOSUB OTHER.CR.CHARGES
                GOSUB OTHER.DR.CHARGES
            END
        END
        Y.OTH.CHARGE.DESC.INT++
    REPEAT

    RETURN
*-----------------------------------------------------------------------------------
OTHER.DR.CHARGES:
*****************

    STMT.ENTRY.REC = ''
    CALL F.READ(FN.ACCOUNT,Y.OTH.CHARGE.DR.ACCT.VAL,R.ACCOUNT,F.Y.DR.ACCT,Y.ACC.ERR)
    IF R.ACCOUNT<AC.CURRENCY> NE LCCY THEN
        Y.AMT         = Y.OTH.CHARGE.AMT.VAL
        Y.TARGET.CCY  = R.ACCOUNT<AC.CURRENCY>
        Y.CCY.MKT     = R.ACCOUNT<AC.CURRENCY.MARKET>
        Y.EXCH.RATE   = ''
        Y.CONV.AMT    = ''
        CALL MIDDLE.RATE.CONV.CHECK(Y.CONV.AMT,Y.TARGET.CCY,Y.EXCH.RATE,Y.CCY.MKT,Y.AMT,'','')
        STMT.ENTRY.REC<AC.STE.CURRENCY>      = Y.TARGET.CCY
        STMT.ENTRY.REC<AC.STE.AMOUNT.FCY>    = (-1)*Y.CONV.AMT
        STMT.ENTRY.REC<AC.STE.EXCHANGE.RATE> = Y.EXCH.RATE
    END ELSE
        STMT.ENTRY.REC<AC.STE.CURRENCY>      = LCCY
    END

    STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER>    = Y.OTH.CHARGE.DR.ACCT.VAL
    STMT.ENTRY.REC<AC.STE.AMOUNT.LCY>        = (-1)*Y.OTH.CHARGE.AMT.VAL
    STMT.ENTRY.REC<AC.STE.TRANSACTION.CODE>  = Y.OTH.DR.TXN.CODE

    GOSUB STMT.COMMON.DETS

    IF FINAL.ENTRY.REC THEN
        FINAL.ENTRY.REC := FM:LOWER(STMT.ENTRY.REC)
    END ELSE
        FINAL.ENTRY.REC  = LOWER(STMT.ENTRY.REC)
    END

    RETURN
*--------------------------------------------------------------------------------------
OTHER.CR.CHARGES:
*****************

    STMT.ENTRY.REC = ''
    STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER>       = LCCY:Y.OTH.CR.ACCT:'0001'
    IF C$MULTI.BOOK THEN
        STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER>   = LCCY:Y.OTH.CR.ACCT:'0001':R.COMPANY(EB.COM.SUB.DIVISION.CODE)
    END
    STMT.ENTRY.REC<AC.STE.AMOUNT.LCY>           = Y.OTH.CHARGE.AMT.VAL
    STMT.ENTRY.REC<AC.STE.TRANSACTION.CODE>     = Y.OTH.CR.TXN.CODE

    GOSUB STMT.COMMON.DETS

    IF FINAL.ENTRY.REC THEN
        FINAL.ENTRY.REC := FM:LOWER(STMT.ENTRY.REC)
    END ELSE
        FINAL.ENTRY.REC  = LOWER(STMT.ENTRY.REC)
    END

    RETURN
*------------------------------------------------------------------------------
GET.PAD.DR.DETAILS:
*******************

    STMT.ENTRY.REC = ''
    CALL F.READ(FN.ACCOUNT,Y.DR.ACCT,R.ACCOUNT,F.Y.DR.ACCT,Y.ACC.ERR)
    IF R.ACCOUNT<AC.CURRENCY> NE LCCY THEN
        Y.AMT         = Y.PAD.AMOUNT
        Y.TARGET.CCY  = R.ACCOUNT<AC.CURRENCY>
        Y.CCY.MKT     = R.ACCOUNT<AC.CURRENCY.MARKET>
        Y.EXCH.RATE   = ''
        Y.CONV.AMT    = ''
        CALL MIDDLE.RATE.CONV.CHECK(Y.CONV.AMT,Y.TARGET.CCY,Y.EXCH.RATE,Y.CCY.MKT,Y.AMT,'','')
        STMT.ENTRY.REC<AC.STE.CURRENCY>      = Y.TARGET.CCY
        STMT.ENTRY.REC<AC.STE.AMOUNT.FCY>    = (-1)*Y.CONV.AMT
        STMT.ENTRY.REC<AC.STE.EXCHANGE.RATE> = Y.EXCH.RATE
    END ELSE
        STMT.ENTRY.REC<AC.STE.CURRENCY>      = LCCY
    END

    STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER>    = Y.DR.ACCT
    STMT.ENTRY.REC<AC.STE.AMOUNT.LCY>        = (-1)*Y.PAD.AMOUNT
    STMT.ENTRY.REC<AC.STE.TRANSACTION.CODE>  = Y.PAD.DR.TXN.CODE

    GOSUB STMT.COMMON.DETS

    IF FINAL.ENTRY.REC THEN
        FINAL.ENTRY.REC := FM:LOWER(STMT.ENTRY.REC)
    END ELSE
        FINAL.ENTRY.REC  = LOWER(STMT.ENTRY.REC)
    END

    RETURN
*-------------------------------------------------------------------------------
GET.PAD.CR.DETAILS:
*******************

    STMT.ENTRY.REC = ''
    STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER>      = LCCY:Y.PADINT.CR.ACCT:'0001'
    IF C$MULTI.BOOK THEN
        STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER>  = LCCY:Y.PADINT.CR.ACCT:'0001':R.COMPANY(EB.COM.SUB.DIVISION.CODE)
    END

    STMT.ENTRY.REC<AC.STE.AMOUNT.LCY>          = Y.PAD.AMOUNT
    STMT.ENTRY.REC<AC.STE.TRANSACTION.CODE>    = Y.PAD.CR.TXN.CODE

    GOSUB STMT.COMMON.DETS

    IF FINAL.ENTRY.REC THEN
        FINAL.ENTRY.REC := FM:LOWER(STMT.ENTRY.REC)
    END ELSE
        FINAL.ENTRY.REC  = LOWER(STMT.ENTRY.REC)
    END

    RETURN
*-------------------------------------------------------------------------------------------
GET.MAR.DR.DETAILS:
*******************

    STMT.ENTRY.REC = ''
    CALL F.READ(FN.ACCOUNT,Y.DR.MAR.ACCT,R.ACCOUNT,F.Y.DR.ACCT,Y.ACC.ERR)
    IF R.ACCOUNT<AC.CURRENCY> NE LCCY THEN
        Y.AMT         = Y.MARGIN.AMT
        Y.TARGET.CCY  = R.ACCOUNT<AC.CURRENCY>
        Y.CCY.MKT     = R.ACCOUNT<AC.CURRENCY.MARKET>
        Y.EXCH.RATE   = ''
        Y.CONV.AMT    = ''
        CALL MIDDLE.RATE.CONV.CHECK(Y.CONV.AMT,Y.TARGET.CCY,Y.EXCH.RATE,Y.CCY.MKT,Y.AMT,'','')
        STMT.ENTRY.REC<AC.STE.CURRENCY>          = Y.TARGET.CCY
        STMT.ENTRY.REC<AC.STE.AMOUNT.FCY>        = (-1)*Y.CONV.AMT
        STMT.ENTRY.REC<AC.STE.EXCHANGE.RATE>     = Y.EXCH.RATE
    END ELSE
        STMT.ENTRY.REC<AC.STE.CURRENCY> = LCCY
    END

    STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER>     = Y.DR.MAR.ACCT
    STMT.ENTRY.REC<AC.STE.AMOUNT.LCY>         = (-1)*Y.MARGIN.AMT
    STMT.ENTRY.REC<AC.STE.TRANSACTION.CODE>   = Y.MAR.DR.TXN.CODE

    GOSUB STMT.COMMON.DETS

    IF FINAL.ENTRY.REC THEN
        FINAL.ENTRY.REC := FM:LOWER(STMT.ENTRY.REC)
    END ELSE
        FINAL.ENTRY.REC  = LOWER(STMT.ENTRY.REC)
    END

    RETURN
*-------------------------------------------------------------------------------------------
GET.MAR.CR.DETAILS:
*******************

    STMT.ENTRY.REC = ''
    STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER>     = LCCY:Y.CR.MAR.ACCT:'0001'

    IF C$MULTI.BOOK THEN
        STMT.ENTRY.REC<AC.STE.ACCOUNT.NUMBER> = LCCY:Y.CR.MAR.ACCT:'0001':R.COMPANY(EB.COM.SUB.DIVISION.CODE)
    END

    STMT.ENTRY.REC<AC.STE.AMOUNT.LCY>         = Y.MARGIN.AMT
    STMT.ENTRY.REC<AC.STE.TRANSACTION.CODE>   = Y.MAR.CR.TXN.CODE

    GOSUB STMT.COMMON.DETS

    IF FINAL.ENTRY.REC THEN
        FINAL.ENTRY.REC := FM:LOWER(STMT.ENTRY.REC)
    END ELSE
        FINAL.ENTRY.REC = LOWER(STMT.ENTRY.REC)
    END

    RETURN

*-------------------------------------------------------------------------------------------
STMT.COMMON.DETS:
*****************

    STMT.ENTRY.REC<AC.STE.CUSTOMER.ID>       = R.LD.LOANS.AND.DEPOSITS<LD.CUSTOMER.ID>
    STMT.ENTRY.REC<AC.STE.ACCOUNT.OFFICER>   = R.LD.LOANS.AND.DEPOSITS<LD.MIS.ACCT.OFFICER>
    STMT.ENTRY.REC<AC.STE.PRODUCT.CATEGORY>  = R.LD.LOANS.AND.DEPOSITS<LD.CATEGORY>
    STMT.ENTRY.REC<AC.STE.VALUE.DATE>        = TODAY
    STMT.ENTRY.REC<AC.STE.CURRENCY>          = R.LD.LOANS.AND.DEPOSITS<LD.CURRENCY>
    STMT.ENTRY.REC<AC.STE.POSITION.TYPE>     = R.LD.LOANS.AND.DEPOSITS<LD.POSITION.TYPE>
    STMT.ENTRY.REC<AC.STE.OUR.REFERENCE>     = ID.NEW
    STMT.ENTRY.REC<AC.STE.CURRENCY.MARKET>   = R.LD.LOANS.AND.DEPOSITS<LD.CURRENCY.MARKET>
    STMT.ENTRY.REC<AC.STE.DEPARTMENT.CODE>   = R.LD.LOANS.AND.DEPOSITS<LD.DEPT.CODE>
    STMT.ENTRY.REC<AC.STE.TRANS.REFERENCE>   = ID.NEW
    STMT.ENTRY.REC<AC.STE.SYSTEM.ID>         = 'LD'
    STMT.ENTRY.REC<AC.STE.BOOKING.DATE>      = TODAY
    STMT.ENTRY.REC<AC.STE.COMPANY.CODE>      = ID.COMPANY

    RETURN
*---------------------------------------------------------------------------------------------

END
