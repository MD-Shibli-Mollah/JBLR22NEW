*-----------------------------------------------------------------------------
* <Rating>-30</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE JBL.AZ.ACCT.FT.BLOCK

    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_ENQUIRY.COMMON
    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT BP I_F.RD.BASE.CATEG
    $INSERT GLOBUS.BP I_F.FUNDS.TRANSFER
    $INSERT GLOBUS.BP I_F.TELLER
    $INSERT JBL.BP I_F.ABL.H.MUL.MCD
    $INSERT GLOBUS.BP I_F.AZ.ACCOUNT
    $INSERT BP I_F.JBL.H.BK.MCD

    GOSUB INIT
    GOSUB OPENFILES
    GOSUB PROCESS

******
INIT:
******
    FN.ACCOUNT = 'FBNK.ACCOUNT'
    F.ACCOUNT = ''
    FN.FT = 'FBNK.FUNDS.TRANSFER'
    F.FT = ''
    FN.AZ.ACCT = 'FBNK.AZ.ACCOUNT'
    F.AZ.ACCT = ''
    FN.RD.BASE.CATEG = 'F.EB.RD.BASE.CATEG'
    F.RD.BASE.CATEG = ''

    RETURN

***********
OPENFILES:
***********
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
    CALL OPF(FN.AZ.ACCT,F.AZ.ACCT)
    CALL OPF(FN.RD.BASE.CATEG,F.RD.BASE.CATEG)
    CALL OPF(FN.FT,F.FT)
    RETURN

********
PROCESS:
********
    IF APPLICATION EQ 'FUNDS.TRANSFER' THEN
        Y.DR.ACC.NO = R.NEW(FT.DEBIT.ACCT.NO)
        Y.CR.ACC.NO = R.NEW(FT.CREDIT.ACCT.NO)
        Y.STATUS = R.NEW(FT.RECORD.STATUS)
        IF Y.STATUS NE 'IHLD' THEN
            GOSUB MSG.PRINT
        END
    END

    IF APPLICATION EQ 'TELLER' THEN
        Y.CR.ACC.NO = R.NEW(TT.TE.ACCOUNT.2)
        GOSUB MSG.PRINT
    END

    IF APPLICATION EQ 'ABL.H.MUL.MCD' THEN
        Y.CR.ACC.NO.CNT = DCOUNT(R.NEW(MCD.CREDIT.ACCT.NO),@VM)
        IF Y.CR.ACC.NO.CNT EQ 1 THEN
            Y.CR.ACC.NO = R.NEW(MCD.CREDIT.ACCT.NO)
            GOSUB MSG.PRINT
        END ELSE
            FOR I=1 TO Y.CR.ACC.NO.CNT
                Y.CR.ACC.NO = R.NEW(MCD.CREDIT.ACCT.NO)<1,I>
                GOSUB MSG.PRINT
            NEXT I
        END
    END
    IF APPLICATION EQ 'JBL.H.BK.MCD' THEN
        Y.CR.ACC.NO.CNT = DCOUNT(R.NEW(MCD.BK.CREDIT.ACCT.NO),@VM)
        IF Y.CR.ACC.NO.CNT EQ 1 THEN
            Y.CR.ACC.NO = R.NEW(MCD.BK.CREDIT.ACCT.NO)
            GOSUB MSG.PRINT
        END ELSE
            FOR I=1 TO Y.CR.ACC.NO.CNT
                Y.CR.ACC.NO = R.NEW(MCD.BK.CREDIT.ACCT.NO)<1,I>
                GOSUB MSG.PRINT
            NEXT I
        END
    END
    RETURN
************
MSG.PRINT:
************
    CALL F.READ(FN.ACCOUNT,Y.DR.ACC.NO,R.DR.ACCT,F.ACCOUNT,Y.ERR.DR)
    Y.DR.CATEG = R.DR.ACCT<AC.CATEGORY>
!CALL F.READ(FN.AZ.ACCT,Y.DR.ACC.NO,R.DR.AZ.ACCT,F.AZ.ACCT,Y.ERR.DR.AZ)

    CALL F.READ(FN.ACCOUNT,Y.CR.ACC.NO,R.CR.ACCT,F.ACCOUNT,Y.ERR.CR)
    Y.CR.CATEG = R.CR.ACCT<AC.CATEGORY>
!CALL F.READ(FN.AZ.ACCT,Y.CR.ACC.NO,R.CR.AZ.ACCT,F.AZ.ACCT,Y.ERR.CR.AZ)

    CALL F.READ(FN.RD.BASE.CATEG,'SYSTEM',R.RD.CATEG,F.RD.BASE.CATEG,Y.RD.ERR)
    Y.RD.CATEG = R.RD.CATEG<EB.RD.69.CATEGORY>

!IF R.DR.AZ.ACCT EQ '' THEN
    FINDSTR Y.DR.CATEG IN Y.RD.CATEG SETTING POS THEN
        AF = FT.DEBIT.ACCT.NO
        ETEXT = 'Debit Account is a Base Account'
        CALL STORE.END.ERROR
    END
!END
!IF R.CR.AZ.ACCT EQ '' THEN
    FINDSTR Y.CR.CATEG IN Y.RD.CATEG SETTING POS THEN
        BEGIN CASE
        CASE APPLICATION EQ 'TELLER'
            AF = TT.TE.ACCOUNT.2

        CASE APPLICATION EQ 'FUNDS.TRANSFER'
            AF = FT.CREDIT.ACCT.NO

        CASE APPLICATION EQ 'ABL.H.MUL.MCD'
            AF = (MCD.CREDIT.ACCT.NO)<1,I>
        CASE APPLICATION EQ 'JBL.H.BK.MCD'
            AF = (MCD.BK.CREDIT.ACCT.NO)<I,I>
        END CASE

        ETEXT = 'Credit Account is a Base Account'
        CALL STORE.END.ERROR
    END
!END
    RETURN
END
