*-----------------------------------------------------------------------------
* <Rating>-30</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE BD.DFC.AVAIBL.BAL

    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_F.LETTER.OF.CREDIT
    $INSERT GLOBUS.BP I_F.DRAWINGS
    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT GLOBUS.BP I_F.FUNDS.TRANSFER
    $INCLUDE JBL.BP I_F.BD.BTB.JOB.REGISTER
    $INCLUDE BP I_F.BD.L.DFC.ACCT.DETAILS

    GOSUB INIT
    GOSUB OPENFILES
    GOSUB PROCESS

    RETURN

*-------
INIT:
*-------
    FN.LC = 'F.LETTER.OF.CREDIT';              F.LC = ''
    FN.DR = 'F.DRAWINGS';                      F.DR = ''
    FN.AC = 'F.ACCOUNT';                       F.AC = ''
    FN.FT = 'F.FUNDS.TRANSFER';                F.FT = ''
    FN.BTB.JOB.REG = 'F.BD.BTB.JOB.REGISTER';  F.BTB.JOB.REG = ''
    FN.DFC.ACCT = 'F.BD.L.DFC.ACCT.DETAILS';   F.DFC.ACCT = ''

    RETURN

*---------
OPENFILES:
*---------
    CALL OPF(FN.LC,F.LC)
    CALL OPF(FN.DR,F.DR)
    CALL OPF(FN.AC,F.AC)
    CALL OPF(FN.FT,F.FT)
    CALL OPF(FN.BTB.JOB.REG,F.BTB.JOB.REG)
    CALL OPF(FN.DFC.ACCT,F.DFC.ACCT)

    CALL GET.LOC.REF('DRAWINGS','JOB.NUMBER',Y.JOB.NUMBER.POS)
    CALL GET.LOC.REF('LETTER.OF.CREDIT','JOB.NUMBER',Y.LC.JOB.NUMBER.POS)
    CALL GET.LOC.REF('DRAWINGS','DFC.AMT.AVAIL',Y.DFC.AMT.AVAIL.POS)
    CALL GET.LOC.REF('ACCOUNT','LINKED.TF.NO',Y.LINKED.TF.NO.POS)
    CALL GET.LOC.REF('FUNDS.TRANSFER','DFC.AMT.AVAIL',Y.TF.DFC.AMT.AVAIL.POS)
    RETURN

*--------
PROCESS:
*--------
    BEGIN CASE
    CASE APPLICATION EQ 'DRAWINGS'
        Y.DFC.ACCOUNT = R.NEW(TF.DR.DRAWDOWN.ACCOUNT)
        CALL F.READ(FN.AC,Y.DFC.ACCOUNT,R.ACCT.REC,F.AC,Y.ACCT.ERR)
        Y.CATEGORY = R.ACCT.REC<AC.CATEGORY>
        IF Y.CATEGORY EQ '4101' THEN
            Y.JOB.NO = R.NEW(TF.DR.LOCAL.REF)<1,Y.JOB.NUMBER.POS>
            CALL F.READ(FN.BTB.JOB.REG,Y.JOB.NO,R.JOB.REC,F.BTB.JOB.REG,Y.JOB.ERR)
            Y.MAIN.TF = R.JOB.REC<BTB.JOB.EX.TF.REF>
            CALL F.READ(FN.DFC.ACCT,Y.DFC.ACCOUNT,R.DFC.ACCT.REC,F.DFC.ACCT,Y.DFC.ACCT.ERR)

            FIND Y.MAIN.TF IN R.DFC.ACCT.REC<DFC.ACCT.REF.NO> SETTING FVPOS,MVPOS,SVPOS THEN
                R.NEW(TF.DR.LOCAL.REF)<1,Y.DFC.AMT.AVAIL.POS> = R.DFC.ACCT.REC<DFC.ACCT.AMOUNT,MVPOS>
            END
        END

    CASE APPLICATION EQ 'FUNDS.TRANSFER'
        Y.FUNCTION = V$FUNCTION
        IF V$FUNCTION NE 'I' THEN RETURN
!IF V$FUNCTION EQ 'R' THEN RETURN
!IF V$FUNCTION EQ 'D' THEN RETURN
!Y.DFC.ACCOUNT = COMI
        Y.DFC.ACCOUNT = R.NEW(FT.DEBIT.ACCT.NO)
        CALL F.READ(FN.AC,Y.DFC.ACCOUNT,R.ACCT.REC,F.AC,Y.ACCT.ERR)
        Y.DR.ACT.CATEGORY = R.ACCT.REC<AC.CATEGORY>

        IF Y.DR.ACT.CATEGORY EQ '4101' THEN
            Y.FT.CR.ACT.NO = R.NEW(FT.CREDIT.ACCT.NO)
            CALL F.READ(FN.AC,Y.FT.CR.ACT.NO,R.ACCT.REC,F.AC,Y.ACCT.ERR)
            Y.CR.ACT.CATEGORY = R.ACCT.REC<AC.CATEGORY>

            Y.BTB.LC.NO = R.ACCT.REC<AC.LOCAL.REF><1,Y.LINKED.TF.NO.POS>
            CALL F.READ(FN.LC,Y.BTB.LC.NO,R.LC.REC,F.LC,Y.LC.ERR)

            Y.JOB.NO = R.LC.REC<TF.LC.LOCAL.REF><1,Y.LC.JOB.NUMBER.POS>
            CALL F.READ(FN.BTB.JOB.REG,Y.JOB.NO,R.JOB.REC,F.BTB.JOB.REG,Y.JOB.ERR)
            Y.MAIN.TF = R.JOB.REC<BTB.JOB.EX.TF.REF>
            CALL F.READ(FN.DFC.ACCT,Y.DFC.ACCOUNT,R.DFC.ACCT.REC,F.DFC.ACCT,Y.DFC.ACCT.ERR)

            FIND Y.MAIN.TF IN R.DFC.ACCT.REC<DFC.ACCT.REF.NO> SETTING FVPOS,MVPOS,SVPOS THEN
                R.NEW(FT.LOCAL.REF)<1,Y.TF.DFC.AMT.AVAIL.POS> = R.DFC.ACCT.REC<DFC.ACCT.AMOUNT,MVPOS>
            END ELSE
                R.NEW(FT.LOCAL.REF)<1,Y.TF.DFC.AMT.AVAIL.POS> = ""
            END

            Y.DFC.AVAIL.AMT = R.DFC.ACCT.REC<DFC.ACCT.AMOUNT,MVPOS>
            IF R.NEW(FT.DEBIT.AMOUNT) GT Y.DFC.AVAIL.AMT THEN
                GOSUB CHK.DFC.BAL
            END
            IF Y.DFC.AVAIL.AMT EQ "" THEN
                GOSUB CHK.DFC.BAL
            END

            IF Y.CR.ACT.CATEGORY NE "" THEN
                IF Y.CR.ACT.CATEGORY NE '1974' THEN
                    IF Y.CR.ACT.CATEGORY NE '1975' THEN
                        IF Y.CR.ACT.CATEGORY NE '1976' THEN
                            GOSUB CHK.PAD.ACCOUNT
                        END
                    END
                END
            END
        END

    CASE 1
    END CASE

    RETURN

*-----------
CHK.DFC.BAL:
*-----------
    AF = FT.DEBIT.AMOUNT
    ETEXT = "Insufficient Balance in DFC Account"
    CALL STORE.END.ERROR
    RETURN

*---------------
CHK.PAD.ACCOUNT:
*---------------
    AF = FT.CREDIT.ACCT.NO
    ETEXT = "Credit Account Must be PAD Account"
    CALL STORE.END.ERROR
    RETURN

END
