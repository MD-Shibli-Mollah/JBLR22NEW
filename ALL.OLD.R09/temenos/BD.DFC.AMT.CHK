*-----------------------------------------------------------------------------
* <Rating>-31</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE BD.DFC.AMT.CHK

    $INCLUDE GLOBUS.BP I_COMMON
    $INCLUDE GLOBUS.BP I_EQUATE
    $INCLUDE GLOBUS.BP I_F.DRAWINGS
    $INCLUDE GLOBUS.BP I_F.ACCOUNT
    $INCLUDE JBL.BP I_F.BD.BTB.JOB.REGISTER
    $INCLUDE BP I_F.BD.L.DFC.ACCT.DETAILS
    $INCLUDE GLOBUS.BP I_F.CUSTOMER
    GOSUB INIT
    GOSUB OPENFILES
    GOSUB PROCESS

    RETURN

*-------
INIT:
*-------
    FN.DR = 'F.DRAWINGS'
    F.DR = ''
    FN.AC = 'F.ACCOUNT'
    F.AC = ''
    FN.BTB.JOB.REG = 'F.BD.BTB.JOB.REGISTER'
    F.BTB.JOB.REG = ''
    FN.DFC.ACCT = 'F.BD.L.DFC.ACCT.DETAILS'
    F.DFC.ACCT = ''
    FN.CU='F.CUSTOMER'
    F.CU=''

    RETURN

*---------
OPENFILES:
*---------
    CALL OPF(FN.DR,F.DR)
    CALL OPF(FN.AC,F.AC)
    CALL OPF(FN.BTB.JOB.REG,F.BTB.JOB.REG)
    CALL OPF(FN.DFC.ACCT,F.DFC.ACCT)
    CALL OPF(FN.CU,F.CU)
    CALL GET.LOC.REF('DRAWINGS','JOB.NUMBER',Y.JOB.NUMBER.POS)
    CALL GET.LOC.REF('DRAWINGS','DFC.AMT.AVAIL',Y.DFC.AMT.AVAIL.POS)
    RETURN

*--------
PROCESS:
*--------
    Y.DFC.ACCOUNT = R.NEW(TF.DR.DRAWDOWN.ACCOUNT)

    CALL F.READ(FN.AC,Y.DFC.ACCOUNT,R.ACCT.REC,F.AC,Y.ACCT.ERR)
    Y.CATEGORY = R.ACCT.REC<AC.CATEGORY>
    IF Y.CATEGORY EQ '4101' THEN
        Y.JOB.NO = R.NEW(TF.DR.LOCAL.REF)<1,Y.JOB.NUMBER.POS>
*Added By Zakir for Allow Cross Payament
        POS = 1
        Y.OVERRIDE.VAL = R.NEW(V-9)
        Y.OVRRD.NO = DCOUNT(Y.OVERRIDE.VAL,VM)
        FOR I=1 TO Y.OVRRD.NO
            Y.OVRRD.DETLS = FIELD(Y.OVERRIDE.VAL,VM,I)
            Y.OVRRD.ID = FIELD(Y.OVRRD.DETLS,'}',1)

            IF (Y.OVRRD.ID='ACCT.UNAUTH.OD') THEN
                AF = TF.DR.DRAWDOWN.ACCOUNT
                ETEXT = 'Unauthorised Overdraft Not Possible'
                CALL STORE.END.ERROR
            END

        NEXT I


        Y.CUS.ID=FIELD(Y.JOB.NO,'.',2)
        IF R.ACCT.REC<AC.CUSTOMER> NE Y.CUS.ID THEN
            AF = TF.DR.DRAWDOWN.ACCOUNT
            ETEXT = 'CUSTOMER MASTER LC and BTB LC DIFFER'
            CALL STORE.END.ERROR
            RETURN
        END


        CALL F.READ(FN.CU,Y.CUS.ID,R.CU,F.CU,Y.CU.ERR)
        IF R.CU<EB.CUS.SECURE.MESSAGE> EQ 'YES' THEN
            RETURN
        END
***End Update By @Zakir**************

        CALL F.READ(FN.BTB.JOB.REG,Y.JOB.NO,R.JOB.REC,F.BTB.JOB.REG,Y.JOB.ERR)
        Y.MAIN.TF = R.JOB.REC<BTB.JOB.EX.TF.REF>
        CALL F.READ(FN.DFC.ACCT,Y.DFC.ACCOUNT,R.DFC.ACCT.REC,F.DFC.ACCT,Y.DFC.ACCT.ERR)
        FIND Y.MAIN.TF IN R.DFC.ACCT.REC<DFC.ACCT.REF.NO> SETTING FVPOS,MVPOS,SVPOS THEN
!R.NEW(TF.DR.LOCAL.REF)<Y.DFC.AMT.AVAIL.POS> = R.DFC.ACCT.REC<DFC.ACCT.AMOUNT,MVPOS>
!END
            IF R.NEW(TF.DR.DOCUMENT.AMOUNT) GT R.DFC.ACCT.REC<DFC.ACCT.AMOUNT,MVPOS> THEN
                AF = TF.DR.DRAWDOWN.ACCOUNT
                ETEXT = 'Insufficient Balance in DFC Account'
                CALL STORE.END.ERROR
            END
        END ELSE
            AF = TF.DR.DRAWDOWN.ACCOUNT
            ETEXT = 'Not Availabel Balance in ':Y.MAIN.TF
            CALL STORE.END.ERROR
        END
    END
    RETURN
END
