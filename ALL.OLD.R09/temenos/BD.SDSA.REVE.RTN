    SUBROUTINE BD.SDSA.REVE.RTN
    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_ENQUIRY.COMMON
    $INSERT GLOBUS.BP I_F.LOCKING
    $INSERT GLOBUS.BP I_F.COMPANY
    $INSERT GLOBUS.BP I_F.FUNDS.TRANSFER
    $INSERT GLOBUS.BP I_F.TELLER
    $INSERT JBL.BP I_F.BD.SDSA.ENTRY.DETAILS
    $INSERT JBL.BP I_F.BD.SDSA.AC.REFNO

!IF V$FUNCTION NE 'R' THEN RETURN
!DEBUG
    IF R.NEW(FT.RECORD.STATUS) EQ 'RNAU' OR R.NEW(TT.TE.RECORD.STATUS) EQ 'RNAU' OR R.NEW(FT.RECORD.STATUS) EQ 'RNAO' OR R.NEW(TT.TE.RECORD.STATUS) EQ 'RNAO' THEN
        GOSUB INIT
        GOSUB OPENFILES
        GOSUB PROCESS
    END
    RETURN

INIT:
    FN.FT = 'F.FUNDS.TRANSFER'
    F.FT = ''

    FN.TT = 'F.TELLER'
    F.TT = ''

    FN.SDSA.DET = 'F.BD.SDSA.ENTRY.DETAILS'
    F.SDSA.DET = ''

    FN.SDSA.REF = 'F.BD.SDSA.AC.REFNO'
    F.SDSA.REF = ''
    Y.REF.NO = ''
    Y.SDSA.ORG.CNT = ''
    Y.SDSA.ADJ.CNT = ''
    Y.TOT.ADJ.AMT = 0
    Y.TOT.ORG.AMT = 0
    Y.TOT.OUT.AMT = 0

    CALL GET.LOC.REF("FUNDS.TRANSFER","ORG.ADJ",Y.FT.ORGADJ.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","A.L",Y.FT.AL.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","FT.DR.DETAILS",Y.FT.DR.DETAILS.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","FT.CR.DETAILS",Y.FT.CR.DETAILS.POS)
    CALL GET.LOC.REF("TELLER","ORG.ADJ",Y.TT.ORGADJ.POS)
    CALL GET.LOC.REF("TELLER","A.L",Y.TT.AL.POS)

    RETURN

OPENFILES:
    CALL OPF(FN.FT,F.FT)
    CALL OPF(FN.TT,F.TT)
    CALL OPF(FN.SDSA.DET,F.SDSA.DET)
    CALL OPF(FN.SDSA.REF,F.SDSA.REF)
    RETURN

PROCESS:
    IF APPLICATION EQ 'FUNDS.TRANSFER' THEN
        Y.DR.REF.NO = R.NEW(FT.LOCAL.REF)<1,Y.FT.DR.DETAILS.POS>
        Y.CR.REF.NO = R.NEW(FT.LOCAL.REF)<1,Y.FT.CR.DETAILS.POS>
        IF Y.DR.REF.NO NE '' THEN
            Y.REF.NO = Y.DR.REF.NO
        END
        ELSE
            Y.REF.NO = Y.CR.REF.NO
        END
        Y.ORGADJ = R.NEW(FT.LOCAL.REF)<1,Y.FT.ORGADJ.POS>
        Y.DEBIT.AMOUNT = R.NEW(FT.DEBIT.AMOUNT)
    END ELSE
        IF APPLICATION EQ 'TELLER' THEN
            Y.REF.NO = R.NEW(TT.TE.NARRATIVE.2)
            Y.ORGADJ = R.NEW(TT.TE.LOCAL.REF)<1,Y.TT.ORGADJ.POS>
            Y.DEBIT.AMOUNT = R.NEW(TT.TE.AMOUNT.LOCAL.1)
        END
    END

    IF Y.ORGADJ EQ 'ORG' THEN
        CALL F.READ(FN.SDSA.DET,Y.REF.NO,R.SDSA.DET.REC,F.SDSA.DET,Y.SDSA.DET.ERR)
        IF R.SDSA.DET.REC THEN
            Y.SDSA.ORG.CNT = DCOUNT(R.SDSA.DET.REC<BD.SDSA.ORG.TRANS.REF.NO>,@VM)
            FOR I = 1 TO Y.SDSA.ORG.CNT
                Y.TRANS.REF.NO = R.SDSA.DET.REC<BD.SDSA.ORG.TRANS.REF.NO,I>
                IF Y.TRANS.REF.NO EQ ID.NEW THEN
                    R.SDSA.DET.REC<BD.SDSA.ORG.REVE,I> = 'REVE'
                    Y.TOT.ORG.AMT = R.SDSA.DET.REC<BD.SDSA.TOT.ORG.AMT> - Y.DEBIT.AMOUNT
                    Y.TOT.OUT.AMT = R.SDSA.DET.REC<BD.SDSA.OUTSTANDING.AMT> - Y.DEBIT.AMOUNT
                    R.SDSA.DET.REC<BD.SDSA.TOT.ORG.AMT> = Y.TOT.ORG.AMT
                    R.SDSA.DET.REC<BD.SDSA.OUTSTANDING.AMT> = Y.TOT.OUT.AMT
                END
            NEXT I
            CALL F.WRITE(FN.SDSA.DET,Y.REF.NO,R.SDSA.DET.REC)
!WRITE R.SDSA.DET.REC TO F.SDSA.DET,Y.DR.REF.NO
        END
    END
    ELSE
        IF Y.REF.NO NE '' THEN
            CALL F.READ(FN.SDSA.DET,Y.REF.NO,R.SDSA.DET.REC,F.SDSA.DET,Y.SDSA.DET.ERR)
            IF R.SDSA.DET.REC THEN
                Y.SDSA.ADJ.CNT = DCOUNT(R.SDSA.DET.REC<BD.SDSA.ADJ.TRANS.REF.NO>,@VM)
                FOR I = 1 TO Y.SDSA.ADJ.CNT
                    Y.TRANS.REF.NO = R.SDSA.DET.REC<BD.SDSA.ADJ.TRANS.REF.NO,I>
                    IF Y.TRANS.REF.NO EQ ID.NEW THEN
                        R.SDSA.DET.REC<BD.SDSA.ADJ.REVE,I> = 'REVE'
                        Y.TOT.ADJ.AMT = R.SDSA.DET.REC<BD.SDSA.TOT.ADJ.AMT> - Y.DEBIT.AMOUNT
                        Y.TOT.OUT.AMT = R.SDSA.DET.REC<BD.SDSA.OUTSTANDING.AMT> + Y.DEBIT.AMOUNT
                        R.SDSA.DET.REC<BD.SDSA.TOT.ADJ.AMT> = Y.TOT.ADJ.AMT
                        R.SDSA.DET.REC<BD.SDSA.OUTSTANDING.AMT> = Y.TOT.OUT.AMT
                    END
                NEXT I
                CALL F.WRITE(FN.SDSA.DET,Y.REF.NO,R.SDSA.DET.REC)
            END
        END
    END
    RETURN
END
