**************************************************************************
*-----------------------------------------------------------------------------
* <Rating>-23</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE JBL.B.EXCISE.DUTY.AC.LIVE.LOAD
**************************************************************************
* Subroutine Description:
*-----------------------
* This Load Routine is used to open all the required files.
*-------------------------------------------------------------------------
* Parameter Description:
*--------- -----------
* NA
*-------------------------------------------------------------------------
* Common Variable Description
*------  ------- -----------
* Variable name:               Insert file:          Description:
* TODAY                        I_COMMON              Will hold Today's date
*-------------------------------------------------------------------------
*Called Subroutines:
*------ ------------
* NA
*-------------------------------------------------------------------------
* Modification History:
* ------------ --------
* 01/03/2011 -                             New   - Rashmitha M
*                                                 Thesys Technologies
**************************************************************************
    $INCLUDE GLOBUS.BP I_EQUATE
    $INCLUDE GLOBUS.BP I_COMMON
    $INCLUDE GLOBUS.BP I_F.ACCOUNT
    $INCLUDE GLOBUS.BP I_F.ACCOUNT.CLASS
    $INCLUDE JBL.BP I_JBL.B.EXCISE.DUTY.AC.LIVE.COMMON
    $INCLUDE JBL.BP I_F.BD.EXCISE.DUTY.SLAB
    $INCLUDE JBL.BP I_F.EB.BD.EXCISE.DUTY.PARAM

    GOSUB INITIALISE
    GOSUB PROCESS
    RETURN
*--------------------------------------------------------------------------
INITIALISE:
*---------
*
    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
*
    FN.EB.BD.EXCISE.DUTY.PARAM = 'F.EB.BD.EXCISE.DUTY.PARAM'
    F.EB.BD.EXCISE.DUTY.PARAM = ''
    CALL OPF(FN.EB.BD.EXCISE.DUTY.PARAM,F.EB.BD.EXCISE.DUTY.PARAM)
    R.EB.BD.EXCISE.DUTY.PARAM =''
    EB.BD.EXCISE.DUTY.PARAM.ERR =''
*
    FN.EB.BD.EXCISE.DUTY.SLAB = 'F.EB.BD.EXCISE.DUTY.SLAB'
    F.EB.BD.EXCISE.DUTY.SLAB = ''
    CALL OPF(FN.EB.BD.EXCISE.DUTY.SLAB,F.EB.BD.EXCISE.DUTY.SLAB)
    R.EB.BD.EXCISE.DUTY.SLAB =''
    EB.BD.EXCISE.DUTY.SLAB.ERR=''
*
    FN.EB.BD.EXCISE.DUTY = 'F.EB.BD.EXCISE.DUTY'
    F.EB.BD.EXCISE.DUTY = ''
    CALL OPF(FN.EB.BD.EXCISE.DUTY,F.EB.BD.EXCISE.DUTY)
*
    FN.ACCOUNT.CLASS='F.ACCOUNT.CLASS'
    F.ACCOUNT.CLASS=''
    CALL OPF(FN.ACCOUNT.CLASS,F.ACCOUNT.CLASS)
    R.ACCOUNT.CLASS.SAVINGS=''
    ACCOUNT.CLASS.ERR=''
*
    RETURN
*------------------------------------------------------------------------------------------
PROCESS:
*------
!Read EB.BD.EXCISE.DUTY.PARAM with ID as AC
    Y.EB.BD.EXCISE.DUTY.PARAM.ID = 'AC'
    CALL F.READ(FN.EB.BD.EXCISE.DUTY.PARAM,Y.EB.BD.EXCISE.DUTY.PARAM.ID,R.EB.BD.EXCISE.DUTY.PARAM,F.EB.BD.EXCISE.DUTY.PARAM,Y.EB.BD.EXCISE.DUTY.PARAM.ERR)
    IF NOT(R.EB.BD.EXCISE.DUTY.PARAM) THEN
        RETURN
    END
*
! Read BD.EXCISE.DUTY.SLAB with ID as SYSTEM

    CALL F.READ(FN.EB.BD.EXCISE.DUTY.SLAB,'SYSTEM',R.EB.BD.EXCISE.DUTY.SLAB,F.EB.BD.EXCISE.DUTY.SLAB,Y.EB.BD.EXCISE.DUTY.SLAB.ERR)
    IF NOT(R.EB.BD.EXCISE.DUTY.SLAB) THEN
        RETURN
    END
*
! Read ACCOUNT.CLASS with iID as 'SAVINGS'

    CALL F.READ(FN.ACCOUNT.CLASS,'SAVINGS',R.ACCOUNT.CLASS.SAVINGS,F.ACCOUNT.CLASS,ACCOUNT.CLASS.ERR)
    IF NOT(R.ACCOUNT.CLASS.SAVINGS) THEN
        RETURN
    END
*
    RETURN
*-------------------------------------------------------------------------------------------------------
END
