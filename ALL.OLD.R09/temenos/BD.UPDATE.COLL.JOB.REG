*-----------------------------------------------------------------------------
* <Rating>150</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE BD.UPDATE.COLL.JOB.REG
!PROGRAM BD.UPDATE.COLL.JOB.REG
*-----------------------------------------------------------------------------
* Subroutine Description:
*------------------------
* This auth routine is update BD.BTB.JOB.REGISTER & EXP FORM REGISTER
*-----------------------------------------------------------------------------
* Modification History:
* ---------------------
* 20/04/2012 - New - Rayhan
*
*-----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.LD.LOANS.AND.DEPOSITS
    $INSERT I_F.DRAWINGS
    $INSERT I_F.BD.BTB.JOB.REGISTER
    $INSERT I_F.BD.EXPFORM.REGISTER

    IF R.NEW(TF.DR.RECORD.STATUS) = "INAU" THEN
        GOSUB INITIALISE
        GOSUB PROCESS
    END

    RETURN
*-----------------------------------------------------------------------------
INITIALISE:
***********
    FN.LD.LOANS.AND.DEPOSITS = 'F.LD.LOANS.AND.DEPOSITS'
    F.LD.LOANS.AND.DEPOSITS  = ''
    CALL OPF(FN.LD.LOANS.AND.DEPOSITS,F.LD.LOANS.AND.DEPOSITS)
    R.LD.LOANS.AND.DEPOSITS  = ''

    FN.DRAWINGS = 'F.DRAWINGS'
    F.DRAWINGS = ''
    CALL OPF(FN.DRAWINGS,F.DRAWINGS)
    R.DRAWINGS = ''
    Y.DRAWINGS.ERR = ''

    FN.BD.BTB.JOB.REGISTER = 'F.BD.BTB.JOB.REGISTER'
    F.BD.BTB.JOB.REGISTER = ''
    CALL OPF(FN.BD.BTB.JOB.REGISTER,F.BD.BTB.JOB.REGISTER)
    R.BD.BTB.JOB.REGISTER = ''

    FN.EXPFORM = 'F.BD.EXPFORM.REGISTER'
    F.EXPFORM = ''
    CALL OPF(FN.EXPFORM,F.EXPFORM)
    R.EXPFORM.REC = ''
    Y.EXPFORM.ERR = ''

    RETURN
*-----------------------------------------------------------------------------
PROCESS:
********
    GOSUB GET.LOC.REF.POS
    GOSUB UPDATE.JOB.REGISTER
    GOSUB UPDATE.EXP.REGISTER
    RETURN

*-----------------------------------------------------------------------------
UPDATE.JOB.REGISTER:
*--------------
    Y.JOB.NO =  R.NEW(TF.DR.LOCAL.REF)<1,Y.DR.JOBNO.POS>
    Y.DR.ID =ID.NEW
    Y.LC.ID = Y.DR.ID[1,12]
    IF Y.JOB.NO EQ '' THEN RETURN
    CALL F.READ(FN.BD.BTB.JOB.REGISTER,Y.JOB.NO,R.BTB.JOB.REGISTER,F.BD.BTB.JOB.REGISTER,R.BTB.JOB.REG.ERR)
    Y.EX.TF.NO = R.BTB.JOB.REGISTER<BTB.JOB.EX.TF.REF>
    LOCATE Y.LC.ID IN Y.EX.TF.NO<1,1> SETTING Y.COUNT.POS THEN
        Y.COUNT = Y.COUNT.POS
        Y.EX.DR.NO = R.BTB.JOB.REGISTER<BTB.JOB.EX.DR.ID,Y.COUNT>
        LOCATE Y.DR.ID IN Y.EX.DR.NO<1,1> SETTING Y.DR.CNT.POS THEN
            Y.DR.CNT=Y.DR.CNT.POS
            R.BTB.JOB.REGISTER<BTB.JOB.EX.DR.DATE,Y.COUNT,Y.DR.CNT>=R.NEW(TF.DR.VALUE.DATE)
            R.BTB.JOB.REGISTER<BTB.JOB.EX.DR.TYPE,Y.COUNT,Y.DR.CNT>=R.NEW(TF.DR.DRAWING.TYPE)
            R.BTB.JOB.REGISTER<BTB.JOB.EX.DR.AMT,Y.COUNT,Y.DR.CNT>=R.NEW(TF.DR.DOCUMENT.AMOUNT)
            CALL F.WRITE(FN.BD.BTB.JOB.REGISTER,Y.JOB.NO,R.BTB.JOB.REGISTER)
        END ELSE
            Y.DR.CNT = DCOUNT(R.BTB.JOB.REGISTER<BTB.JOB.EX.DR.ID,Y.COUNT>,@SM) + 1
            R.BTB.JOB.REGISTER<BTB.JOB.EX.DR.ID,Y.COUNT,Y.DR.CNT>=ID.NEW
            R.BTB.JOB.REGISTER<BTB.JOB.EX.DR.DATE,Y.COUNT,Y.DR.CNT>=R.NEW(TF.DR.VALUE.DATE)
            R.BTB.JOB.REGISTER<BTB.JOB.EX.DR.TYPE,Y.COUNT,Y.DR.CNT>=R.NEW(TF.DR.DRAWING.TYPE)
            R.BTB.JOB.REGISTER<BTB.JOB.EX.DR.AMT,Y.COUNT,Y.DR.CNT>=R.NEW(TF.DR.DOCUMENT.AMOUNT)
            CALL F.WRITE(FN.BD.BTB.JOB.REGISTER,Y.JOB.NO,R.BTB.JOB.REGISTER)
        END
    END
    RETURN

*-----------------------------------------------------------------------------
UPDATE.EXP.REGISTER:
*--------------
    Y.EXPFORM.NO = R.NEW(TF.DR.LOCAL.REF)<1,Y.DR.EXPNO.POS>
    IF Y.EXPFORM.NO EQ '' THEN RETURN
    CALL F.READ(FN.EXPFORM,Y.EXPFORM.NO,R.EXPFORM.REC,F.EXPFORM,Y.EXPFORM.ERR)
    R.EXPFORM.REC<EXPFORM.EXP.VALUE> = R.NEW(TF.DR.LOCAL.REF)<1,Y.DR.EXPVALUE.POS>
    R.EXPFORM.REC<EXPFORM.CMDTY.VALUE> = R.NEW(TF.DR.LOCAL.REF)<1,Y.DR.COMVAL.POS>
    R.EXPFORM.REC<EXPFORM.CMDTY.UNIT> = R.NEW(TF.DR.LOCAL.REF)<1,Y.DR.COMUNIT.POS>
    R.EXPFORM.REC<EXPFORM.CMDTY.UNIT.PRICE> = R.NEW(TF.DR.LOCAL.REF)<1,Y.DR.UITPRIC.POS>
    R.EXPFORM.REC<EXPFORM.INVOIC.NO> = R.NEW(TF.DR.LOCAL.REF)<1,Y.DR.INVNO.POS>
    R.EXPFORM.REC<EXPFORM.INVOIC.VALUE> = R.NEW(TF.DR.LOCAL.REF)<1,Y.DR.INVALUE.POS>
    R.EXPFORM.REC<EXPFORM.DRAWING.NO> = ID.NEW
    R.EXPFORM.REC<EXPFORM.DOC.COLL.NO> = R.NEW(TF.DR.LOCAL.REF)<1,Y.DR.COLNO.POS>
    R.EXPFORM.REC<EXPFORM.DOC.COLL.DATE> = R.NEW(TF.DR.VALUE.DATE)
    R.EXPFORM.REC<EXPFORM.VESSEL.NAME> = R.NEW(TF.DR.LOCAL.REF)<1,Y.DR.VESNAME.POS>
    R.EXPFORM.REC<EXPFORM.SHIPMENT.DATE> = R.NEW(TF.DR.LOCAL.REF)<1,Y.DR.EXPSHIPDT.POS>
    R.EXPFORM.REC<EXPFORM.EXP.DUP.SUB.DT.BB> = R.NEW(TF.DR.LOCAL.REF)<1,Y.DR.EXP2DATE.POS>
    CALL F.WRITE(FN.EXPFORM,Y.EXPFORM.NO,R.EXPFORM.REC)
    RETURN
*-----------------------------------------------------------------------------
GET.LOC.REF.POS:
*--------------
    CALL GET.LOC.REF("DRAWINGS","JOB.NUMBER",Y.DR.JOBNO.POS)
    CALL GET.LOC.REF("DRAWINGS","EXLC.COLL.NO",Y.DR.COLNO.POS)
    CALL GET.LOC.REF("DRAWINGS","EXP.FORM.NO",Y.DR.EXPNO.POS)
    CALL GET.LOC.REF("DRAWINGS","EXP.VALUE",Y.DR.EXPVALUE.POS)
    CALL GET.LOC.REF("DRAWINGS","COMMODTY.CODE",Y.DR.COMCODE.POS)
    CALL GET.LOC.REF("DRAWINGS","COMMDTY.VOLUME",Y.DR.COMVAL.POS)
    CALL GET.LOC.REF("DRAWINGS","COMMDTY.UNIT",Y.DR.COMUNIT.POS)
    CALL GET.LOC.REF("DRAWINGS","UNIT.PRICE",Y.DR.UITPRIC.POS)
    CALL GET.LOC.REF("DRAWINGS","DEST.COUNTRY",Y.DR.DESCO.POS)
    CALL GET.LOC.REF("DRAWINGS","DEST.PORT",Y.DR.DESPO.POS)
    CALL GET.LOC.REF("DRAWINGS","PROF.INVOICE.NO",Y.DR.INVNO.POS)
    CALL GET.LOC.REF("DRAWINGS","PROF.INV.DATE",Y.DR.INVDT.POS)
    CALL GET.LOC.REF("DRAWINGS","PROF.INV.VALUE",Y.DR.INVALUE.POS)
    CALL GET.LOC.REF("DRAWINGS","CARRYING.VESSEL",Y.DR.VESNAME.POS)
    CALL GET.LOC.REF("DRAWINGS","EXPORT.DATE",Y.DR.EXPSHIPDT.POS)
    CALL GET.LOC.REF("DRAWINGS","EXP2SUB.DATE.BB",Y.DR.EXP2DATE.POS)
    RETURN
END
