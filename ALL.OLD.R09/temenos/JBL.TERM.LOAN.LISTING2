!PROGRAM JBL.TERM.LOAN.LISTING2
    SUBROUTINE JBL.TERM.LOAN.LISTING2(Y.DATA)
    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_ENQUIRY.COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT GLOBUS.BP I_F.LIMIT
    $INSERT GLOBUS.BP I_F.COLLATERAL
    $INSERT GLOBUS.BP I_F.PD.PAYMENT.DUE
    $INSERT GLOBUS.BP I_F.ACCOUNT.DEBIT.INT
    $INSERT GLOBUS.BP I_F.COLLATERAL.CODE
    $INSERT GLOBUS.BP I_F.LN.ASSET.CLASS
    $INSERT GLOBUS.BP I_F.STMT.ENTRY
    $INSERT GLOBUS.BP I_F.GROUP.DEBIT.INT
    $INSERT GLOBUS.BP I_F.CATEGORY

    GOSUB INIT
    GOSUB OPENFILES
    GOSUB PROCESS
    RETURN
*-----
INIT:
*-----
    FN.ACCOUNT = 'F.ACCOUNT';                  F.ACCOUNT = ' '
    FN.LIMIT = 'F.LIMIT';                      F.LIMIT = ' '
    FN.ACC.DR.INT = 'FBNK.ACCOUNT.DEBIT.INT';  F.ACC.DR.INT = ' '
    FN.PD = 'F.PD.PAYMENT.DUE';                F.PD = ' '
    FN.COLTR = 'F.COLLATERAL';                 F.COLTR = ' '
    FN.COLTR.CODE ='F.COLLATERAL.CODE';        F.COLTR.CODE=' '
    FN.LAC = 'F.LN.ASSET.CLASS';               F.LAC = ''
    FN.STMT.ENTRY = 'FBNK.STMT.ENTRY';         F.STMT.ENTRY = ' '
    FN.AGC = 'F.ACCT.GEN.CONDITION';           F.AGC = ''

    FN.GDI = 'FBNK.GROUP.DEBIT.INT';           F.GDI = ' '
    FN.CATEGORY = 'F.CATEGORY';                F.CATEGORY = ' '
    LOCATE 'CATEGORY' IN ENQ.SELECTION<2,1> SETTING CATEGORY.POS THEN
        Y.CATEGORY =  ENQ.SELECTION<4,CATEGORY.POS>
    END

    Y.TOT.PE = 0
    Y.TOT.PS = 0
    Y.SL.NO = 1
!Y.CATEGORY = '1613'
    Y.USER = USERS
    Y.TODAY = TODAY
    Y.ACCT.REC = ''
    Y.BALANCE.TYPE = 'VALUE'
    Y.SYSTEM.DATE = ''
    Y.BALANCE.PRE.MNTH = ''
    Y.CREDIT.MVMT = ''
    Y.DEBIT.MVMT = ''
    Y.ERR.MSG = ''
    RETURN

*----------
OPENFILES:
*-----------
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
    CALL OPF(FN.LIMIT,F.LIMIT)
    CALL OPF(FN.PD,F.PD)
    CALL OPF(FN.ACC.DR.INT,F.ACC.DR.INT)
    CALL OPF(FN.COLTR,F.COLTR)
    CALL OPF(FN.COLTR.CODE,F.COLTR.CODE)
    CALL OPF(FN.LAC,F.LAC)
    CALL OPF(FN.STMT.ENTRY,F.STMT.ENTRY)
    CALL OPF(FN.AGC,F.AGC)
    CALL OPF(FN.GDI,F.GDI)
    CALL OPF(FN.CATEGORY,F.CATEGORY)

    CALL GET.LOC.REF('ACCOUNT','INSTALL.AMOUNT',Y.INSTALL.AMOUNT.POS)
    CALL GET.LOC.REF('ACCOUNT','PAST.DUE.REF',Y.PAST.DUE.REF.POS)
    CALL GET.LOC.REF('ACCOUNT','INT.RATE',Y.INT.POS)
    CALL GET.LOC.REF('ACCOUNT', 'LOAN.START.DATE', Y.AC.LOAN.START.DATE.POS)
    CALL GET.LOC.REF('ACCOUNT', 'LOAN.MAT.DATE', Y.AC.LOAN.MAT.DATE.POS)
    CALL GET.LOC.REF('ACCOUNT', 'INST.FREQUENCY', Y.INST.FREQUENCY.POS)
    CALL GET.LOC.REF('ACCOUNT', 'FIRST.INST.DATE', Y.FIRST.INST.DATE.POS)
    CALL GET.LOC.REF('ACCOUNT', 'LIEN.AGAINST', Y.LIEN.AGAINST.POS)
    CALL GET.LOC.REF('ACCOUNT','INSTL.PAID.AMT', Y.INSTL.PAID.AMT.POS)
    CALL GET.LOC.REF('ACCOUNT','INSTL.PAID.NO',Y.INSTL.PAID.NO.POS)
    CALL GET.LOC.REF('ACCOUNT','RPT.OVERDUE.AMT', Y.RPT.OVERDUE.AMT.POS)
    CALL GET.LOC.REF('ACCOUNT','INST.OVERDUE.NO',Y.INST.OVERDUE.NO.POS)


    CALL GET.LOC.REF('PD.PAYMENT.DUE','PR.ASSET.CLASS',Y.PR.ASSET.CLASS.POS)
    CALL GET.LOC.REF('LIMIT','LIMIT.PURPOSE',Y.LI.LIMIT.PURPOSE.POS)
    CALL GET.LOC.REF('LIMIT','SANCT.AUTHORITY',Y.LI.LIMIT.SANCT.AUTHO.POS)


    CALL GET.LOC.REF('COLLATERAL','INS.COVER.AMT',Y.INS.COVER.AMT.POS)
    CALL GET.LOC.REF('COLLATERAL','INS.EXPIRY.DATE',Y.INS.EXPIRY.DATE.POS)

    RETURN

*---------
PROCESS:
*---------
    IF Y.CATEGORY LE 21000 THEN
        SEL.CMD.ACC = "SELECT ":FN.ACCOUNT:" WITH CATEGORY EQ ":Y.CATEGORY:" AND CO.CODE EQ ":ID.COMPANY:" BY @ID"
        CALL EB.READLIST(SEL.CMD.ACC,SEL.LIST.ACC,'',NO.OF.REC.ACC,RET.CODE.ACC)
        FOR J = 1 TO NO.OF.REC.ACC
            Y.ACCT.ID = FIELD(SEL.LIST.ACC,@FM,J)
            CALL F.READ(FN.ACCOUNT, Y.ACCT.ID , R.ACCOUNT, F.ACCOUNT , Y.ERR)

            IF R.ACCOUNT THEN

!             Y.ACCT.ID = 0100137614736
                Y.LEGACY.ID = R.ACCOUNT<AC.ALT.ACCT.ID>
                Y.NAME = R.ACCOUNT<AC.SHORT.TITLE>
                Y.CUS.NO = R.ACCOUNT<AC.CUSTOMER>
                Y.INSTL.AMT = R.ACCOUNT<AC.LOCAL.REF,Y.INSTALL.AMOUNT.POS>
                Y.PAST.DUE.REF = R.ACCOUNT<AC.LOCAL.REF,Y.PAST.DUE.REF.POS>
                Y.BALANCE = R.ACCOUNT<AC.WORKING.BALANCE>
                Y.LIMIT.REF = R.ACCOUNT<AC.LIMIT.REF>
                Y.LIMIT.ID = Y.CUS.NO:'.000':Y.LIMIT.REF
                Y.AC.LOAN.START.DATE = R.ACCOUNT<AC.LOCAL.REF, Y.AC.LOAN.START.DATE.POS>
                Y.AC.LOAN.MAT.DATE = R.ACCOUNT<AC.LOCAL.REF, Y.AC.LOAN.MAT.DATE.POS>
                Y.FIRST.INST.DATE = R.ACCOUNT <AC.LOCAL.REF, Y.FIRST.INST.DATE.POS>
                Y.INST.FREQUENCY =    R.ACCOUNT <AC.LOCAL.REF, Y.INST.FREQUENCY.POS>
                Y.OPENING.DATE = R.ACCOUNT <AC.OPENING.DATE>
                Y.LIEN.AGAINST = R.ACCOUNT<AC.LOCAL.REF,Y.LIEN.AGAINST.POS>

                Y.INSTL.PAID.AMT = R.ACCOUNT<AC.LOCAL.REF, Y.INSTL.PAID.AMT.POS>
                Y.INSTL.PAID.NO   = R.ACCOUNT<AC.LOCAL.REF, Y.INSTL.PAID.NO.POS>
                Y.RPT.OVERDUE.AMT = R.ACCOUNT<AC.LOCAL.REF, Y.RPT.OVERDUE.AMT.POS>
                Y.INST.OVERDUE.NO  = R.ACCOUNT<AC.LOCAL.REF,Y.INST.OVERDUE.NO.POS>
                Y.DATE.OF.DOC.OBT = ''
                Y.LIEN.COLTR.CATEG.LIST='1679':@FM:'1684':@FM:'1685':@FM:'1686':@FM:'1687':@FM:'1688':@FM:'1689':@FM:'1690':@FM:'1691':@FM:'1692':@FM:'1693'

                GOSUB GET.LIMIT.DATA
                GOSUB GET.DR.INT
                GOSUB GET.GDI.INT.RATE

*-------------------START--------------------
*Purpose: INTEREST RATE CHECK
*Added by Mohammad Solaiman Hossain
                IF Y.DR.INT EQ ''   THEN
                    Y.DR.INT  = Y.GDI.INT.RATE
                END
*-----------------END------------------------

                IF Y.DR.INT EQ '' THEN
                    Y.DR.INT = R.ACCOUNT<AC.LOCAL.REF,Y.INT.POS>
                END
                GOSUB GET.COLLATERAL.CODE

                Y.TOT.WORK.BAL = Y.BALANCE

*----------------------------START---------------
*Purpose: CHECK LOAN ADVANCE DATE AND EXPIRY DATE
*Added by Mohammad Solaiman Hossain

                IF Y.ADV.DATE EQ '' THEN
                    Y.ADV.DATE = Y.AC.LOAN.START.DATE

                END

                IF Y.EXP.DATE EQ '' THEN
                    Y.EXP.DATE = Y.AC.LOAN.MAT.DATE
                END
*---------------------------END------------------------------------------------

*--------------------Start----------------
*Added by Md. Obaydul Faruque
*-----------------------------
                Y.NO.DAYS = Y.TODAY[7,8]
                Y.TOT.DAYS = -Y.NO.DAYS + 1

!CALL CDT('C',Y.TODAY,Y.TOT.DAYS)
!CALL EB.GET.ACCT.BALANCE(Y.ACCT.ID,Y.ACCT.REC,Y.BALANCE.TYPE,Y.TODAY,Y.SYSTEM.DATE,Y.BALANCE.PRE.MNTH,Y.CREDIT.MVMT,Y.DEBIT.MVMT,Y.ERR.MSG)
!  Y.BALANCE.PRE.MNTH = ABS(Y.BALANCE.PRE.MNTH)

                IF Y.LIMIT.AMT EQ '' OR Y.LIMIT.AMT EQ '0' OR Y.EXP.DATE EQ '' THEN
                    GOSUB GET.LMT.AMT.MT.DT
                END

                GOSUB GET.NO.OF.OD.AND.AMNT.STACK.UP
                GOSUB GET.CATEG.DIS
                GOSUB  GET.PREV.MONTH.BALANCE
*--------------------End------------------
*---------------------START---------------
                FINDSTR Y.CATEGORY IN  Y.LIEN.COLTR.CATEG.LIST SETTING Y.CAT.POS THEN
                    CALL F.READ(FN.ACCOUNT, Y.LIEN.AGAINST, R.LIEN.ACCOUNT, F.ACCOUNT , Y.ERR)
                    Y.SEC.VAL =   R.LIEN.ACCOUNT<AC.WORKING.BALANCE>
                    Y.SEC.DESCRIPTION  = Y.LIEN.AGAINST
                END

*---------------------END-----------------
*---------------START--------------------
                Y.BALANCE.PRE.MNTH = Y.LAST.MONTH.OUTS
*---------------END----------------------

                Y.DATA<-1> = Y.SL.NO:'*':Y.ADV.DATE:'*':Y.ACCT.ID:'*':Y.NAME:'*':Y.LIMIT.AMT:'*':Y.EXP.DATE:'*':Y.NO.OF.INSTALL.OD:'*':Y.DR.INT:'*':Y.INSTL.AMT:'*':Y.LIMIT.PURPOSE:'*': Y.BALANCE.PRE.MNTH:'*': Y.TOT.WORK.BAL:'*':DROUND(Y.NO.INSTALLMENT.OVERDUE,2):'*':Y.PD.AMT:'*':Y.AMNT.STUCK.UP:'*':Y.COLL.CODE.DESCRIPTION:'*':Y.LIMIT.SANCT.AUTHO:'*':Y.PR.CLASS.DESC :'*': Y.TOT.CR.AMNT :'*': Y.LAST.CR.DATE:'*':Y.DESCRIPTION:'*':Y.SEC.DESCRIPTION:'*':Y.SEC.VAL:'*':Y.INS.COVER.AMT:'*': Y.INS.EXPIRY.DATE:'*':Y.DATE.OF.DOC.OBT
!                              1           2              3             4          5                    6                 7                8              9              10                     11                   12                          13                           14            15                 16                            17                      18                     19                  20                21                   22              23                 24                 25                   26
                Y.SL.NO = Y.SL.NO + 1
                Y.DR.INT = ''
                Y.ADV.DATE = ''
                Y.EXP.DATE = ''
                Y.SEC.DESCRIPTION = ''
                Y.SEC.VAL     = 0
            END
        NEXT J
    END
    RETURN

*---------------
GET.LIMIT.DATA:
*---------------
    CALL F.READ(FN.LIMIT, Y.LIMIT.ID, R.LIMIT, F.LIMIT , Y.ERR.LIMIT)
    IF R.LIMIT THEN
        Y.LIMIT.AMT = R.LIMIT<LI.INTERNAL.AMOUNT>
        Y.ADV.DATE = R.LIMIT<LI.APPROVAL.DATE>
        Y.EXP.DATE = R.LIMIT<LI.EXPIRY.DATE>
        Y.LIMIT.PURPOSE = R.LIMIT<LI.LOCAL.REF,Y.LI.LIMIT.PURPOSE.POS>
        Y.LIMIT.SANCT.AUTHO = R.LIMIT<LI.LOCAL.REF,Y.LI.LIMIT.SANCT.AUTHO.POS>
        Y.LIM.COLTR.CODE = R.LIMIT<LI.COLLATERAL.CODE>
    END
    ELSE
        Y.LIMIT.AMT = 0
        Y.SAN.DATE = ''
        Y.EXP.DATE = ''
        Y.LIMIT.PURPOSE = ''
        Y.LIMIT.SANCT.AUTHO = ''
        Y.LIM.COLTR.CODE = ''

    END
    RETURN

*-------------
GET.COLTR.DATA:
*-------------
    SEL.CMD.COLTR = 'SSELECT ':FN.COLTR:' WITH @ID LIKE ':Y.CUS.NO:'...'
    CALL EB.READLIST(SEL.CMD.COLTR,SEL.COLTR.LIST,'',NO.OF.COLTR.REC,RET.CODE.COLTR)
    Y.TOT.COLTR = DCOUNT(SEL.COLTR.LIST,@FM)
    FOR I = 1 TO Y.TOT.COLTR
        Y.COLTR.ID = FIELD(SEL.COLTR.LIST,@FM,1)
        CALL F.READ(FN.COLTR, Y.COLTR.ID, R.COLTR, F.COLTR , Y.ERR.COLTR)
        IF R.COLTR THEN
            Y.COLTR.CODE = R.COLTR<COLL.COLLATERAL.CODE>
            IF Y.COLTR.CODE EQ Y.LIM.COLTR.CODE THEN

                Y.SEC.DESCRIPTION = R.COLTR<COLL.DESCRIPTION>
                Y.SEC.VAL     = R.COLTR<COLL.NOMINAL.VALUE>
                Y.INS.COVER.AMT = R.COLTR<COLL.LOCAL.REF,Y.INS.COVER.AMT.POS>
                Y.INS.EXPIRY.DATE = R.COLTR<COLL.LOCAL.REF,Y.INS.EXPIRY.DATE.POS>
                BREAK
            END
            ELSE
                Y.INS.COVER.AMT = 0
                Y.INS.EXPIRY.DATE =''
                Y.SEC.DESCRIPTION = ''
                Y.SEC.VAL     = 0
            END
        END
    NEXT I
    RETURN

*-------------
GET.DR.INT:
*-------------
    SEL.CMD.DR = "SELECT ":FN.ACC.DR.INT :" WITH @ID LIKE ":Y.ACCT.ID:"... -DSND @ID"
    CALL EB.READLIST(SEL.CMD.DR,SEL.LIST.DR,'',NO.OF.REC.DR,RET.CODE.DR)
    IF SEL.LIST.DR THEN
        LOOP
            REMOVE Y.DR.INT.ID FROM SEL.LIST.DR SETTING POS.DR
        WHILE Y.DR.INT.ID:POS.DR
            CALL F.READ(FN.ACC.DR.INT, Y.DR.INT.ID, R.DR.INT, F.ACC.DR.INT , Y.ERR.DR.INT)
            IF R.DR.INT THEN
                Y.DR.INT = R.DR.INT<IC.ADI.DR.INT.RATE>
            END
            BREAK
        REPEAT
    END
    RETURN

*-------------------
GET.COLLATERAL.CODE:
*-------------------
    CALL F.READ(FN.COLTR.CODE, Y.LIM.COLTR.CODE,R.COLTR.CODE,F.COLTR.CODE,Y.ERR.COLTR.CODE)
    IF R.COLTR.CODE THEN
        Y.COLL.CODE.DESCRIPTION = R.COLTR.CODE<COLL.CODE.DESCRIPTION>
    END
    RETURN

*--------------------Start--------------------------------
*------------------------------------------------------
*Added by Md. Obaydul Faruque                          |
*Date : 29-06-2015                                     |
*Purpose : If Limit Amount & Expiry Date is null then  |
*          Loan Amount is Limit Amount & Maturity Date |
*          is Expiry Date                              |
*------------------------------------------------------

*-----------------
GET.LMT.AMT.MT.DT:
*-----------------
    IF Y.LIMIT.AMT EQ '' OR Y.LIMIT.AMT EQ '0' THEN
        CALL GET.LOC.REF('ACCOUNT','LOAN.AMOUNT',Y.LOAN.AMOUNT.POS)
        Y.LOAN.AMOUNT = R.ACCOUNT<AC.LOCAL.REF,Y.LOAN.AMOUNT.POS>
        Y.LIMIT.AMT = Y.LOAN.AMOUNT
    END
    IF Y.EXP.DATE EQ '' THEN
        CALL GET.LOC.REF('ACCOUNT','LOAN.MAT.DATE',Y.LOAN.MAT.DATE.POS)
        Y.MAT.DT = R.ACCOUNT<AC.LOCAL.REF,Y.LOAN.MAT.DATE.POS>
        Y.EXP.DATE = Y.MAT.DT
    END
    RETURN

*------------------------End-----------------------------


*-----------------------------------------SATRT-----------
*------------------------------------------------------
*Added by MOHAMMAD SOLAIMAN HOSSAIN                          |
*Date : 15-03-2018                                     |
* PURPOSE: SOLVING LOAN LISTING ISSSUES
*   ------------------------------------------------------
GET.GDI.INT.RATE:

    SEL.CMD.AGC = 'SELECT ':FN.AGC:' WITH VALUE EQ ': Y.CATEGORY

    CALL EB.READLIST(SEL.CMD.AGC,SEL.LIST.AGC,'',NO.OF.REC.AGC,ERR.AGC)
    LOOP
        REMOVE AGC.ID FROM SEL.LIST.AGC SETTING POS1
    WHILE AGC.ID:POS1

        SEL.CMD.GDI = "SELECT ":FN.GDI :" WITH @ID LIKE ":AGC.ID:'BDT... BY-DSND @ID'
        CALL EB.READLIST(SEL.CMD.GDI,SEL.LIST.GDI,'',NO.OF.REC.GDI,ERR.AGC)

        LOOP
            REMOVE GDI.ID FROM SEL.LIST.GDI SETTING POS2
        WHILE GDI.ID:POS2
            CALL F.READ(FN.GDI,GDI.ID,R.GDI,F.GDI,ERR.GDI)
            Y.GDI.INT.RT = R.GDI<IC.GDI.DR.INT.RATE> + R.GDI<IC.GDI.DR2.INT.RATE>
            BREAK
        REPEAT
    REPEAT
    Y.GDI.INT.RATE = Y.GDI.INT.RT
    RETURN

GET.NO.OF.OD.AND.AMNT.STACK.UP:


    BEGIN CASE
    CASE Y.INST.FREQUENCY = 'M'
        Y.INST.FREQUENCY.INT = 1

    CASE Y.INST.FREQUENCY = 'Q'
        Y.INST.FREQUENCY.INT = 3

    CASE Y.INST.FREQUENCY = 'H'
        Y.INST.FREQUENCY.INT = 6

    CASE Y.INST.FREQUENCY = 'Y'
        Y.INST.FREQUENCY.INT = 12
    END CASE

    IF Y.INST.FREQUENCY.INT EQ '' THEN
        Y.INST.FREQUENCY.INT  = 1
    END

    Y.FROM.DATE = Y.FIRST.INST.DATE

    IF Y.FROM.DATE EQ '' THEN
        Y.FROM.DATE = Y.AC.LOAN.START.DATE
    END


    Y.TODATE  = TODAY
    Y.INST.FREQUENCY.INT = 0
    Y.TOT.CR.AMNT = 0
    Y.LAST.CR.DATE = ''
    Y.NO.OF.INSTALL.OD = 0

    CALL  EB.NO.OF.MONTHS(Y.FROM.DATE,Y.TODATE,Y.MONTHS)
    CALL EB.ACCT.ENTRY.LIST(Y.ACCT.ID,Y.FROM.DATE,Y.TODATE,Y.AC.STMT.LIST,Y.AC.OPEN.BAL,Y.AC.ER)

    Y.DCOUNT  =   DCOUNT(Y.AC.STMT.LIST, @FM)

    IF Y.INST.FREQUENCY.INT EQ '' OR Y.INST.FREQUENCY.INT EQ 0  THEN
        Y.INST.FREQUENCY.INT   = 1
    END

    Y.NO.INSTALL = Y.MONTHS / Y.INST.FREQUENCY.INT
    Y.NO.INSTALL.AMT = Y.NO.INSTALL * Y.INSTL.AMT

    FOR I = 1 TO Y.DCOUNT

        Y.STMT.ID = FIELD(Y.AC.STMT.LIST,@FM,I)

        CALL F.READ(FN.STMT.ENTRY, Y.STMT.ID , R.STMT, F.STMT.ENTRY , Y.ERR)

        Y.AMOUNT.LCY = R.STMT<AC.STE.AMOUNT.LCY>
        Y.BOOKING.DATE = R.STMT <AC.STE.BOOKING.DATE>

        IF Y.AMOUNT.LCY GT 0 THEN
            Y.TOT.CR.AMNT   = Y.TOT.CR.AMNT + Y.AMOUNT.LCY
            Y.LAST.CR.DATE = Y.BOOKING.DATE
        END

    NEXT I

    Y.TOT.CR.AMNT = Y.TOT.CR.AMNT + Y.INSTL.PAID.AMT

    IF Y.NO.INSTALL.AMT GE Y.TOT.CR.AMNT THEN
        Y.AMNT.STUCK.UP = Y.NO.INSTALL.AMT - Y.TOT.CR.AMNT
    END

    IF Y.AMNT.STUCK.UP GE  ABS(Y.BALANCE) THEN
        Y.AMNT.STUCK.UP = ABS(Y.BALANCE)
    END

    IF Y.INSTL.AMT NE 0 THEN
        Y.NO.OF.INSTALL.OD    =  ABS(Y.AMNT.STUCK.UP) /  ABS(Y.INSTL.AMT)
    END

    Y.NO.OF.INSTALL.OD = ABS(Y.NO.OF.INSTALL.OD) + ABS(Y.INST.OVERDUE.NO) - ABS(Y.INSTL.PAID.NO)
    RETURN

GET.CATEG.DIS:
    CALL F.READ(FN.CATEGORY, Y.CATEGORY , R.CATEGORY, F.CATEGORY , Y.ERR)
    Y.DESCRIPTION = R.CATEGORY<EB.CAT.DESCRIPTION>
    RETURN

*----------------------
GET.PREV.MONTH.BALANCE:
*----------------------

    Y.LAST.MONTH.OUTS = 0


    Y.PRESENT.MONTH = TODAY[5,2]

    BEGIN CASE
    CASE Y.PRESENT.MONTH EQ '01'
        Y.LAST.DATE.PREV.MONTH = TODAY[1,4]-1:'12':'31'

    CASE Y.PRESENT.MONTH EQ '02'
        Y.LAST.DATE.PREV.MONTH = TODAY[1,4]:'01':'31'

    CASE Y.PRESENT.MONTH EQ '03'
        Y.LAST.DATE.PREV.MONTH = TODAY[1,4]:'02':'29'

    CASE Y.PRESENT.MONTH EQ '04'

        Y.LAST.DATE.PREV.MONTH = TODAY[1,4]:'03':'31'

    CASE Y.PRESENT.MONTH EQ '05'
        Y.LAST.DATE.PREV.MONTH = TODAY[1,4]:'04':'30'

    CASE Y.PRESENT.MONTH EQ '06'
        Y.LAST.DATE.PREV.MONTH = TODAY[1,4]:'05':'31'

    CASE Y.PRESENT.MONTH EQ '07'
        Y.LAST.DATE.PREV.MONTH = TODAY[1,4]:'06':'30'

    CASE Y.PRESENT.MONTH EQ '08'
        Y.LAST.DATE.PREV.MONTH = TODAY[1,4]:'07':'31'

    CASE Y.PRESENT.MONTH EQ '09'
        Y.LAST.DATE.PREV.MONTH = TODAY[1,4]:'08':'31'

    CASE Y.PRESENT.MONTH EQ '10'
        Y.LAST.DATE.PREV.MONTH = TODAY[1,4]:'09':'30'

    CASE Y.PRESENT.MONTH EQ '11'
        Y.LAST.DATE.PREV.MONTH = TODAY[1,4]:'10':'31'

    CASE Y.PRESENT.MONTH EQ '12'
        Y.LAST.DATE.PREV.MONTH = TODAY[1,4]:'11':'30'
    END CASE

    CALL EB.ACCT.ENTRY.LIST(Y.ACCT.ID, Y.OPENING.DATE,Y.LAST.DATE.PREV.MONTH,Y.AC.STMT.LIST,Y.AC.OPEN.BAL,Y.AC.ER)

    Y.DCOUNT  =   DCOUNT(Y.AC.STMT.LIST, @FM)
    FOR I = 1 TO Y.DCOUNT
        Y.STMT.ID = FIELD(Y.AC.STMT.LIST,@FM,I)
        CALL F.READ(FN.STMT.ENTRY, Y.STMT.ID , R.STMT, F.STMT.ENTRY , Y.ERR)
        Y.AMOUNT.LCY = R.STMT<AC.STE.AMOUNT.LCY>

        Y.LAST.MONTH.OUTS   = Y.LAST.MONTH.OUTS  + Y.AMOUNT.LCY


    NEXT I

    RETURN
END
*-----------------END-----------------------------
