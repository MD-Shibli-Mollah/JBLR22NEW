*-----------------------------------------------------------------------------
* <Rating>955</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE PR.VCR.IMPLC.RTN.AUTH

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.LETTER.OF.CREDIT
    $INSERT I_F.COMPANY
    $INSERT I_F.PR.T.BR.SEQ.NO
    $INSERT I_F.LC.TYPES
    $INSERT I_F.INTERCO.PARAMETER
    $INSERT I_F.PR.H.ADCODES

    IF MESSAGE EQ 'VAL' THEN RETURN
    GOSUB INIT
    GOSUB OPEN
    GOSUB PROCESS
    RETURN

INIT:
    FN.LETTER.OF.CREDIT="F.LETTER.OF.CREDIT"
    F.LETTER.OF.CREDIT=""
    FN.PR.H.ADCODES="F.PR.H.ADCODES"
    F.PR.H.ADCODES=""
    FN.PR.T.BR.SEQ.NO="F.PR.T.BR.SEQ.NO"
    F.PR.T.BR.SEQ.NO=""
    FN.LC.TYPES="F.LC.TYPES"
    F.LC.TYPES=""

    Y.LC.TYPES=''
    Y.LC.TYPE1=''
    Y.DATE2=''

    RETURN

OPEN:
    CALL OPF(FN.PR.H.ADCODES,F.PR.H.ADCODES)
    CALL OPF(FN.LETTER.OF.CREDIT,F.LETTER.OF.CREDIT)
    CALL OPF(FN.PR.T.BR.SEQ.NO,F.PR.T.BR.SEQ.NO)
    CALL OPF(FN.LC.TYPES,F.LC.TYPES)
    RETURN

PROCESS:
!DEBUG
    Y.ID=ID.NEW
    IF R.OLD(TF.LC.OLD.LC.NUMBER) EQ '' AND R.NEW.LAST(TF.LC.OLD.LC.NUMBER) EQ '' AND R.NEW(TF.LC.OLD.LC.NUMBER) EQ '' AND V$FUNCTION EQ 'A' THEN
        CALL F.READ(FN.LETTER.OF.CREDIT,Y.ID,R.LETTER.OF.CREDIT,F.LETTER.OF.CREDIT,Y.ERR)
        Y.LC.TYPES=R.NEW(TF.LC.LC.TYPE)
        Y.LC.TYPE1=Y.LC.TYPES[1,2]
        Y.DATE2=TODAY[3,2]
        CALL F.READ(FN.LC.TYPES,Y.LC.TYPES,R.LC.TYPES,F.LC.TYPES,Y.ERR)
        Y.EX.IM=R.LC.TYPES<LC.TYP.IMPORT.EXPORT>
        IF Y.EX.IM EQ 'I' THEN
            Y.MNEMONIC=R.COMPANY(EB.COM.MNEMONIC)
            Y.FIN.MNEMONIC=R.INTERCO.PARAMETER<ST.ICP.FIN.MNEMONIC>
            Y.BRANCH.CODE1=R.INTERCO.PARAMETER<ST.ICP.BRANCH.CODE>
            Y.BRANCH.CODE=R.COMPANY(EB.COM.SUB.DIVISION.CODE)
            CALL F.READ(FN.PR.H.ADCODES,Y.BRANCH.CODE,R.PR.H.ADCODES,F.PR.H.ADCODES,Y.ERR)
            Y.ADCODE=R.PR.H.ADCODES<AD.ADCODE>

            IF Y.BRANCH.CODE EQ '' THEN
                ETEXT = "BRANCH CODE NOT PRESENT"
            END ELSE
                Y.ADVICE="ADV"
                !Y.DATE=Y.MNEMONIC:APPLICATION:PGM.VERSION:".":Y.LC.TYPES1:".":TODAY[1,4]
                Y.DATE=Y.MNEMONIC:APPLICATION:".":Y.LC.TYPES1:".":TODAY[1,4]
!            CALL F.READ(FN.PR.T.BR.SEQ.NO,Y.ADCODE,R.PR.T.BR.SEQ.NO,F.PR.T.BR.SEQ.NO,Y.ERR)
!Changes Starts here
                OPEN 'F.LOCKING' TO F.LOCKING ELSE F.LOCKING=''
READ.ID:
                READ.ERR  =  ''
!CALL F.READ(FN.PR.T.BR.SEQ.NO,Y.ADCODE,R.PR.T.BR.SEQ.NO,F.PR.T.BR.SEQ.NO,Y.ERR)
                READU R.PR.T.BR.SEQ.NO FROM F.LOCKING,Y.DATE LOCKED
                    SLEEP 10
                    GOTO READ.ID
                END THEN NULL
                R.PR.T.BR.SEQ.NO<1>+=1
                IF R.PR.T.BR.SEQ.NO<1> = 9999 THEN R.PR.T.BR.SEQ.NO<1>=1
                Y.SERIAL.NO1 = R.PR.T.BR.SEQ.NO<1>+0
                Y.SERIAL.NO1=FMT(Y.SERIAL.NO1,'R%4')
!CALL  F.RELEASE("F.LOCKING",  Y.DATE,  F.LOCKING)
!CALL  F.WRITE("F.LOCKING",  Y.DATE,  R.PR.T.BRCODE.SEQ.NO)
                WRITE R.PR.T.BR.SEQ.NO TO F.LOCKING,Y.DATE ON ERROR NULL
                CALL  F.RELEASE("F.LOCKING",Y.DATE,F.LOCKING)
!Changes Ends here
                BEGIN CASE
                CASE LEN(Y.SERIAL.NO1) EQ 1
                    Y.SERIAL.NO="000":Y.SERIAL.NO1
                CASE LEN(Y.SERIAL.NO1) EQ 2
                    Y.SERIAL.NO="00":Y.SERIAL.NO1
                CASE LEN(Y.SERIAL.NO1) EQ 3
                    Y.SERIAL.NO="0":Y.SERIAL.NO1
                CASE LEN(Y.SERIAL.NO1) EQ 4
                    Y.SERIAL.NO=Y.SERIAL.NO1
                END CASE

                CALL CONCAT.FILE.UPDATE(FN.PR.T.BR.SEQ.NO,Y.DATE,Y.SERIAL.NO,"I","AL")
                CALL F.RELEASE(FN.PR.T.BR.SEQ.NO,Y.DATE,F.PR.T.BR.SEQ.NO)
            END
            Y.IMPLC.NO=''
            Y.IMPLC.NO=Y.ADCODE:Y.DATE2:Y.LC.TYPE1:Y.SERIAL.NO
            IF R.NEW(TF.LC.OLD.LC.NUMBER) EQ '' THEN
                R.NEW(TF.LC.OLD.LC.NUMBER) = Y.IMPLC.NO
            END

        END
    END
    RETURN
END
