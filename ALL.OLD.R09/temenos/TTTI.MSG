    SUBROUTINE TTTI.MSG
    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_F.TELLER
    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT BP I_F.TT.TELLER.ID
    $INSERT GLOBUS.BP I_F.TELLER.TRANSACTION

    FN.TT = 'F.TELLER'
    F.TT = ''
    FN.TXN = 'F.TELLER.TRANSACTION'
    F.TXN = ''
    FN.TTI = 'F.TT.TELLER.ID'
    F.TTI = ''
    FN.AC = 'F.ACCOUNT'
    F.AC = ''
    CALL OPF(FN.AC,F.AC)
    CALL OPF(FN.TT,F.TT)
    CALL OPF(FN.TXN,F.TXN)
    CALL OPF(FN.TTI,F.TTI)

    Y.TXN.CODE = R.NEW(TT.TE.TRANSACTION.CODE)
    CALL F.READ(FN.TXN,Y.TXN.CODE,R.TXN,F.TXN,ERR.TXN)
    IF R.TXN<TT.TR.CAT.DEPT.CODE.1> EQ '10001' OR R.TXN<TT.TR.CAT.DEPT.CODE.1> EQ '10011' OR R.TXN<TT.TR.CAT.DEPT.CODE.2> EQ '10001' OR R.TXN<TT.TR.CAT.DEPT.CODE.2> EQ '10011' THEN
    END
    ELSE RETURN

    Y.TID = R.NEW(TT.TE.TELLER.ID.1)
    Y.CCY1 = R.NEW(TT.TE.CURRENCY.1)
    Y.CCY2 = R.NEW(TT.TE.CURRENCY.2)
    Y.LAMT1 = R.NEW(TT.TE.AMOUNT.LOCAL.1)
    Y.LAMT2 = R.NEW(TT.TE.AMOUNT.LOCAL.2)
    Y.FAMT1 = R.NEW(TT.TE.AMOUNT.FCY.1)
    Y.FAMT2 = R.NEW(TT.TE.AMOUNT.FCY.2)
    Y.AMT1 = Y.LAMT1 + Y.FAMT1
    Y.AMT2 = Y.LAMT2 + Y.FAMT2
    Y.DR.CR.M = R.NEW(TT.TE.DR.CR.MARKER)

    IF Y.DR.CR.M = 'DEBIT' THEN Y.DR.CR = 'CR' ELSE Y.DR.CR = 'DR'
    Y.VER.ID = APPLICATION:PGM.VERSION
    IF Y.VER.ID EQ 'TELLER,TILL.TO.VAULT' OR Y.VER.ID EQ 'TELLER,VAULT.TO.TILL' THEN
        Y.DR.CR = 'DR'
        Y.AMT.V = Y.AMT2
        Y.TID = R.NEW(TT.TE.TELLER.ID.2)
        CALL F.READ(FN.TTI,Y.TID:'.':ID.COMPANY[6,4],R.CK,F.TTI,ERR.CK)
        GOSUB TID.CK
        Y.DR.CR = 'CR'
        Y.AMT.V = Y.AMT1
        Y.TID = R.NEW(TT.TE.TELLER.ID.1)
        CALL F.READ(FN.TTI,Y.TID:'.':ID.COMPANY[6,4],R.CK,F.TTI,ERR.CK)
        GOSUB TID.CK
    END
    ELSE IF Y.VER.ID EQ 'TELLER,LCY.TILLTFR' OR Y.VER.ID EQ 'TELLER,FCY.TILLTFR' THEN
        Y.DR.CR = 'DR'
        Y.TID = R.NEW(TT.TE.TELLER.ID.2)
        CALL F.READ(FN.TTI,Y.TID:'.':ID.COMPANY[6,4],R.CK,F.TTI,ERR.CK)
        GOSUB TID.CK
        Y.DR.CR = 'CR'
        Y.TID = R.NEW(TT.TE.TELLER.ID.1)
        CALL F.READ(FN.TTI,Y.TID:'.':ID.COMPANY[6,4],R.CK,F.TTI,ERR.CK)
        GOSUB TID.CK
    END
    ELSE
        CALL F.READ(FN.TTI,Y.TID:'.':ID.COMPANY[6,4],R.CK,F.TTI,ERR.CK)
        IF R.CK EQ '' THEN
            IF Y.TID EQ '9999' THEN TEXT = 'Vault Safe Limit is not set yet.' ELSE TEXT = 'Counter Limit is not set yet for Teller ID: ':Y.TID
            Y.CNT = DCOUNT(R.NEW(TT.TE.OVERRIDE),@VM) + 1
            CALL STORE.OVERRIDE(Y.CNT)
        END
        IF R.CK<TTTI.USER.ID> NE OPERATOR THEN RETURN
        GOSUB TID.CK
    END
    RETURN

TID.CK:
    FOR I = 1 TO DCOUNT(R.CK<TTTI.CCY>,@VM)
        Y.CUR.S.LIMIT = FIELD(R.CK<TTTI.SAFE.LIMIT>,@VM,I)
        Y.CUR.C.LIMIT = FIELD(R.CK<TTTI.COUNTER.LIMIT>,@VM,I)
        Y.CUR.TID = FIELD(R.CK<TTTI.TELLER.ID>,@VM,I)
        Y.CUR.CCY = FIELD(R.CK<TTTI.CCY>,@VM,I)
        IF Y.CUR.TID NE '9999' THEN
            Y.CUR.TID.AC = 'BDT10001':Y.CUR.TID:ID.COMPANY[6,4]
            CALL F.READ(FN.AC,Y.CUR.TID.AC,R.AC,F.AC,ERR.AC)
            IF Y.CUR.CCY EQ Y.CCY1 THEN
                IF Y.DR.CR EQ 'CR' THEN Y.AMT.CL = '-':Y.AMT1 ELSE Y.AMT.CL = Y.AMT1
                IF (R.AC<AC.WORKING.BALANCE> + Y.AMT.CL) LT ('-':Y.CUR.C.LIMIT) THEN
                    Y.MSG = 'Teller Limit Over for Curreny: ':Y.CUR.CCY:' Counter.Limit: ':Y.CUR.C.LIMIT:' TID: ':Y.TID
                    GOSUB OVR.MSG
                END
!Y.CUR.DR.CR = FIELD(R.CK<TTTI.DR.CR>,@VM,I)
!Y.CUR.LIMIT = FIELD(R.CK<TTTI.LIMIT>,@VM,I)
!FOR J = 1 TO DCOUNT(Y.CUR.DR.CR,@SM)
!Y.DR.CR.CUR = FIELD(Y.CUR.DR.CR,@SM,J)
!IF Y.DR.CR.CUR EQ Y.DR.CR THEN
!Y.LIMIT.CUR = FIELD(Y.CUR.LIMIT,@SM,J)
!IF Y.AMT1 GT Y.LIMIT.CUR THEN
!Y.MSG1 = 'Teller Limit Over for Curreny: ':Y.CCY1:' Txn.Limit: ':Y.LIMIT.CUR:' TID: ':Y.TID
!END
!END
!NEXT J
            END
            IF Y.CCY1 NE Y.CCY2 AND Y.CUR.CCY EQ Y.CCY2 THEN
                IF Y.DR.CR EQ 'CR' THEN Y.AMT.CL = '-':Y.AMT1 ELSE Y.AMT.CL = Y.AMT1
                IF (R.AC<AC.WORKING.BALANCE> + Y.AMT.CL) LT ('-':Y.CUR.C.LIMIT) THEN
                    Y.MSG = 'Teller Limit Over for Curreny: ':Y.CUR.CCY:' Counter.Limit: ':Y.CUR.C.LIMIT:' TID: ':Y.TID
                    GOSUB OVR.MSG
                END
!Y.CUR.DR.CR = FIELD(R.CK<TTTI.DR.CR>,@VM,I)
!Y.CUR.LIMIT = FIELD(R.CK<TTTI.LIMIT>,@VM,I)
!FOR J = 1 TO DCOUNT(Y.CUR.DR.CR,@SM)
!Y.DR.CR.CUR = FIELD(Y.CUR.DR.CR,@SM,J)
!IF Y.DR.CR.CUR EQ Y.DR.CR THEN
!Y.LIMIT.CUR = FIELD(Y.CUR.LIMIT,@SM,J)
!IF Y.AMT2 GT Y.LIMIT.CUR THEN
!Y.MSG2 = 'Teller Limit Over for Curreny: ':Y.CCY2:' Txn.Limit: ':Y.LIMIT.CUR:' TID: ':Y.TID
!END
!END
!NEXT J
            END
        END
        ELSE
            V.AC.BAL = 0
            Y.CUR.TID.AC = 'BDT10001':Y.CUR.TID:ID.COMPANY[6,4]
            CALL F.READ(FN.AC,Y.CUR.TID.AC,R.AC,F.AC,ERR.AC)
            V.AC.BAL = V.AC.BAL + R.AC<AC.WORKING.BALANCE>
            Y.CUR.TID.AC = 'BDT10011':Y.CUR.TID:ID.COMPANY[6,4]
            CALL F.READ(FN.AC,Y.CUR.TID.AC,R.AC,F.AC,ERR.AC)
            V.AC.BAL = V.AC.BAL + R.AC<AC.WORKING.BALANCE>
            IF Y.DR.CR EQ 'CR' THEN Y.AMT.V = '-':Y.AMT.V
            V.AC.BAL = V.AC.BAL + Y.AMT.V
            IF V.AC.BAL LT '-':Y.CUR.S.LIMIT THEN
                Y.MSG = 'Teller Limit Over for Curreny: ':Y.CUR.CCY:' Safe.Limit: ':Y.CUR.S.LIMIT:' TID: ':Y.TID
                GOSUB OVR.MSG
            END
        END
    NEXT I

!IF Y.MSG1 EQ '' AND Y.MSG2 EQ '' THEN RETURN
!IF Y.MSG1 EQ '' AND Y.MSG2 NE '' THEN Y.MSG = Y.MSG2
!IF Y.MSG2 EQ '' AND Y.MSG1 NE '' THEN Y.MSG = Y.MSG1
!IF Y.MSG1 EQ Y.MSG2 THEN Y.MSG = Y.MSG1
!ELSE
!IF Y.MSG1 NE '' AND Y.MSG2 NE '' THEN Y.MSG = Y.MSG1:@VM:Y.MSG2
!END
    GOSUB OVR.MSG
    RETURN

OVR.MSG:
    IF Y.MSG NE '' THEN
        TEXT = Y.MSG
        Y.CNT = DCOUNT(R.NEW(TT.TE.OVERRIDE),@VM) + 1
        CALL STORE.OVERRIDE(Y.CNT)
    END
    RETURN
END
