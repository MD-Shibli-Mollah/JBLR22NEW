*-----------------------------------------------------------------------------
* <Rating>625</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE ABL.CHECK.AC.VIOLATION

    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE


    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT GLOBUS.BP I_F.COMPANY
    $INSERT GLOBUS.BP I_F.FUNDS.TRANSFER
    $INSERT GLOBUS.BP I_F.TELLER
    $INSERT GLOBUS.BP I_F.TRANSACTION
    $INSERT JBL.BP I_F.ABL.H.AC.VIOLATION
    $INSERT GLOBUS.BP I_GTS.COMMON
    $INSERT GLOBUS.BP I_F.VERSION
*    $INSERT I_F.ABL.H.NOTICE.PARAMETER
    $INSERT  I_F.ABP.H.NT.PM
    $INSERT GLOBUS.BP I_F.ACCT.AVAILABILITY
    $INSERT GLOBUS.BP I_F.ACCT.GROUP.CONDITION

    IF APPLICATION EQ 'FUNDS.TRANSFER' OR APPLICATION EQ 'TELLER' ELSE RETURN

    IF APPLICATION EQ 'FUNDS.TRANSFER' THEN
        IF R.NEW(FT.DEBIT.ACCT.NO) MATCHES '3A...' THEN RETURN
    END

    GOSUB INITIALISE
    GOSUB OPEN.FILES
    GOSUB GET.TRANS.INFO

    CALL F.READ(FN.ACCOUNT,Y.DEBIT.ACCT,R.ACCOUNT,F.ACCOUNT,ACCT.READ.ERR)
    Y.AC.COND.GRP = R.ACCOUNT<AC.CONDITION.GROUP>:R.ACCOUNT<AC.CURRENCY>
    Y.DR.AC.CO.CODE=R.ACCOUNT<AC.CO.CODE>
    CALL F.READ(FN.NOTICE.PARAM,Y.AC.COND.GRP,R.NOTICE.PARAM,F.NOTICE.PARAM,NOTICE.PARAM.ERR)

    IF  R.NOTICE.PARAM THEN
        GOSUB CHK.MAX.WITHDRAW
        GOSUB CHK.MAX.AMT.EXCEED
    END
    ELSE
        RETURN
    END

    RETURN

INITIALISE:
*==========
    Y.DR.CR.MARKER = ''
    TRANS.CODE.1 = ''
    Y.DEBIT.ACCT = ''
    Y.TRANS.AMT = ''
    Y.TELLER.TRANS = ''
    Y.AC.COND.GRP = ''
    R.NOTICE.PARAM = ''
    Y.DR.AC.CO.CODE=''
    RETURN

OPEN.FILES:
*==========
    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.ABL.H.AC.VIOLATION = 'F.ABL.H.AC.VIOLATION'
    F.ABL.H.AC.VIOLATION = ''
    R.ABL.H.AC.VIOLATION = ''
    CALL OPF(FN.ABL.H.AC.VIOLATION,F.ABL.H.AC.VIOLATION)

*FN.NOTICE.PARAM ='F.ABL.H.NOTICE.PARAMETER'
    FN.NOTICE.PARAM ='F.ABP.H.NT.PM'
    F.NOTICE.PARAM =''
    CALL OPF(FN.NOTICE.PARAM,F.NOTICE.PARAM)

    FN.ACCT.AVAIL = 'F.ACCT.AVAILABILITY'
    F.ACCT.AVAIL = ''
    R.ACCT.AVAIL = ''
    CALL OPF(FN.ACCT.AVAIL,F.ACCT.AVAIL)

    FN.AGC = 'F.ACCT.GROUP.CONDITION'
    F.AGC = ''
    R.AGC = ''
    CALL OPF(FN.AGC,F.AGC)

    RETURN

GET.TRANS.INFO:
*==============
    IF APPLICATION EQ 'TELLER' THEN
        Y.DR.CR.MARKER  =R.NEW(TT.TE.DR.CR.MARKER)
        IF Y.DR.CR.MARKER = 'DEBIT' THEN
            Y.DEBIT.ACCT = R.NEW(TT.TE.ACCOUNT.1)
            Y.TRANS.AMT = R.NEW(TT.TE.AMOUNT.LOCAL.1)
            Y.VALUE.DATE = R.NEW(TT.TE.VALUE.DATE.1)
            Y.CHEQUE.NUMBER = R.NEW(TT.TE.CHEQUE.NUMBER)
            Y.TOT.OVERRIDE = R.NEW(TT.TE.OVERRIDE)
            Y.RECORD.STATUS = R.NEW(TT.TE.RECORD.STATUS)
        END ELSE
            Y.DEBIT.ACCT = R.NEW(TT.TE.ACCOUNT.2)
            Y.TRANS.AMT = R.NEW(TT.TE.AMOUNT.LOCAL.2)
            Y.VALUE.DATE = R.NEW(TT.TE.VALUE.DATE.2)
            Y.CHEQUE.NUMBER = R.NEW(TT.TE.CHEQUE.NUMBER)
            Y.TOT.OVERRIDE = R.NEW(TT.TE.OVERRIDE)
            Y.RECORD.STATUS = R.NEW(TT.TE.RECORD.STATUS)
        END
        Y.OVERRIDE.NO = R.NEW(TT.TE.OVERRIDE)
        Y.OVERRIDE.CNT = DCOUNT(Y.OVERRIDE.NO,@VM)
        Y.OVERRIDE.CNT +=1

    END ELSE
        IF APPLICATION EQ 'FUNDS.TRANSFER' THEN
            Y.DEBIT.ACCT = R.NEW(FT.DEBIT.ACCT.NO)
            Y.TRANS.AMT = R.NEW(FT.DEBIT.AMOUNT)
            IF NOT(Y.TRANS.AMT) THEN Y.TRANS.AMT = R.NEW(FT.CREDIT.AMOUNT)
            Y.VALUE.DATE = R.NEW(FT.DEBIT.VALUE.DATE)
            IF NOT(Y.VALUE.DATE) THEN Y.VALUE.DATE = R.NEW(FT.CREDIT.VALUE.DATE)
            Y.CHEQUE.NUMBER = R.NEW(FT.CHEQUE.NUMBER)
            Y.TOT.OVERRIDE = R.NEW(FT.OVERRIDE)
            Y.RECORD.STATUS = R.NEW(FT.RECORD.STATUS)

            Y.OVERRIDE.NO = R.NEW(FT.OVERRIDE)
            Y.OVERRIDE.CNT = DCOUNT(Y.OVERRIDE.NO,@VM)
            Y.OVERRIDE.CNT +=1
        END
    END

    RETURN

CHK.MAX.WITHDRAW:
*================
    Y.TOT.OVE.CNT.1 = '' ; VAR.TO.SEARCH.1 = ''
    Y.TOT.OVE.CNT.1 = DCOUNT(Y.TOT.OVERRIDE,@VM)
    VAR.TO.SEARCH.1 = 'MAX NO. OF WDLS. FOR THIS TXN CODE BEING EXCEEDED'
    FOR I = 1 TO Y.TOT.OVE.CNT.1
        IF INDEX(Y.TOT.OVERRIDE<I>,VAR.TO.SEARCH.1,1) THEN
            GOSUB GET.MAX.TRAN
            IF Y.TRAN.CNT > Y.MAX.NO.OF.TRAN THEN
                Y.AC.VL.ID = Y.DEBIT.ACCT :'.': TODAY[1,6]
                CALL F.READ(FN.ABL.H.AC.VIOLATION,Y.AC.VL.ID,R.ABL.H.AC.VIOLATION,F.ABL.H.AC.VIOLATION,AC.VL.READ.ERR)
                IF R.ABL.H.AC.VIOLATION THEN
                    R.ABL.H.AC.VIOLATION<ACV.AC.BAL.DATE.VL,-1> = Y.VALUE.DATE
                    R.ABL.H.AC.VIOLATION<ACV.AC.BAL.TXN.REF,-1> = ID.NEW
                END ELSE
                    R.ABL.H.AC.VIOLATION<ACV.AC.BAL.DATE.VL,-1> = Y.VALUE.DATE
                    R.ABL.H.AC.VIOLATION<ACV.AC.BAL.TXN.REF,-1> = ID.NEW
                    R.ABL.H.AC.VIOLATION<ACV.FLAG> = 'Y'
                    R.ABL.H.AC.VIOLATION<ACV.CURR.NO> = 1
                    R.ABL.H.AC.VIOLATION<ACV.INPUTTER> = OPERATOR
                    R.ABL.H.AC.VIOLATION<ACV.AUTHORISER> = OPERATOR
                    R.ABL.H.AC.VIOLATION<ACV.CO.CODE> = Y.DR.AC.CO.CODE
                    R.ABL.H.AC.VIOLATION<ACV.DEPT.CODE> = 1
                END
                GOSUB CHK.WRITE.VIOLATION
                EXIT
            END
        END
    NEXT I
    RETURN
*------------
GET.MAX.TRAN:
*------------
    CALL F.READ(FN.AGC,Y.AC.COND.GRP,R.AGC,F.AGC,ERR)
    Y.TRAN.CODES = R.AGC<ACCT.GRP.WDL.TXN.CODE>
    Y.MAX.NO.OF.TRAN = R.AGC<ACCT.GRP.MAX.NO.WDLS,1>

*--------parameter---------------
    Y.WEEK.START  = 'MONDAY'
    Y.WEEK.END = 'SUNDAY'
    Y.WEEK.DAYS = 'MONDAY' :VM: 'TUESDAY' :VM: 'WEDNESDAY' :VM: 'THURSDAY' :VM: 'FRIDAY' :VM: 'SATURDAY' : VM: 'SUNDAY'
    Y.WEEK.DAYS.OFFSET = '0' :VM: '1' :VM: '2' :VM: '3' :VM: '4' :VM: '5' :VM: '6'
*----------parameter-------------

    CALC.DATE = ICONV(Y.VALUE.DATE,'D')
    Y.VALUE.DAY = OCONV(CALC.DATE,'DWA')

    Y.START.DTE.TO.COUNT = ''
    Y.END.DTE.TO.COUNT = ''
    IF Y.VALUE.DAY EQ Y.WEEK.START THEN ;* tran value date is on the first day of week
        Y.START.DTE.TO.COUNT = Y.VALUE.DATE
        Y.END.DTE.TO.COUNT = Y.VALUE.DATE

    END
    ELSE
        IF Y.VALUE.DAY EQ Y.WEEK.END THEN         ;* tranv value date is on the last day of week
            Y.START.DTE.TO.COUNT = Y.VALUE.DATE
            Y.END.DTE.TO.COUNT = Y.VALUE.DATE
            IF Y.END.DTE.TO.COUNT[7,2] GT 7 THEN
                CALL CDT('',Y.START.DTE.TO.COUNT,'-6C')
            END
            ELSE
                Y.START.DTE.TO.COUNT = Y.END.DTE.TO.COUNT[1,6] : '01'
            END

        END
        ELSE        ;* tran value date is middle of the week
            Y.END.DTE.TO.COUNT = Y.VALUE.DATE
            IF Y.END.DTE.TO.COUNT[7,2] LE 7 THEN
                Y.START.DTE.TO.COUNT = Y.END.DTE.TO.COUNT[1,6] : '01'
            END
            ELSE
                LOCATE Y.VALUE.DAY IN Y.WEEK.DAYS<1,1> SETTING DAY.POS THEN
                    Y.START.DTE.TO.COUNT = Y.VALUE.DATE
                    CALL CDT('',Y.START.DTE.TO.COUNT,'-':Y.WEEK.DAYS.OFFSET<1,DAY.POS>:'C')
                END
            END
        END
    END
    Y.TRAN.CNT = 0
    CALL F.READ(FN.ACCT.AVAIL,Y.DEBIT.ACCT,R.ACCT.AVAIL,F.ACCT.AVAIL,ERR)
    IF R.ACCT.AVAIL THEN
        Y.DTE.CNT = DCOUNT(R.ACCT.AVAIL<AC.AVA.VALUE.DATE>,VM)
        I = 1
        LOOP
            Y.CURR.DATE = R.ACCT.AVAIL<AC.AVA.VALUE.DATE,I>
        UNTIL Y.CURR.DATE LT Y.START.DTE.TO.COUNT
            Y.REV.MARK = R.ACCT.AVAIL<AC.AVA.REV.MARKER,I>
            Y.CNT = DCOUNT(Y.REV.MARK,SM)
            FOR J = 1 TO Y.CNT
                Y.TXN.CODE = R.ACCT.AVAIL<AC.AVA.TXN.CODE,I,J>
                Y.TXN.AMT = R.ACCT.AVAIL<AC.AVA.TXN.AMT,I,J>
                IF Y.TXN.CODE MATCHES Y.TRAN.CODES AND Y.TXN.AMT < 0 THEN
                    IF Y.REV.MARK<1,1,J> EQ 'Y' THEN
                        Y.TRAN.CNT -= 1
                    END
                    ELSE
                        Y.TRAN.CNT += 1
                    END
                END
            NEXT J
            I += 1
        REPEAT
    END

    RETURN

CHK.MAX.AMT.EXCEED:
*================
    Y.TOT.OVE.CNT.2 = '' ; VAR.TO.SEARCH.2 = ''
    Y.TOT.OVE.CNT.2 = DCOUNT(Y.TOT.OVERRIDE,@VM)
    VAR.TO.SEARCH.2 = "NO NOTICE GIVEN FOR WITHDRAWAL"
    FOR I = 1 TO Y.TOT.OVE.CNT.2
        IF INDEX(Y.TOT.OVERRIDE<I>,VAR.TO.SEARCH.2,1) THEN
            Y.AC.VL.ID = Y.DEBIT.ACCT:'.':TODAY[1,6]
            CALL F.READ(FN.ABL.H.AC.VIOLATION,Y.AC.VL.ID,R.ABL.H.AC.VIOLATION,F.ABL.H.AC.VIOLATION,AC.VL.READ.ERR)

            IF R.ABL.H.AC.VIOLATION THEN
                R.ABL.H.AC.VIOLATION<ACV.AC.BAL.DATE.VL,-1> = Y.VALUE.DATE
                R.ABL.H.AC.VIOLATION<ACV.AC.BAL.TXN.REF,-1> = ID.NEW
            END ELSE
                R.ABL.H.AC.VIOLATION<ACV.AC.BAL.DATE.VL,-1> = Y.VALUE.DATE
                R.ABL.H.AC.VIOLATION<ACV.AC.BAL.TXN.REF,-1> = ID.NEW
                R.ABL.H.AC.VIOLATION<ACV.FLAG> = 'Y'
                R.ABL.H.AC.VIOLATION<ACV.CURR.NO> = 1
                R.ABL.H.AC.VIOLATION<ACV.INPUTTER>= OPERATOR
                R.ABL.H.AC.VIOLATION<ACV.AUTHORISER>=OPERATOR
                R.ABL.H.AC.VIOLATION<ACV.CO.CODE> = Y.DR.AC.CO.CODE
                R.ABL.H.AC.VIOLATION<ACV.DEPT.CODE>=1

            END
            GOSUB CHK.WRITE.VIOLATION
            EXIT
        END
    NEXT I

    RETURN

CHK.WRITE.VIOLATION:
*===================
*    CALL F.WRITE(FN.ABL.H.AC.VIOLATION,Y.AC.VL.ID,R.ABL.H.AC.VIOLATION)
    IF R.ABL.H.AC.VIOLATION THEN
        WRITE R.ABL.H.AC.VIOLATION TO F.ABL.H.AC.VIOLATION,Y.AC.VL.ID
    END
*     CALL JOURNAL.UPDATE("")
    RETURN
END
