    SUBROUTINE RTGS.INW.SETT.AMT.CHECK

!PROGRAM RTGS.INW.SETT.AMT.CHECK

    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT GLOBUS.BP I_F.FUNDS.TRANSFER
    $INSERT JBL.BP I_F.BD.RTGS.PARAM

    GOSUB INIT
    GOSUB OPENFILES
    GOSUB PROCESS

    RETURN

INIT:
    FN.ACCT='FBNK.ACCOUNT'; F.ACCT=''
    FN.RTGS.PARAM = 'F.EB.BD.RTGS.PARAM'; F.RTGS.PARAM = ''
    FN.FT.NAU = 'FBNK.FUNDS.TRANSFER$NAU'; F.FT.NAU = ''
    RETURN

OPENFILES:
    CALL OPF(FN.ACCT,F.ACCT)
    CALL OPF(FN.RTGS.PARAM,F.RTGS.PARAM)
    CALL OPF(FN.FT.NAU,F.FT.NAU)
    RETURN

PROCESS:

    CALL F.READ(FN.RTGS.PARAM,'SYSTEM',REC.RTGS.PARAM,F.RTGS.PARAM,RTGS.PARAM.ERR)

    Y.ACC.ID = 'BDT':REC.RTGS.PARAM<EB.BD.29.IW.SETT.CATEG>:'0001':RIGHT(ID.COMPANY,4)

    Y.TRANSACT.AMT.NAU.TOTAL = 0


    Y.CURRENT.DATE = RIGHT(LEFT(ID.NEW,7),5)

    SEL.CMD = "SELECT ":FN.FT.NAU:" WITH CREDIT.ACCT.NO EQ ":Y.ACC.ID:" AND TRANSACTION.TYPE EQ 'ACIS' AND RECORD.STATUS EQ 'INAU' AND CO.CODE EQ ":ID.COMPANY
    CALL EB.READLIST(SEL.CMD,SEL.LIST,'',NO.OF.REC,RET.CODE)

    LOOP
        REMOVE Y.FT.NAU.ID FROM SEL.LIST SETTING POS
    WHILE Y.FT.NAU.ID:POS

        Y.NAU.FT.DATE = RIGHT(LEFT(Y.FT.NAU.ID,7),5)

        IF Y.NAU.FT.DATE EQ Y.CURRENT.DATE AND V$FUNCTION NE 'D'  THEN
            CALL F.READ(FN.FT.NAU,Y.FT.NAU.ID,R.FT.NAU,F.FT.NAU,Y.FT.NAU.ERR)
            Y.TRANSACT.NAU.AMT = R.FT.NAU<FT.LOC.AMT.DEBITED>
            Y.TRANSACT.AMT.NAU.TOTAL +=  Y.TRANSACT.NAU.AMT
        END

    REPEAT

    IF R.NEW(FT.DEBIT.AMOUNT) EQ '' AND R.NEW(FT.CREDIT.AMOUNT) NE '' THEN
        Y.DR.AMT = R.NEW(FT.CREDIT.AMOUNT)
        Y.CR.AMT = R.NEW(FT.CREDIT.AMOUNT)

    END

    IF R.NEW(FT.CREDIT.AMOUNT) EQ '' AND R.NEW(FT.DEBIT.AMOUNT) NE '' THEN
        Y.CR.AMT = R.NEW(FT.DEBIT.AMOUNT)
        Y.DR.AMT = R.NEW(FT.DEBIT.AMOUNT)
    END

    Y.TOTAL.AMT= Y.TRANSACT.AMT.NAU.TOTAL + Y.DR.AMT


    CALL F.READ(FN.ACCT,Y.ACC.ID,R.ACCT,F.ACCT,ACCT.ERR)

    Y.WORKING.BAL = R.ACCT<AC.WORKING.BALANCE>

    IF Y.WORKING.BAL MATCHES '-...' THEN
        Y.OUTSTANDING.MARKER = 'YES'
        Y.OUTSTANDING.AMOUNT = ABS(Y.WORKING.BAL)
    END ELSE
        Y.OUTSTANDING.MARKER = 'NO'
        IF Y.WORKING.BAL EQ '' THEN
            Y.NON.OUTSTAND.AMT = 0
        END ELSE
            Y.NON.OUTSTAND.AMT = Y.WORKING.BAL
        END
    END

    IF Y.TRANSACT.AMT.NAU.TOTAL GT 0 AND Y.TOTAL.AMT GT Y.OUTSTANDING.AMOUNT AND Y.OUTSTANDING.MARKER EQ 'YES' THEN
        ETEXT="Inserted Amount = ":Y.DR.AMT:" and total unauth amounts ":Y.TRANSACT.AMT.NAU.TOTAL:" sum is greater than outstanding amount =":Y.OUTSTANDING.AMOUNT
        CALL STORE.END.ERROR
        RETURN
    END

    IF Y.OUTSTANDING.MARKER EQ 'NO' AND V$FUNCTION NE 'D' THEN
        ETEXT="The GL head '":Y.ACC.ID:"' doesn't have outstanding amount. Current balance is: ":Y.NON.OUTSTAND.AMT
        CALL STORE.END.ERROR
        RETURN
    END

    IF Y.TRANSACT.AMT.NAU.TOTAL EQ 0 AND Y.DR.AMT GT Y.OUTSTANDING.AMOUNT AND Y.OUTSTANDING.MARKER EQ 'YES' AND V$FUNCTION NE 'D' THEN
        ETEXT="Inserted Amount = ":Y.DR.AMT:" is greater than outstanding amount =":Y.OUTSTANDING.AMOUNT
        CALL STORE.END.ERROR
        RETURN
    END

    RETURN
END
