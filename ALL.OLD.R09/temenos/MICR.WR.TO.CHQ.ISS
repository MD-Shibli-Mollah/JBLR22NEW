!    PROGRAM MICR.WR.TO.CHQ.ISS
    SUBROUTINE MICR.WR.TO.CHQ.ISS
    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_F.CHEQUE.ISSUE
    $INSERT BP I_F.JBL.MICR.MGT

    GOSUB INIT
    GOSUB OPENFILES
    GOSUB PROCESS

*------
INIT:
*------
    FN.CHQ.ISS = 'F.CHEQUE.ISSUE'
    F.CHQ.ISS = ''

    FN.CHQ.ISS.NAU='F.CHEQUE.ISSUE$NAU'
    F.CHQ.ISS.NAU=''

    FN.CHQ.ISS.HIS='F.CHEQUE.ISSUE$HIS'
    F.CHQ.ISS.HIS=''

    Y.SOURCE="DM.OFS.SRC.VAL"

    Y.MICR.ID = ''
    RETURN
*---------
OPENFILES:
*---------
    CALL OPF(FN.CHQ.ISS,F.CHQ.ISS)
    CALL OPF(FN.CHQ.ISS.NAU,F.CHQ.ISS.NAU)
    CALL OPF(FN.CHQ.ISS.HIS,F.CHQ.ISS.HIS)

    RETURN
*-------
PROCESS:
*-------
!    DEBUG
    Y.REQ.BOOK = R.NEW(MICR.NO.OF.BOOK)
    Y.LEAF.TYPE = R.NEW(MICR.LEAF.TYPE)
    Y.PREFIX.NO = R.NEW(MICR.PREFIX.NO)
    Y.STARTING.NO = R.NEW(MICR.STARTING.NO)
    Y.CHQ.TYPE = R.NEW(MICR.CHQ.TYPE)
    Y.CO.CODE = R.NEW(MICR.BRANCH.CODE)
    Y.T24.AC = R.NEW(MICR.ACCOUNT)
    Y.MICR.ID = Y.CHQ.TYPE:".":Y.T24.AC

    IF V$FUNCTION EQ "I" THEN

        FOR I=1 TO Y.REQ.BOOK

*-------List of Issued Checked from Live Table -------------*

            SEL.CMD = "SELECT ":FN.CHQ.ISS: " WITH @ID LIKE '":Y.MICR.ID:"...'"
            CALL EB.READLIST(SEL.CMD,SEL.LIST,'',NO.OF.REC,RET.CODE)
            Y.SEQ = FIELDS(SEL.LIST<NO.OF.REC>, ".",3)

*-------List of Issued Checked from UnAuth Table -------------*

            SEL.CMD.NAU = "SELECT ":FN.CHQ.ISS.NAU: " WITH @ID LIKE '":Y.MICR.ID:"...'"
            CALL EB.READLIST(SEL.CMD.NAU,SEL.LIST.NAU,'',NO.OF.REC.NAU,RET.CODE.NAU)
            Y.SEQ.NAU = FIELDS(SEL.LIST.NAU<NO.OF.REC.NAU>, ".",3)

            IF Y.SEQ.NAU NE "" AND Y.SEQ.NAU > Y.SEQ THEN
                Y.TEMP.SEQ =  FMT((Y.SEQ.NAU + 1), 'R0%7')
            END
            ELSE
                Y.TEMP.SEQ =  FMT((Y.SEQ + 1), 'R0%7')
            END

            Y.RECORD.ID = Y.MICR.ID:".":Y.TEMP.SEQ

*-------Check Maximum Sequence Number from History Table -------------*

            CALL F.READ.HISTORY(FN.CHQ.ISS.HIS,Y.RECORD.ID,R.HIS,F.CHQ.ISS.HIS,ERR)

            IF R.HIS NE "" THEN
                Y.NEW.SEQ =  FMT((Y.TEMP.SEQ + 1), 'R0%7')
            END
            ELSE
                Y.NEW.SEQ = Y.TEMP.SEQ
            END

            Y.MICR.NEW.ID = Y.MICR.ID:".":Y.NEW.SEQ

            Y.MESSAGE="CHEQUE.ISSUE,MICR/I/PROCESS,//":Y.CO.CODE:",":Y.MICR.NEW.ID:",ISSUE.DATE=":TODAY:",NUMBER.ISSUED=":Y.LEAF.TYPE:",CHQ.NO.START=":Y.PREFIX.NO:Y.STARTING.NO:",REQ.REF=":ID.NEW

            RUNNING.UNDER.BATCH=1
            CALL OFS.GLOBUS.MANAGER(Y.SOURCE,Y.MESSAGE)

            RUNNING.UNDER.BATCH=0
            SENSITIVITY=''

            Y.STATUS =FIELD(FIELD(Y.MESSAGE,"/",3,1),",",1)

            Y.STARTING.NO = FMT((Y.STARTING.NO + Y.LEAF.TYPE), 'R0%7')

        NEXT I
    END
    ELSE IF V$FUNCTION EQ "A" THEN
        SEL.CMD.NAU = "SELECT ":FN.CHQ.ISS.NAU: " WITH @ID LIKE '":Y.MICR.ID:"...' AND REQ.REF EQ ":ID.NEW
        CALL EB.READLIST(SEL.CMD.NAU,SEL.LIST.NAU,'',NO.OF.REC.NAU,RET.CODE.NAU)

        FOR I = 1 TO NO.OF.REC.NAU

            Y.CHQ.ISS.ID = SEL.LIST.NAU<I>
            Y.MESSAGE="CHEQUE.ISSUE,MICR/A/PROCESS,//":Y.CO.CODE:",":Y.CHQ.ISS.ID

            RUNNING.UNDER.BATCH=1
            CALL OFS.GLOBUS.MANAGER(Y.SOURCE,Y.MESSAGE)

            RUNNING.UNDER.BATCH=0
            SENSITIVITY=''

            Y.STATUS =FIELD(FIELD(Y.MESSAGE,"/",3,1),",",1)
        NEXT I
    END
    ELSE IF V$FUNCTION EQ "D" THEN
        SEL.CMD.NAU = "SELECT ":FN.CHQ.ISS.NAU: " WITH @ID LIKE '":Y.MICR.ID:"...' AND REQ.REF EQ ":ID.NEW
        CALL EB.READLIST(SEL.CMD.NAU,SEL.LIST.NAU,'',NO.OF.REC.NAU,RET.CODE.NAU)

        FOR I = 1 TO NO.OF.REC.NAU

            Y.CHQ.ISS.ID = SEL.LIST.NAU<I>
            Y.MESSAGE="CHEQUE.ISSUE,MICR/D/PROCESS,//":Y.CO.CODE:",":Y.CHQ.ISS.ID

            RUNNING.UNDER.BATCH=1
            CALL OFS.GLOBUS.MANAGER(Y.SOURCE,Y.MESSAGE)

            RUNNING.UNDER.BATCH=0
            SENSITIVITY=''

            Y.STATUS =FIELD(FIELD(Y.MESSAGE,"/",3,1),",",1)

        NEXT I
    END

    RETURN
END
