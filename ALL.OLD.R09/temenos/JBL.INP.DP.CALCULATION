*-----------------------------------------------------------------------------
* <Rating>100</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE JBL.INP.DP.CALCULATION

    $INCLUDE GLOBUS.BP I_COMMON
    $INCLUDE GLOBUS.BP I_EQUATE
    $INCLUDE GLOBUS.BP I_F.COLLATERAL

    IF R.NEW(COLL.COLLATERAL.TYPE) NE 210 THEN RETURN

    DP.MAR = ''
    DP.AMT.PER.STOCK = ''
    DP.TOT.STK = ''
    DP.TOT.MGN = ''
    Y.TOT.STK.CNT = ''
    Y.TOT.MGN.CNT = ''
    STK.INC = ''
    MGN.INC = ''
    TOT.PER.STOCK = ''
    AMT.MERGIN = ''
    DP.INC = ""
    DP.MAR.CNT=""
    TOT.DR.PWR=""

    Y.APPLICATION="COLLATERAL"
    TOTAL.PER.STOCK="TOTAL.PER.STOCK"
    MARGIN="MARGIN"
    AMOUNT.MARGIN="AMOUNT.MARGIN"
    DRAWING="DRAWING"
    TOT.STOCK="TOT.STOCK"
    TOT.MARGIN="TOT.MARGIN"
    TOT.POWER="TOT.POWER"
    ADDR.GODOWN="ADDR.GODOWN"
    LIMIT="LIMIT"
    QUANTITY="QUANTITY"
    VALUE.PER.UNIT="VALUE.PER.UNIT"
    NAME.OF.STOCK="NAME.OF.STOCK"


    TOTAL.PER.STOCK.POS  = ""
    MARGIN.POS = ""
    AMOUNT.MARGIN.POS  = ""
    DRAWING.POS  = ""
    TOT.STOCK.POS  = ""
    TOT.MARGIN.POS  = ""
    TOT.POWER.POS  = ""
    ADDR.GODOWN.POS  = ""
    LIMIT.POS = ""
    QUANTITY.POS = ""
    VALUE.PER.UNIT.POS = ""
    NAME.OF.STOCK.POS=""


    CALL GET.LOC.REF(Y.APPLICATION,NAME.OF.STOCK,NAME.OF.STOCK.POS)
    CALL GET.LOC.REF(Y.APPLICATION,TOTAL.PER.STOCK,TOTAL.PER.STOCK.POS)
    CALL GET.LOC.REF(Y.APPLICATION,MARGIN,MARGIN.POS)
    CALL GET.LOC.REF(Y.APPLICATION,AMOUNT.MARGIN,AMOUNT.MARGIN.POS)
    CALL GET.LOC.REF(Y.APPLICATION,DRAWING,DRAWING.POS)
    CALL GET.LOC.REF(Y.APPLICATION,TOT.STOCK,TOT.STOCK.POS)
    CALL GET.LOC.REF(Y.APPLICATION,TOT.MARGIN,TOT.MARGIN.POS)
    CALL GET.LOC.REF(Y.APPLICATION,TOT.POWER,TOT.POWER.POS)
    CALL GET.LOC.REF(Y.APPLICATION,ADDR.GODOWN,ADDR.GODOWN.POS)
    CALL GET.LOC.REF(Y.APPLICATION,LIMIT,LIMIT.POS)
    CALL GET.LOC.REF(Y.APPLICATION,QUANTITY,QUANTITY.POS)
    CALL GET.LOC.REF(Y.APPLICATION,VALUE.PER.UNIT,VALUE.PER.UNIT.POS)


    STOCK.CNT=DCOUNT(R.NEW(COLL.LOCAL.REF)<1,NAME.OF.STOCK.POS>,@SM)

    FOR I=1 TO STOCK.CNT
        TOT.PER.STOCK = R.NEW(COLL.LOCAL.REF)<1,QUANTITY.POS,I> * R.NEW(COLL.LOCAL.REF)<1,VALUE.PER.UNIT.POS,I>
        R.NEW(COLL.LOCAL.REF)<1,TOTAL.PER.STOCK.POS,I> = TOT.PER.STOCK
        AMT.MERGIN = ( TOT.PER.STOCK * R.NEW(COLL.LOCAL.REF)<1,MARGIN.POS,I> ) / 100
        R.NEW(COLL.LOCAL.REF)<1,AMOUNT.MARGIN.POS,I>  = AMT.MERGIN
        R.NEW(COLL.LOCAL.REF)<1,DRAWING.POS,I> = TOT.PER.STOCK  - AMT.MERGIN
        DP.TOT.DR.POW = DP.TOT.DR.POW + ( TOT.PER.STOCK  - AMT.MERGIN )
        DP.TOT.STK = DP.TOT.STK + TOT.PER.STOCK
        DP.TOT.MGN = DP.TOT.MGN + AMT.MERGIN
        TOT.PER.STOCK=""
        AMT.MERGIN=""

    NEXT

    R.NEW(COLL.LOCAL.REF)<1,TOT.STOCK.POS> = DP.TOT.STK
    R.NEW(COLL.LOCAL.REF)<1,TOT.MARGIN.POS> = DP.TOT.MGN

    LIMIT.AMT = R.NEW(COLL.LOCAL.REF)<1,LIMIT.POS>

    IF LIMIT.AMT LT DP.TOT.DR.POW THEN
        TOT.DR.PWR = LIMIT.AMT
    END ELSE
        TOT.DR.PWR = DP.TOT.DR.POW
    END

    R.NEW(COLL.LOCAL.REF)<1,TOT.POWER.POS> = TOT.DR.PWR

    RETURN

END
