*-----------------------------------------------------------------------------
* <Rating>50</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE BD.UPDATE.PC.DISB.JOB
    $INSERT I_EQUATE
    $INSERT I_COMMON
    $INSERT I_F.LETTER.OF.CREDIT
    $INSERT I_F.ACCOUNT
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.LD.LOANS.AND.DEPOSITS
    $INSERT I_F.BD.BTB.JOB.REGISTER

    IF V$FUNCTION EQ "A" THEN
        GOSUB INITIALISE
        GOSUB PROCESS
    END

INITIALISE:

    FN.BD.BTB.JOB.REGISTER = 'F.BD.BTB.JOB.REGISTER'
    F.BD.BTB.JOB.REGISTER = ''
    CALL OPF(FN.BD.BTB.JOB.REGISTER,F.BD.BTB.JOB.REGISTER)

    FN.LD="F.LD.LOANS.AND.DEPOSITS"
    F.LD=""
    CALL OPF(FN.LD,F.LD)

    FN.AC = "F.ACCOUNT"
    F.AC = ""
    CALL OPF(FN.AC,F.AC)

    RETURN

PROCESS:
    GOSUB GET.LOC.REF.POS
    IF R.NEW(FT.LOCAL.REF)<1,Y.JOBNO.POS> EQ "" THEN RETURN
    Y.JOB.NUMBER = R.NEW(FT.LOCAL.REF)<1,Y.JOBNO.POS>
    Y.PC.FT.AMT = R.NEW(FT.LOCAL.REF)<1,Y.PC.FCVAL.POS>
    CALL F.READ(FN.BD.BTB.JOB.REGISTER,Y.JOB.NUMBER,R.BTB.JOB.REGISTER,F.BD.BTB.JOB.REGISTER,Y.BD.JOB.REG.ERR)
    IF NOT(Y.BD.JOB.REG.ERR) THEN
        Y.PC.ENT.AVAIL = R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AVL.AMT>
        Y.PC.ID.REF = R.BTB.JOB.REGISTER<BTB.JOB.PCECC.LOAN.ID>
        Y.PC.DR.ACNO = R.NEW(FT.DEBIT.ACCT.NO)
        CALL F.READ(FN.AC,Y.PC.DR.ACNO,R.AC.REC,F.AC,Y.AC.ERR)
        IF NOT(Y.PC.ID.REF) THEN
            Y.COUNT = "1"
            Y.TOT.PC.FT.AMT = "0"
            GOSUB UPDATE.NEW.JOB.REGISTER
        END ELSE
            LOCATE Y.PC.DR.ACNO IN Y.PC.ID.REF<1,1> SETTING Y.CNT.POS THEN
                Y.COUNT = Y.CNT.POS
                Y.TOT.PC.FT.AMT = R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AMT>
                GOSUB UPDATE.EXIST.JOB.REGISTER
            END ELSE
                Y.COUNT = DCOUNT(Y.PC.ID.REF,@VM)
                Y.COUNT += 1
                Y.TOT.PC.FT.AMT = R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AMT>
                GOSUB UPDATE.NEW.JOB.REGISTER
            END
        END
    END

    RETURN

UPDATE.NEW.JOB.REGISTER:

    R.BTB.JOB.REGISTER<BTB.JOB.PCECC.LOAN.ID,Y.COUNT> = Y.PC.DR.ACNO
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.REF.NO,Y.COUNT> = ID.NEW
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.LI.PROD,Y.COUNT> = R.AC.REC<AC.LOCAL.REF,Y.LIPROD.POS>
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.STAT.DT,Y.COUNT> = R.AC.REC<AC.LOCAL.REF,Y.LN.STDATE.POS>
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.FC.CUR,Y.COUNT> = R.NEW(FT.LOCAL.REF)<1,Y.JOBCUR.POS>
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.AMT.FCY,Y.COUNT> = R.NEW(FT.LOCAL.REF)<1,Y.PC.FCVAL.POS>
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.EX.RT,Y.COUNT> = R.NEW(FT.LOCAL.REF)<1,Y.RATE.POS>
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.AMT.LCY,Y.COUNT> = R.NEW(FT.DEBIT.AMOUNT)
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.MAT.DT,Y.COUNT> = R.AC.REC<AC.LOCAL.REF,Y.LN.MTDATE.POS>
    R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AMT> = Y.PC.FT.AMT + Y.TOT.PC.FT.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AVL.AMT> -= Y.PC.FT.AMT
    CALL F.WRITE(FN.BD.BTB.JOB.REGISTER,Y.JOB.NUMBER,R.BTB.JOB.REGISTER)

    RETURN

UPDATE.EXIST.JOB.REGISTER:

    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.REF.NO,Y.COUNT> = ID.NEW
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.AMT.FCY,Y.COUNT> += R.NEW(FT.LOCAL.REF)<1,Y.PC.FCVAL.POS>
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.EX.RT,Y.COUNT> = R.NEW(FT.LOCAL.REF)<1,Y.RATE.POS>
    R.BTB.JOB.REGISTER<BTB.JOB.LOAN.AMT.LCY,Y.COUNT> += R.NEW(FT.DEBIT.AMOUNT)
    R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AMT> = Y.PC.FT.AMT + Y.TOT.PC.FT.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AVL.AMT> -= Y.PC.FT.AMT
    CALL F.WRITE(FN.BD.BTB.JOB.REGISTER,Y.JOB.NUMBER,R.BTB.JOB.REGISTER)
    RETURN

GET.LOC.REF.POS:

    CALL GET.LOC.REF("FUNDS.TRANSFER","DOC.VALUE.FC",Y.PC.FCVAL.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","EXCHANGE.RATE",Y.RATE.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","JOB.NUMBER",Y.JOBNO.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","JOB.ENT.CUR",Y.JOBCUR.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","JOB.ENTIT.AMT",Y.JOBAMT.POS)

    CALL GET.LOC.REF("ACCOUNT","OLD.LEGACY.ID",Y.PCREF.POS)
    CALL GET.LOC.REF("ACCOUNT","LIMIT.PROD",Y.LIPROD.POS)
    CALL GET.LOC.REF("ACCOUNT","LOAN.START.DATE",Y.LN.STDATE.POS)
    CALL GET.LOC.REF("ACCOUNT","LOAN.MAT.DATE",Y.LN.MTDATE.POS)

    RETURN
END
