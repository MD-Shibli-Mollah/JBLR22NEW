*-----------------------------------------------------------------------------
*-----------------------------------------------------------------------------
* <Rating>-40</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE BD.V.FLDBP.REAL.DETS
*-----------------------------------------------------------------------------
* Subroutine Description:
*------------------------
* This routine is fatch record from DRAWINGS & ACCOUNT
*-----------------------------------------------------------------------------
* Modification History:
* ---------------------
* 20/04/2012 - New - Rayhan
*
*-----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.LETTER.OF.CREDIT
    $INSERT I_F.LC.TYPES
    $INSERT I_F.DRAWINGS
    $INSERT I_F.ACCOUNT
    $INSERT I_F.FUNDS.TRANSFER

    GOSUB INITIALISE
    GOSUB PROCESS

    RETURN
*-----------------------------------------------------------------------------
INITIALISE:
***********
    FN.LETTER.OF.CREDIT = 'F.LETTER.OF.CREDIT'
    F.LETTER.OF.CREDIT  = ''
    CALL OPF(FN.LETTER.OF.CREDIT,F.LETTER.OF.CREDIT)
    R.LETTER.OF.CREDIT  = ''

    FN.DRAWINGS = 'F.DRAWINGS'
    F.DRAWINGS = ''
    CALL OPF(FN.DRAWINGS,F.DRAWINGS)
    R.DRAWINGS = ''
    Y.DRAWINGS.ERR = ''

    FN.LC.TYPES = 'F.LC.TYPES'
    F.LC.TYPES = ''
    CALL OPF(FN.LC.TYPES,F.LC.TYPES)
    R.LC.TYPES = ''
    Y.LC.TYPES.ERR = ''

    FN.FT = 'F.FUNDS.TRANSFER'
    F.FT = ''
    CALL OPF(FN.FT,F.FT)
    R.FT.REC = ''
    Y.FT.ERR = ''

    FN.AC = 'F.ACCOUNT'
    F.AC = ''
    CALL OPF(FN.AC,F.AC)
    R.AC.REC = ''
    Y.AC.ERR = ''


    RETURN
*-----------------------------------------------------------------------------
PROCESS:
********
    GOSUB GET.LOC.REF.POS
    Y.DR.ID = COMI
    Y.LC.ID = Y.DR.ID[1,12]

    CALL F.READ(FN.DRAWINGS,Y.DR.ID,R.DRAWINGS,F.DRAWINGS,Y.DRAWINGS.ERR)
    Y.AC.ID = R.DRAWINGS<TF.DR.DRAWDOWN.ACCOUNT>
    Y.DOC.TYPE = R.DRAWINGS<TF.DR.LOCAL.REF,Y.DR.DTYPE.POS>
    IF Y.DOC.TYPE NE "PURCHASE" THEN
        AV = FT.LOCAL.REF
        AF = Y.FT.DRNO.POS
        ETEXT ="Not Purchase Document"
        CALL STORE.END.ERROR
    END

    CALL F.READ(FN.AC,Y.AC.ID,R.AC.REC,F.AC,Y.AC.ERR)
    Y.AC.CATEG = R.AC.REC<AC.CATEGORY>
    CALL F.READ(FN.LETTER.OF.CREDIT,Y.LC.ID,R.LETTER.OF.CREDIT,F.LETTER.OF.CREDIT,Y.LETTER.OF.CREDIT.ERR)
    Y.EXP.LC.NO = R.LETTER.OF.CREDIT<TF.LC.ISS.BANK.REF>
    Y.CONT.NO = R.LETTER.OF.CREDIT<TF.LC.LOCAL.REF,Y.LC.CONTNO.POS>
    Y.CUST.NO = R.LETTER.OF.CREDIT<TF.LC.BENEFICIARY.CUSTNO>
    Y.LC.TYPE = R.LETTER.OF.CREDIT<TF.LC.LC.TYPE>

    CALL F.READ(FN.LC.TYPES,Y.LC.TYPE,R.LC.TYPES,F.LC.TYPES,Y.LC.TYPES.ERR)
    Y.LC.IMP.EXP = R.LC.TYPES<LC.TYP.IMPORT.EXPORT>
    IF Y.LC.IMP.EXP NE 'E' THEN
        AV = FT.LOCAL.REF
        AF = Y.FT.DRNO.POS
        ETEXT ="Not Export LC Type"
        CALL STORE.END.ERROR
    END
    IF Y.AC.CATEG GE 1961 AND Y.AC.CATEG LE 1963 THEN
        GOSUB SET.FT.DEF.PUR.VAL
    END ELSE
        ETEXT ="Not Purchase Account Found"
        CALL STORE.END.ERROR
    END

    RETURN
*-----------------------------------------------------------------------------
GET.LOC.REF.POS:
*--------------
    CALL GET.LOC.REF("LETTER.OF.CREDIT","BTB.CONTRACT.NO",Y.LC.CONTNO.POS)
    CALL GET.LOC.REF("ACCOUNT","LINKED.TFDR.REF",Y.AC.DRNO.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","EXPORT.LC.NO",Y.FT.EXPLCNO.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","BTB.CONTRACT.NO",Y.FT.CONTNO.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","LINKED.TFDR.REF",Y.FT.DRNO.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","CUSTOMER.ID",Y.FT.CUSID.POS)
    CALL GET.LOC.REF("DRAWINGS","DOC.TYPE",Y.DR.DTYPE.POS)
    RETURN

SET.FT.DEF.PUR.VAL:
*------------------
    IF R.NEW(FT.LOCAL.REF)<1,Y.FT.EXPLCNO.POS> EQ "" THEN
        R.NEW(FT.LOCAL.REF)<1,Y.FT.EXPLCNO.POS> = Y.EXP.LC.NO
    END
    IF R.NEW(FT.LOCAL.REF)<1,Y.FT.CONTNO.POS> EQ "" THEN
        R.NEW(FT.LOCAL.REF)<1,Y.FT.CONTNO.POS> = Y.CONT.NO
    END
    IF R.NEW(FT.LOCAL.REF)<1,Y.FT.DRNO.POS> EQ "" THEN
        R.NEW(FT.LOCAL.REF)<1,Y.FT.DRNO.POS> = Y.DR.ID
    END
    IF R.NEW(FT.LOCAL.REF)<1,Y.FT.CUSID.POS> EQ "" THEN
        R.NEW(FT.LOCAL.REF)<1,Y.FT.CUSID.POS> = Y.CUST.NO
    END
    IF R.NEW(FT.CREDIT.ACCT.NO) EQ "" THEN
        R.NEW(FT.CREDIT.ACCT.NO) = Y.AC.ID
    END
    RETURN
END
