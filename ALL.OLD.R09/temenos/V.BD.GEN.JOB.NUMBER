*-----------------------------------------------------------------------------
* <Rating>240</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE V.BD.GEN.JOB.NUMBER
*-----------------------------------------------------------------------------------------------
* This is an AUTHORIZATION RTN used for generating Job Number if JOB.NEW.EXIST is "NEW". If JOB.NEW.EXIST
* is "Exist" then existing Job number will be updated accordingly.
* ----------------------------------------------------------------------------------------------

    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT I_F.BD.BTB.JOB.REGISTER
    $INSERT I_F.BD.BTB.CUS.JOB.SEQNO
    $INSERT GLOBUS.BP I_F.LETTER.OF.CREDIT
    $INSERT GLOBUS.BP I_F.COMPANY

    IF V$FUNCTION EQ "A" THEN
        GOSUB INITIALISE
        GOSUB PROCESS
    END

    RETURN

INITIALISE:

    FN.BD.BTB.JOB.REGISTER = 'F.BD.BTB.JOB.REGISTER'
    F.BD.BTB.JOB.REGISTER = ''
    CALL OPF(FN.BD.BTB.JOB.REGISTER,F.BD.BTB.JOB.REGISTER)

    FN.BD.BTB.JOB.CUS.SEQNO = 'F.BD.BTB.CUS.JOB.SEQNO'
    F.BD.BTB.JOB.CUS.SEQNO = ''
    CALL OPF(FN.BD.BTB.JOB.CUS.SEQNO,F.BD.BTB.JOB.CUS.SEQNO)

    FN.COM = 'F.COMPANY'
    F.COM = ''
    CALL OPF(FN.COM,F.COM)

    Y.NEW.EXIST = ''
    Y.JOB.NO = ''
    Y.LC.TYPE = ''
    Y.CUST.SEQNO = ''
    Y.SERIAL.NO = ''
    Y.LC.CURR = ''
    Y.JOB.CURR = ''
    Y.JOB.EXC.RATE = ''
    Y.NET.FOB.AMT = ''
    Y.BTB.ENT.PER = ''
    Y.PC.ENT.PER = ''
    Y.BTB.ENT.AMT = ''
    Y.PC.ENT.AMT = ''
    RETURN

PROCESS:
********
    GOSUB GET.LOC.REF
    Y.NEW.EXIST = R.NEW(TF.LC.LOCAL.REF)<1,Y.NEW.EXIST.POS>
    Y.JOB.NO = R.NEW(TF.LC.LOCAL.REF)<1,Y.JOB.NO.POS>
    Y.LC.TYPE = R.NEW(TF.LC.LC.TYPE)
    Y.LC.CURR = R.NEW(TF.LC.LC.CURRENCY)
    Y.JOB.CURR = R.NEW(TF.LC.LOCAL.REF)<1,Y.JOB.CUR.POS>
    Y.JOB.EXC.RATE = R.NEW(TF.LC.LOCAL.REF)<1,Y.JOB.EXC.RATE.POS>

    CALL F.READ(FN.COM,ID.COMPANY,R.COM.REC,F.COM,Y.COM.ERR)
    Y.BTB.ENT.PER = R.NEW(TF.LC.LOCAL.REF)<1,Y.BTB.RATE.POS>
    Y.PC.ENT.PER = R.NEW(TF.LC.LOCAL.REF)<1,Y.PC.RATE.POS>
    IF Y.JOB.CURR NE Y.LC.CURR THEN
        Y.CCY.MKT = '1'
        Y.CCY.BUY = Y.LC.CURR
        Y.BUY.AMT = R.NEW(TF.LC.LOCAL.REF)<1,Y.FOB.VALUE.POS>
        Y.CCY.SELL = Y.JOB.CURR
        Y.SELL.AMT = ''
        Y.BASE.CCY = ''
        Y.EXCHANGE.RATE = Y.JOB.EXC.RATE
        Y.DIFFERENCE = ''
        Y.LCY.AMT = ''
        Y.RETURN.CODE = ''
        CALL EXCHRATE(Y.CCY.MKT,Y.CCY.BUY,Y.BUY.AMT,Y.CCY.SELL,Y.SELL.AMT,Y.BASE.CCY,Y.EXCHANGE.RATE,Y.DIFFERENCE,Y.LCY.AMT,Y.RETURN.CODE)
        Y.NET.FOB.AMT = Y.SELL.AMT
        Y.BTB.ENT.AMT = (Y.SELL.AMT * Y.BTB.ENT.PER)/100
        Y.PC.ENT.AMT = (Y.SELL.AMT * Y.PC.ENT.PER)/100
    END ELSE
        Y.NET.FOB.AMT = R.NEW(TF.LC.LOCAL.REF)<1,Y.FOB.VALUE.POS>
        Y.BTB.ENT.AMT = R.NEW(TF.LC.LOCAL.REF)<1,Y.BTB.ENT.POS>
        Y.PC.ENT.AMT = R.NEW(TF.LC.LOCAL.REF)<1,Y.PC.ENT.POS>
    END

    BEGIN CASE
    CASE Y.NEW.EXIST EQ "NEW"
        IF NOT(R.COM.REC<EB.COM.LOCAL.REF,Y.ADCODE.POS>) THEN
            E = "AD CODE DOES NOT EXIST FOR THIS COMPANY"
            CALL STORE.END.ERROR
            RETURN
        END ELSE
            Y.AD.CODE = R.COM.REC<EB.COM.LOCAL.REF,Y.ADCODE.POS>
        END
        Y.CUSTOMER = R.NEW(TF.LC.BENEFICIARY.CUSTNO)
        CALL F.READ(FN.BD.BTB.JOB.CUS.SEQNO,Y.CUSTOMER,R.BD.BTB.JOB.CUS.SEQNO,F.BD.BTB.JOB.CUS.SEQNO,Y.CUST.SEQ.ERR)
        IF R.BD.BTB.JOB.CUS.SEQNO THEN
            Y.CUST.SEQNO = R.BD.BTB.JOB.CUS.SEQNO<BD.JOBSEQ.JOB.CUS.SEQNO> + 1
        END ELSE
            Y.CUST.SEQNO = "1"
        END
        R.BD.BTB.JOB.CUS.SEQNO<BD.JOBSEQ.JOB.CUS.SEQNO> = Y.CUST.SEQNO
!CALL F.WRITE(FN.BD.BTB.CUSTOMER.SEQ.NO,Y.CUSTOMER,R.BD.BTB.CUSTOMER.SEQ.NO)
!CALL CONCAT.FILE.UPDATE(FN.BD.BTB.JOB.CUS.SEQNO,Y.CUSTOMER,Y.CUST.SEQNO,'I','AL')
        WRITE R.BD.BTB.JOB.CUS.SEQNO TO F.BD.BTB.JOB.CUS.SEQNO,Y.CUSTOMER
        Y.SERIAL.NO = ''
        Y.JOB.NO = ''
        BEGIN CASE
        CASE LEN(Y.CUST.SEQNO) EQ 1
            Y.SERIAL.NO = "0000":Y.CUST.SEQNO
        CASE LEN(Y.CUST.SEQNO) EQ 2
            Y.SERIAL.NO = "000":Y.CUST.SEQNO
        CASE LEN(Y.CUST.SEQNO) EQ 3
            Y.SERIAL.NO = "00":Y.CUST.SEQNO
        CASE LEN(Y.CUST.SEQNO) EQ 4
            Y.SERIAL.NO = "0":Y.CUST.SEQNO
        CASE LEN(Y.CUST.SEQNO) EQ 5
            Y.SERIAL.NO = Y.CUST.SEQNO
        END CASE

        Y.JOB.NO = Y.AD.CODE:".":Y.CUSTOMER:".":Y.SERIAL.NO:".":TODAY[3,2]
        R.NEW(TF.LC.LOCAL.REF)<1,Y.JOB.NO.POS> = Y.JOB.NO
        Y.COUNT = "1"
        R.BTB.JOB.REGISTER<BTB.JOB.CUSTOMER.NO> = R.NEW(TF.LC.BENEFICIARY.CUSTNO)
        R.BTB.JOB.REGISTER<BTB.JOB.JOB.CREATE.DATE> = TODAY
        R.BTB.JOB.REGISTER<BTB.JOB.JOB.CURRENCY> = R.NEW(TF.LC.LOCAL.REF)<1,Y.JOB.CUR.POS>
        IF Y.LC.TYPE EQ "SCNT" THEN
            GOSUB UPDATE.JOB.REGISTER.CONTRACT
        END ELSE
            GOSUB UPDATE.JOB.REGISTER.EXPORTLC
        END
    CASE Y.NEW.EXIST = "EXIST"
        IF Y.JOB.NO EQ "" THEN
            E = "JOB NUMBER MISSING"
            CALL STORE.END.ERROR
            RETURN
        END
        CALL F.READ(FN.BD.BTB.JOB.REGISTER,Y.JOB.NO,R.BTB.JOB.REGISTER,F.BD.BTB.JOB.REGISTER,R.BTB.JOB.REG.ERR)
        IF R.BTB.JOB.REG.ERR THEN
            E = "JOB NUMBER DOES NOT EXIST"
            CALL STORE.END.ERROR
            RETURN
        END
        IF Y.LC.TYPE EQ "SCNT" THEN
            GOSUB GET.VM.COUNT.CONTRACT
            GOSUB UPDATE.JOB.REGISTER.CONTRACT
        END ELSE
            GOSUB GET.VM.COUNT.EXPORTLC
            GOSUB UPDATE.JOB.REGISTER.EXPORTLC
        END

    END CASE
    RETURN

GET.VM.COUNT.EXPORTLC:
*********************
    Y.EX.TF.NO = R.BTB.JOB.REGISTER<BTB.JOB.EX.TF.REF>
    LOCATE ID.NEW IN Y.EX.TF.NO<1,1> SETTING Y.COUNT.POS THEN
        Y.COUNT = Y.COUNT.POS
        R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.ENT.AMT> -=    R.BTB.JOB.REGISTER<BTB.JOB.EX.BTB.ENT.AMT,Y.COUNT>
        R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.AVL.AMT> -=  R.BTB.JOB.REGISTER<BTB.JOB.EX.BTB.ENT.AMT,Y.COUNT>

    END ELSE
        Y.JOB.FOUND = "0"
        Y.COUNT = DCOUNT(Y.EX.TF.NO,@VM) + 1
    END
    RETURN

GET.VM.COUNT.CONTRACT:
*********************
    Y.CONT.TF.NO = R.BTB.JOB.REGISTER<BTB.JOB.CON.TF.REF.NO>
    LOCATE ID.NEW IN Y.CONT.TF.NO<1,1> SETTING Y.COUNT.POS THEN
        Y.COUNT = Y.COUNT.POS
        R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.ENT.AMT> -=    R.BTB.JOB.REGISTER<BTB.JOB.EX.BTB.ENT.AMT,Y.COUNT>
        R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.AVL.AMT> -=  R.BTB.JOB.REGISTER<BTB.JOB.EX.BTB.ENT.AMT,Y.COUNT>
    END ELSE
        Y.JOB.FOUND = "0"
        Y.COUNT = DCOUNT(Y.CONT.TF.NO,@VM) + 1
    END
    RETURN

GET.LOC.REF:
***********
    Y.JOB.NO.POS=''
    Y.JOB.ENT.POS=''
    Y.NEW.EXIST.POS=''
    Y.LC.AMT.LCY.POS = ''
    Y.EXCH.RATE.POS = ''
    CALL GET.LOC.REF("COMPANY","AD.BRANCH.CODE",Y.ADCODE.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","JOB.NUMBER",Y.JOB.NO.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","BTB.CONTRACT.NO",Y.CONT.NO.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","BTB.ENT.RATE",Y.BTB.RATE.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","PC.ENT.RATE",Y.PC.RATE.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","BTB.ENT.AMT",Y.BTB.ENT.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","PC.ENT.AMT",Y.PC.ENT.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","NEW.EXIST.JOBNO",Y.NEW.EXIST.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","NET.FOB.VALUE",Y.FOB.VALUE.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","JOB.ENT.CUR",Y.JOB.CUR.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","JOB.EXCH.RATE",Y.JOB.EXC.RATE.POS)

    RETURN

UPDATE.JOB.REGISTER.EXPORTLC:
****************************
    R.BTB.JOB.REGISTER<BTB.JOB.EX.TF.REF,Y.COUNT> = ID.NEW
    R.BTB.JOB.REGISTER<BTB.JOB.EX.ISSUE.DATE,Y.COUNT> = R.NEW(TF.LC.ISSUE.DATE)
    R.BTB.JOB.REGISTER<BTB.JOB.EX.LC.NUMBER,Y.COUNT> = R.NEW(TF.LC.ISS.BANK.REF)
    R.BTB.JOB.REGISTER<BTB.JOB.EX.LC.CURRENCY,Y.COUNT> = R.NEW(TF.LC.LC.CURRENCY)
    R.BTB.JOB.REGISTER<BTB.JOB.EX.LC.AMOUNT,Y.COUNT> = R.NEW(TF.LC.LC.AMOUNT)
    R.BTB.JOB.REGISTER<BTB.JOB.EX.NET.FOB.VALUE,Y.COUNT> = Y.NET.FOB.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.EX.BTB.ENT.PER,Y.COUNT> = Y.BTB.ENT.PER
    R.BTB.JOB.REGISTER<BTB.JOB.EX.BTB.ENT.AMT,Y.COUNT> = Y.BTB.ENT.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.EX.PC.ENT.PER,Y.COUNT> = Y.PC.ENT.PER
    R.BTB.JOB.REGISTER<BTB.JOB.EX.PC.ENT.AMT,Y.COUNT> = Y.PC.ENT.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.EX.EXPIRY.DATE,Y.COUNT> = R.NEW(TF.LC.ADVICE.EXPIRY.DATE)

    R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.ENT.AMT> += Y.PC.ENT.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AVL.AMT> += Y.PC.ENT.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.ENT.AMT> += Y.BTB.ENT.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.AVL.AMT> += Y.BTB.ENT.AMT

    CALL F.WRITE(FN.BD.BTB.JOB.REGISTER,Y.JOB.NO,R.BTB.JOB.REGISTER)
    RETURN

UPDATE.JOB.REGISTER.CONTRACT:
****************************
    R.BTB.JOB.REGISTER<BTB.JOB.CON.TF.REF.NO,Y.COUNT> = ID.NEW
    R.BTB.JOB.REGISTER<BTB.JOB.CON.CONTACT.NO,Y.COUNT> = R.NEW(TF.LC.LOCAL.REF)<1,Y.CONT.NO.POS>
    R.BTB.JOB.REGISTER<BTB.JOB.CON.CONT.CURR,Y.COUNT> = R.NEW(TF.LC.LC.CURRENCY)
    R.BTB.JOB.REGISTER<BTB.JOB.CON.CONT.AMT,Y.COUNT> = R.NEW(TF.LC.LC.AMOUNT)
    R.BTB.JOB.REGISTER<BTB.JOB.CON.ISSUE.DATE,Y.COUNT> = R.NEW(TF.LC.ISSUE.DATE)
    R.BTB.JOB.REGISTER<BTB.JOB.CON.LC.OR.CONT,Y.COUNT> = "CONTRACT"
    R.BTB.JOB.REGISTER<BTB.JOB.CON.REP.ALLOW,Y.COUNT> = "YES"
    R.BTB.JOB.REGISTER<BTB.JOB.CON.OUTST.AMT,Y.COUNT> = R.NEW(TF.LC.LC.AMOUNT)
    R.BTB.JOB.REGISTER<BTB.JOB.CON.NET.FOB.VALUE,Y.COUNT> = Y.NET.FOB.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.CON.BTB.ENT.PER,Y.COUNT> = Y.BTB.ENT.PER
    R.BTB.JOB.REGISTER<BTB.JOB.CON.BTB.ENT.AMT,Y.COUNT> = Y.BTB.ENT.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.CON.PC.ENT.PER,Y.COUNT> = Y.PC.ENT.PER
    R.BTB.JOB.REGISTER<BTB.JOB.CON.PC.ENT.AMT,Y.COUNT> = Y.PC.ENT.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.CON.EXP.DATE,Y.COUNT> = R.NEW(TF.LC.EXPIRY.DATE)

    R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.ENT.AMT> += Y.PC.ENT.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AVL.AMT> += Y.PC.ENT.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.ENT.AMT> += Y.BTB.ENT.AMT
    R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.AVL.AMT> += Y.BTB.ENT.AMT

    CALL F.WRITE(FN.BD.BTB.JOB.REGISTER,Y.JOB.NO,R.BTB.JOB.REGISTER)
    RETURN
