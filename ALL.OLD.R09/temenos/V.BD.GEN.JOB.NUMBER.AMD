*-----------------------------------------------------------------------------
* <Rating>-62</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE V.BD.GEN.JOB.NUMBER.AMD
*-----------------------------------------------------------------------------------------------
* This is an AUTHORIZATION RTN used for generating Job Number if JOB.NEW.EXIST is "NEW". If JOB.NEW.EXIST
* is "Exist" then existing Job number will be updated accordingly.
* ----------------------------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.BD.BTB.JOB.REGISTER
    $INSERT I_F.BD.BTB.CUS.JOB.SEQNO
    $INSERT I_F.LETTER.OF.CREDIT
    $INSERT I_F.COMPANY

    IF V$FUNCTION EQ "A" THEN
        GOSUB INITIALISE
        GOSUB PROCESS
    END

    RETURN

INITIALISE:

    FN.BD.BTB.JOB.REGISTER = 'F.BD.BTB.JOB.REGISTER'
    F.BD.BTB.JOB.REGISTER = ''
    CALL OPF(FN.BD.BTB.JOB.REGISTER,F.BD.BTB.JOB.REGISTER)

    FN.BD.BTB.JOB.CUS.SEQNO = 'F.BD.BTB.CUS.JOB.SEQNO'
    F.BD.BTB.JOB.CUS.SEQNO = ''
    CALL OPF(FN.BD.BTB.JOB.CUS.SEQNO,F.BD.BTB.JOB.CUS.SEQNO)

    FN.LETTER.OF.CREDIT = "F.LETTER.OF.CREDIT"
    F.LETTER.OF.CREDIT = ""
    CALL OPF(FN.LETTER.OF.CREDIT,F.LETTER.OF.CREDIT)

    Y.LC.ERR = ''

    IF ID.NEW EQ '' THEN
        Y.LC.ID = ID.OLD
    END ELSE
        Y.LC.ID = ID.NEW
    END


    FN.COM = 'F.COMPANY'
    F.COM = ''
    CALL OPF(FN.COM,F.COM)

    RETURN

PROCESS:
    GOSUB GET.LOC.REF
    Y.LC.CURR = R.NEW(TF.LC.LC.CURRENCY)
    Y.JOB.CURR = R.NEW(TF.LC.LOCAL.REF)<1,Y.JOB.CUR.POS>
    Y.JOB.EXC.RATE = R.NEW(TF.LC.LOCAL.REF)<1,Y.JOB.EXC.RATE.POS>

    CALL F.READ(FN.LETTER.OF.CREDIT,Y.LC.ID,R.LEETER.OF.CREDIT,F.LETTER.OF.CREDIT,Y.LC.ERR)
    Y.NEW.EXIST = R.NEW(TF.LC.LOCAL.REF)<1,Y.NEW.EXIST.POS>
    Y.JOB.NO = R.NEW(TF.LC.LOCAL.REF)<1,Y.JOB.NO.POS>
    Y.OLD.LC.AMT = R.OLD(TF.LC.LC.AMOUNT)
    Y.NEW.LC.AMT = R.NEW(TF.LC.LC.AMOUNT)
    Y.OLD.FOB.VALUE = R.OLD(TF.LC.LOCAL.REF)<1,Y.FOB.VALUE.POS>
    Y.NEW.FOB.VALUE = R.NEW(TF.LC.LOCAL.REF)<1,Y.FOB.VALUE.POS>

    Y.OLD.BTB.ENT.VALUE = R.OLD(TF.LC.LOCAL.REF)<1,Y.BTB.ENT.POS>
    Y.OLD.PC.ENT.VALUE = R.OLD(TF.LC.LOCAL.REF)<1,Y.PC.ENT.POS>
    Y.NEW.BTB.ENT.VALUE = R.NEW(TF.LC.LOCAL.REF)<1,Y.BTB.ENT.POS>
    Y.NEW.PC.ENT.VALUE = R.NEW(TF.LC.LOCAL.REF)<1,Y.PC.ENT.POS>

    IF Y.JOB.CURR NE Y.LC.CURR THEN
        Y.CCY.MKT = '1'
        Y.CCY.BUY = Y.LC.CURR
        Y.BUY.AMT = R.NEW(TF.LC.LOCAL.REF)<1,Y.FOB.VALUE.POS>
        Y.CCY.SELL = Y.JOB.CURR
        Y.SELL.AMT = ''
        Y.BASE.CCY = ''
        Y.EXCHANGE.RATE = Y.JOB.EXC.RATE
        Y.DIFFERENCE = ''
        Y.LCY.AMT = ''
        Y.RETURN.CODE = ''
        CALL EXCHRATE(Y.CCY.MKT,Y.CCY.BUY,Y.BUY.AMT,Y.CCY.SELL,Y.SELL.AMT,Y.BASE.CCY,Y.EXCHANGE.RATE,Y.DIFFERENCE,Y.LCY.AMT,Y.RETURN.CODE)
    END
    IF Y.NEW.LC.AMT GT Y.OLD.LC.AMT THEN
        Y.INC.LC.AMT = Y.NEW.LC.AMT - Y.OLD.LC.AMT
    END
    IF Y.NEW.BTB.ENT.VALUE GT Y.OLD.BTB.ENT.VALUE THEN
        Y.INC.BTB.VALUE = Y.NEW.BTB.ENT.VALUE - Y.OLD.BTB.ENT.VALUE
    END
    IF Y.NEW.PC.ENT.VALUE GT Y.OLD.PC.ENT.VALUE THEN
        Y.INC.PC.VALUE = Y.NEW.PC.ENT.VALUE - Y.OLD.PC.ENT.VALUE
    END
    Y.NEW.FOB.VALUE = R.NEW(TF.LC.LOCAL.REF)<1,Y.FOB.VALUE.POS>

    IF Y.JOB.CURR NE Y.LC.CURR THEN
        Y.BUY.AMT = Y.NEW.FOB.VALUE
        GOSUB EXCH.JOB.AMT
        Y.NEW.FOB.VALUE = Y.SELL.AMT
        Y.SELL.AMT = ''
        Y.BUY.AMT = ''

        Y.BUY.AMT = Y.INC.BTB.VALUE
        GOSUB EXCH.JOB.AMT
        Y.INC.BTB.VALUE = Y.SELL.AMT
        Y.SELL.AMT = ''
        Y.BUY.AMT = ''

        Y.BUY.AMT = Y.INC.PC.VALUE
        GOSUB EXCH.JOB.AMT
        Y.INC.PC.VALUE = Y.SELL.AMT
        Y.SELL.AMT = ''
        Y.BUY.AMT = ''
    END

    CALL F.READ(FN.BD.BTB.JOB.REGISTER,Y.JOB.NO,R.BTB.JOB.REGISTER,F.BD.BTB.JOB.REGISTER,R.BTB.JOB.REG.ERR)

    IF Y.JOB.NO EQ "" THEN
        E = "JOB NUMBER MISSING"
        CALL STORE.END.ERROR
        RETURN
    END
    IF NOT(R.BTB.JOB.REGISTER) THEN
        E = "JOB NUMBER DOES NOT EXIST"
        CALL STORE.END.ERROR
        RETURN
    END
!IF R.NEW(TF.LC.ADVICE.EXPIRY.DATE) GT R.BTB.JOB.REGISTER<BTB.JOB.JOB.EXPIRY.DATE> THEN
!    R.BTB.JOB.REGISTER<BTB.JOB.JOB.EXPIRY.DATE> = R.NEW(TF.LC.ADVICE.EXPIRY.DATE)
!END
    GOSUB GET.VM.COUNT

    RETURN

GET.VM.COUNT:
    Y.EX.TF.NO = R.BTB.JOB.REGISTER<BTB.JOB.EX.TF.REF>
    LOCATE ID.NEW IN Y.EX.TF.NO<1,1> SETTING Y.COUNT.POS THEN
        Y.COUNT = Y.COUNT.POS
        GOSUB UPDATE.JOB.REGISTER
    END

    RETURN

GET.LOC.REF:

    Y.JOB.NO.POS=''
    Y.JOB.ENT.POS=''
    Y.NEW.EXIST.POS=''
    Y.LC.AMT.LCY.POS = ''
    Y.EXCH.RATE.POS = ''

    CALL GET.LOC.REF("COMPANY","AD.BRANCH.CODE",Y.ADCODE.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","JOB.NUMBER",Y.JOB.NO.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","BTB.ENT.RATE",Y.BTB.RATE.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","PC.ENT.RATE",Y.PC.RATE.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","BTB.ENT.AMT",Y.BTB.ENT.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","PC.ENT.AMT",Y.PC.ENT.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","NEW.EXIST.JOBNO",Y.NEW.EXIST.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","NET.FOB.VALUE",Y.FOB.VALUE.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","JOB.ENT.CUR",Y.JOB.CUR.POS)
    CALL GET.LOC.REF("LETTER.OF.CREDIT","JOB.EXCH.RATE",Y.JOB.EXC.RATE.POS)

    RETURN

UPDATE.JOB.REGISTER:
    IF R.NEW(TF.LC.LC.AMOUNT) GT R.BTB.JOB.REGISTER<BTB.JOB.EX.LC.AMOUNT,Y.COUNT> THEN
        R.BTB.JOB.REGISTER<BTB.JOB.EX.LC.AMOUNT,Y.COUNT> = R.NEW(TF.LC.LC.AMOUNT)
    END
    IF R.NEW(TF.LC.LOCAL.REF)<1,Y.FOB.VALUE.POS> GT R.BTB.JOB.REGISTER<BTB.JOB.EX.NET.FOB.VALUE,Y.COUNT> THEN
        R.BTB.JOB.REGISTER<BTB.JOB.EX.NET.FOB.VALUE,Y.COUNT> = R.NEW(TF.LC.LOCAL.REF)<1,Y.FOB.VALUE.POS>
    END
    IF R.NEW(TF.LC.LOCAL.REF)<1,Y.BTB.RATE.POS> GT R.BTB.JOB.REGISTER<BTB.JOB.EX.BTB.ENT.PER,Y.COUNT> THEN
        R.BTB.JOB.REGISTER<BTB.JOB.EX.BTB.ENT.PER,Y.COUNT> = R.NEW(TF.LC.LOCAL.REF)<1,Y.BTB.RATE.POS>
    END
    IF R.NEW(TF.LC.LOCAL.REF)<1,Y.BTB.ENT.POS> GT R.BTB.JOB.REGISTER<BTB.JOB.EX.BTB.ENT.AMT,Y.COUNT> THEN
        R.BTB.JOB.REGISTER<BTB.JOB.EX.BTB.ENT.AMT,Y.COUNT> = R.NEW(TF.LC.LOCAL.REF)<1,Y.BTB.ENT.POS>
    END
    IF R.NEW(TF.LC.LOCAL.REF)<1,Y.PC.RATE.POS> GT R.BTB.JOB.REGISTER<BTB.JOB.EX.PC.ENT.PER,Y.COUNT> THEN
        R.BTB.JOB.REGISTER<BTB.JOB.EX.PC.ENT.PER,Y.COUNT> = R.NEW(TF.LC.LOCAL.REF)<1,Y.PC.RATE.POS>
    END
    IF R.NEW(TF.LC.LOCAL.REF)<1,Y.PC.ENT.POS> GT R.BTB.JOB.REGISTER<BTB.JOB.EX.PC.ENT.AMT,Y.COUNT> THEN
        R.BTB.JOB.REGISTER<BTB.JOB.EX.PC.ENT.AMT,Y.COUNT> = R.NEW(TF.LC.LOCAL.REF)<1,Y.PC.ENT.POS>
    END
    IF R.NEW(TF.LC.ADVICE.EXPIRY.DATE) GT R.BTB.JOB.REGISTER<BTB.JOB.EX.EXPIRY.DATE,Y.COUNT> THEN
        R.BTB.JOB.REGISTER<BTB.JOB.EX.EXPIRY.DATE,Y.COUNT> = R.NEW(TF.LC.ADVICE.EXPIRY.DATE)
    END
    IF Y.INC.BTB.VALUE THEN
        R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.ENT.AMT> += Y.INC.BTB.VALUE
        R.BTB.JOB.REGISTER<BTB.JOB.TOT.BTB.AVL.AMT> += Y.INC.BTB.VALUE
    END
    IF Y.INC.PC.VALUE THEN
        R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.ENT.AMT> += Y.INC.PC.VALUE
        R.BTB.JOB.REGISTER<BTB.JOB.TOT.PC.AVL.AMT> += Y.INC.PC.VALUE
    END
    CALL F.WRITE(FN.BD.BTB.JOB.REGISTER,Y.JOB.NO,R.BTB.JOB.REGISTER)
    RETURN

EXCH.JOB.AMT:
    Y.CCY.MKT = '1'
    Y.CCY.BUY = Y.LC.CURR
    Y.CCY.SELL = Y.JOB.CURR
    Y.SELL.AMT = ''
    Y.BASE.CCY = ''
    Y.EXCHANGE.RATE = Y.JOB.EXC.RATE
    Y.DIFFERENCE = ''
    Y.LCY.AMT = ''
    Y.RETURN.CODE = ''
    CALL EXCHRATE(Y.CCY.MKT,Y.CCY.BUY,Y.BUY.AMT,Y.CCY.SELL,Y.SELL.AMT,Y.BASE.CCY,Y.EXCHANGE.RATE,Y.DIFFERENCE,Y.LCY.AMT,Y.RETURN.CODE)
    Y.BUY.AMT = ''
    RETURN
END
