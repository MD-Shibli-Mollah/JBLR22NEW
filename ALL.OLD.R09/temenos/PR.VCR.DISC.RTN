*-----------------------------------------------------------------------------
* <Rating>641</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE PR.VCR.DISC.RTN
*---------------------------------------------------
*displays the advise ref no when the record opend
*--------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.DRAWINGS
    $INSERT I_F.INTERCO.PARAMETER
    $INSERT I_F.COMPANY
    $INSERT I_F.PR.H.ADCODES
    $INSERT I_F.LETTER.OF.CREDIT
    $INSERT I_F.PR.T.BRFDBC.SEQ.NO

    GOSUB INITIALISE
    GOSUB OPENFILES
    GOSUB CHECK.REFNO

    RETURN

INITIALISE:

    FN.LETTER.OF.CREDIT="F.DRAWINGS"
    F.LETTER.OF.CREDIT=""
    FN.PR.T.BRLOC.SEQ.NO="F.PR.T.BRFDBC.SEQ.NO"
    F.PR.T.BRLOC.SEQ.NO=""
    FN.DRAWINGS="F.DRAWINGS"
    F.DRAWINGS=""
    FN.PR.H.ADCODES="F.PR.H.ADCODES"
    F.PR.H.ADCODES=""
    FN.LC="F.LETTER.OF.CREDIT"
    F.LC=""
    CALL OPF(FN.PR.H.ADCODES,F.PR.H.ADCODES)
    RETURN

OPENFILES:

    CALL OPF(FN.DRAWINGS,F.DRAWINGS)
    CALL OPF(FN.PR.T.BRLOC.SEQ.NO,F.PR.T.BRLOC.SEQ.NO)
    RETURN

CHECK.REFNO:

    Y.ID = ID.NEW
    Y.ID1=ID.NEW[1,12]
    CALL OPF(FN.LC,F.LC)
    CALL F.READ(FN.LC,Y.ID1,R.LETTER.OF.CREDIT,F.LC,Y.ERR)
    CALL GET.LOC.REF("DRAWINGS","DISC.DOC.SL.NO",Y.IDBC.POS)
*gets the branch code

    IF R.NEW.LAST(TF.DR.LOCAL.REF)<1,Y.IDBC.POS> EQ '' AND  R.OLD(TF.DR.LOCAL.REF)<1,Y.IDBC.POS> EQ '' AND V$FUNCTION EQ "I" OR V$FUNCTION EQ "C" THEN
        Y.MNEMONIC=R.COMPANY(EB.COM.MNEMONIC)
        Y.FIN.MNEMONIC=R.INTERCO.PARAMETER<ST.ICP.FIN.MNEMONIC>
        Y.BRANCH.CODE1=R.INTERCO.PARAMETER<ST.ICP.BRANCH.CODE>
        CONVERT SM TO VM IN Y.BRANCH.CODE1

        Y.BRANCH.CODE=R.COMPANY(EB.COM.SUB.DIVISION.CODE)
        CALL F.READ(FN.PR.H.ADCODES,Y.BRANCH.CODE,R.PR.H.ADCODES,F.PR.H.ADCODES,Y.ERR)
        Y.ADCODE=R.PR.H.ADCODES<AD.ADCODE>

        IF Y.BRANCH.CODE EQ '' THEN
            ETEXT = "BRANCH CODE NOT PRESENT"
        END ELSE
            Y.ADVICE="DISC"
            Y.DATE1=TODAY[3,2]
            Y.DATE=Y.MNEMONIC:APPLICATION:PGM.VERSION:".":TODAY[3,2]
!            CALL F.READ(FN.PR.T.BRCODE.SEQ.NO,Y.ADCODE,R.PR.T.BRCODE.SEQ.NO,F.PR.T.BRCODE.SEQ.NO,Y.ERR)

!Changes Starts here
            OPEN 'F.LOCKING' TO F.LOCKING ELSE F.LOCKING=''
READ.ID:
            READ.ERR  =  ''
!     CALL F.READ(FN.PR.T.BRCODE.SEQ.NO,Y.ADCODE,R.PR.T.BRCODE.SEQ.NO,F.PR.T.BRCODE.SEQ.NO,Y.ERR)
            READU R.PR.T.BRLOC.SEQ.NO FROM F.LOCKING,Y.DATE LOCKED
                SLEEP 10
                GOTO READ.ID
            END THEN NULL
            R.PR.T.BRLOC.SEQ.NO<1>+=1
            IF R.PR.T.BRLOC.SEQ.NO<1> = 9999 THEN R.PR.T.BRLOC.SEQ.NO<1>=1
            Y.SERIAL.NO1 = R.PR.T.BRLOC.SEQ.NO<1>+0
            Y.SERIAL.NO1=FMT(Y.SERIAL.NO1,'R%4')
            CALL  F.RELEASE("F.LOCKING",  Y.DATE,  F.LOCKING)
            CALL  F.WRITE("F.LOCKING",  Y.DATE,  R.PR.T.BRCODE.SEQ.NO)
            WRITE R.PR.T.BRLOC.SEQ.NO TO F.LOCKING,Y.DATE ON ERROR NULL
*generates the serial number

*CHECKS THE LENGTH OF SERIAL NUMBE

            BEGIN CASE
            CASE LEN(Y.SERIAL.NO1) EQ 1
                Y.SERIAL.NO="000":Y.SERIAL.NO1
            CASE LEN(Y.SERIAL.NO1) EQ 2
                Y.SERIAL.NO="00":Y.SERIAL.NO1
            CASE LEN(Y.SERIAL.NO1) EQ 3
                Y.SERIAL.NO="0":Y.SERIAL.NO1
            CASE LEN(Y.SERIAL.NO1) EQ 4
                Y.SERIAL.NO=Y.SERIAL.NO1
            END CASE

*updates the concat file
            CALL CONCAT.FILE.UPDATE(FN.PR.T.BRLOC.SEQ.NO,Y.DATE,Y.SERIAL.NO,"I","AL")

            CALL F.RELEASE(FN.PR.T.BRLOC.SEQ.NO,Y.DATE,F.PR.T.BRLOC.SEQ.NO)
            R.NEW(TF.DR.LOCAL.REF)<1,Y.IDBC.POS>= Y.ADCODE:"/":Y.ADVICE:"/":Y.SERIAL.NO:"/":Y.DATE1
            CALL GET.LOC.REF("DRAWINGS","EXPORTER.NAME",Y.EXP.POS)
            CALL GET.LOC.REF("DRAWINGS","IMPORTER.NAME",Y.IMP.POS)
            CALL GET.LOC.REF("DRAWINGS","LC.NO",Y.LC.POS)
            CALL GET.LOC.REF("DRAWINGS","LC.DATE",Y.DATE.POS)
            CALL GET.LOC.REF("DRAWINGS","EXPORT.LC.VALUE",Y.VAL.POS)
!CALL GET.LOC.REF("LETTER.OF.CREDIT","ADVISE.REF.NO",Y.ADV.POS)

            CALL GET.LOC.REF("LETTER.OF.CREDIT","JOB.NO",Y.JOB.POS)
            CALL GET.LOC.REF("DRAWINGS","JOB.NO",D.JOB.POS)

            CALL GET.LOC.REF("DRAWINGS","DISC.DOC.LGD.DT",Y.DISC.DATE)
            Y.EXPORTER=R.LETTER.OF.CREDIT<TF.LC.BENEFICIARY>
            Y.IMPORTER=R.LETTER.OF.CREDIT<TF.LC.APPLICANT>
            R.NEW(TF.DR.LOCAL.REF)<1,Y.EXP.POS>=EREPLACE(Y.EXPORTER,VM,SM)
            R.NEW(TF.DR.LOCAL.REF)<1,Y.IMP.POS>=EREPLACE(Y.IMPORTER,VM,SM)
!R.NEW(TF.DR.LOCAL.REF)<1,Y.LC.POS> = R.LETTER.OF.CREDIT<TF.LC.LOCAL.REF,Y.ADV.POS>
            R.NEW(TF.DR.LOCAL.REF)<1,Y.LC.POS> = R.LETTER.OF.CREDIT<TF.LC.OLD.LC.NUMBER>
            R.NEW(TF.DR.LOCAL.REF)<1,Y.DATE.POS> = R.LETTER.OF.CREDIT<TF.LC.ISSUE.DATE>
            R.NEW(TF.DR.LOCAL.REF)<1,Y.VAL.POS> = R.LETTER.OF.CREDIT<TF.LC.LC.AMOUNT>

            R.NEW(TF.DR.LOCAL.REF)<1,D.JOB.POS> = R.LETTER.OF.CREDIT<TF.LC.LOCAL.REF><1,Y.JOB.POS>

            R.NEW(TF.DR.LOCAL.REF)<1,Y.DISC.DATE>=TODAY

        END
    END
********BTB.CONTRACT ID FORMATION***********************

    RETURN
END
