*-----------------------------------------------------------------------------
* <Rating>10</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE V.JBL.LIMIT.CHECK

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.CURRENCY
    $INSERT I_F.FOREX
    $INSERT I_F.MM.MONEY.MARKET
    $INSERT I_F.OVE.DEALING.LIMIT
    $INSERT I_F.INDIV.DEALER.LIMIT

    IF V$FUNCTION NE "I" THEN RETURN
    GOSUB INITIALISE
    GOSUB PROCESS
    GOSUB UPDATE.LIMIT

    RETURN

INITIALISE:


    FN.OVE.DEALING.LIMIT = 'F.EB.OVE.DEALING.LIMIT'
    F.OVE.DEALING.LIMIT = ''
    CALL OPF(FN.OVE.DEALING.LIMIT,F.OVE.DEALING.LIMIT)

    FN.OVE.DEALING.LIMIT.HIS = 'F.EB.OVE.DEALING.LIMIT$HIS'
    F.OVE.DEALING.LIMIT.HIS = ''
    CALL OPF(FN.OVE.DEALING.LIMIT.HIS,F.OVE.DEALING.LIMIT.HIS)

    FN.INDIV.DEALER.LIMIT = 'F.EB.INDIV.DEALER.LIMIT'
    F.INDIV.DEALER.LIMIT = ''
    CALL OPF(FN.INDIV.DEALER.LIMIT,F.INDIV.DEALER.LIMIT)

    FN.INDIV.DEALER.LIMIT.HIS = 'F.EB.INDIV.DEALER.LIMIT$HIS'
    F.INDIV.DEALER.LIMIT.HIS = ''
    CALL OPF(FN.INDIV.DEALER.LIMIT.HIS,F.INDIV.DEALER.LIMIT.HIS)

    RETURN

PROCESS:

    IF APPLICATION EQ "FOREX" THEN
        GOSUB FX.PROCESS
    END ELSE
        GOSUB MM.PROCESS
    END
    GOSUB CHECK.INDIV.DEALER.LIMIT
    GOSUB CHECK.OVERALL.LIMIT
    RETURN

CHECK.INDIV.DEALER.LIMIT:

    CALL F.READ(FN.INDIV.DEALER.LIMIT,V.DEALER.NO,R.INDIV.DEALER.LIMIT,F.INDIV.DEALER.LIMIT,R.IND.ERR)
    R.INDIV.DEALER.LIMIT.HIS = R.INDIV.DEALER.LIMIT
    LOCATE V.BUY.CCY IN R.INDIV.DEALER.LIMIT<EB.IND48.PER.DEAL.LI.CCY,1> SETTING CCY.POS THEN
        V.PER.DEAL.AMT = R.INDIV.DEALER.LIMIT<EB.IND48.PER.DEAL.LI.AMT,CCY.POS>
    END ELSE
        ETEXT = "EB-PER.DEAL.LIMIT.NT.SET"
        CALL STORE.END.ERROR
        RETURN
    END

    IF V.BUY.AMT > V.PER.DEAL.AMT THEN
        TEXT = "EB-BUY.AMT.EXCEEDS.PER.DEAL"
        CALL STORE.OVERRIDE("1")
    END

    V.PER.DAY.CCY =    R.INDIV.DEALER.LIMIT<EB.IND48.PER.DAY.LIMIT.CCY>
    V.PER.DAY.AVAIL.AMT = R.INDIV.DEALER.LIMIT<EB.IND48.PER.DAY.AVAIL.AMT>
    V.PER.DAY.LI.AMT = R.INDIV.DEALER.LIMIT<EB.IND48.PER.DAY.LIMIT.AMT>

    V.DEAL.AMT = V.BUY.AMT
    IF V.BUY.CCY <> V.PER.DAY.CCY THEN
        BASE.CCY = V.PER.DAY.CCY
        V.LIMIT.CCY = V.PER.DAY.CCY
        GOSUB CALC.RATE
    END

    IF V.DEAL.AMT > V.PER.DAY.AVAIL.AMT THEN
        TEXT = "EB-BUY.AMT.EXCEEDS.PER.DAY"
        CALL STORE.OVERRIDE("1")
    END

    R.INDIV.DEALER.LIMIT<EB.IND48.PER.DAY.AVAIL.AMT> -= V.DEAL.AMT
    R.INDIV.DEALER.LIMIT<EB.IND48.PER.DAY.UTIL.AMT> +=  V.DEAL.AMT
    RETURN

CHECK.OVERALL.LIMIT:

    V.DEALING.ROOM = FIELD(V.DEALER.NO,'-',1)
    CALL F.READ(FN.OVE.DEALING.LIMIT,V.DEALING.ROOM,R.OVE.DEALING.LIMIT,F.OVE.DEALING.LIMIT,R.OVE.ERROR)
    R.OVE.DEALING.LIMIT.HIS = R.OVE.DEALING.LIMIT
    V.OVE.LI.CCY = R.OVE.DEALING.LIMIT<EB.OVE45.OVE.LIMIT.CCY.ID>
    V.OVE.AVAIL.AMT = R.OVE.DEALING.LIMIT<EB.OVE45.OVE.AVAIL.AMOUNT>
    V.OVE.LCY.AVAIL.AMT = R.OVE.DEALING.LIMIT<EB.OVE45.LCY.AVAIL.AMOUNT>

    BEGIN CASE
    CASE V.BUY.CCY = LCCY
        IF V.BUY.AMT > V.OVE.LCY.AVAIL.AMT THEN
            TEXT = "EB-BUY.AMT.EXCEEDS.OVE.LIMIT"
            CALL STORE.OVERRIDE("1")
        END
        R.OVE.DEALING.LIMIT<EB.OVE45.LCY.AVAIL.AMOUNT>  -= V.BUY.AMT
        R.OVE.DEALING.LIMIT<EB.OVE45.LCY.UTIL.AMOUNT> += V.BUY.AMT

    CASE V.BUY.CCY NE LCCY AND V.BUY.CCY NE V.OVE.LI.CCY
        V.LIMIT.CCY = V.OVE.LI.CCY
        BASE.CCY = V.OVE.LI.CCY
        V.DEAL.AMT = V.BUY.AMT
        GOSUB CALC.RATE
        IF V.DEAL.AMT > V.OVE.AVAIL.AMT THEN
            TEXT = "EB-BUY.AMT.EXCEEDS.OVE.LIMIT"
            CALL STORE.OVERRIDE("1")
        END
        R.OVE.DEALING.LIMIT<EB.OVE45.OVE.AVAIL.AMOUNT> -= V.DEAL.AMT
        R.OVE.DEALING.LIMIT<EB.OVE45.OVE.UTIL.AMOUNT> += V.DEAL.AMT

    CASE V.BUY.CCY EQ V.OVE.LI.CCY

        IF V.BUY.AMT > V.OVE.AVAIL.AMT THEN
            TEXT = "EB-BUY.AMT.EXCEEDS.OVE.LIMIT"
            CALL STORE.OVERRIDE("1")
        END
        R.OVE.DEALING.LIMIT<EB.OVE45.OVE.AVAIL.AMOUNT> -= V.BUY.AMT
        R.OVE.DEALING.LIMIT<EB.OVE45.OVE.UTIL.AMOUNT> += V.BUY.AMT

    END CASE

    RETURN

FX.PROCESS:

    V.BUY.CCY = R.NEW(FX.CURRENCY.BOUGHT)
    V.NEW.BUY.AMT = R.NEW(FX.AMOUNT.BOUGHT)
    V.OLD.BUY.AMT = R.NEW.LAST(FX.AMOUNT.BOUGHT)

    BEGIN CASE
    CASE V.OLD.BUY.AMT = ''
        V.BUY.AMT = V.NEW.BUY.AMT

    CASE V.OLD.BUY.AMT = V.NEW.BUY.AMT
        V.BUY.AMT  = V.NEW.BUY.AMT

    CASE V.OLD.BUY.AMT <> V.NEW.BUY.AMT
        V.BUY.AMT = V.NEW.BUY.AMT - V.OLD.BUY.AMT

    END CASE

    APPL = "FOREX"
    GOSUB GET.LOC.REF
    V.DEALER.NO = R.NEW(FX.LOCAL.REF)<1,FLD.POS>
    RETURN

MM.PROCESS:

    V.BUY.CCY = R.NEW(MM.CURRENCY)
    V.BUY.AMT = R.NEW(MM.PRINCIPAL)

    FLD.ARRAY  = "DEALER.NO"
    FLD.POS = ''
    APPL = "MM.MONEY.MARKET"
    GOSUB GET.LOC.REF
    V.DEALER.NO = R.NEW(MM.LOCAL.REF)<1,FLD.POS>
    RETURN

GET.LOC.REF:

    FLD.ARRAY = "DEALER.NO"
    FLD.POS = ''
    CALL GET.LOC.REF(APPL,FLD.ARRAY,FLD.POS)

    RETURN

CALC.RATE:

    EXCH.RATE = ''
    V.DEAL.AMT = ''
    CALL EXCHRATE("1",V.BUY.CCY,V.BUY.AMT,V.LIMIT.CCY,V.DEAL.AMT,BASE.CCY,EXCH.RATE,DIFFERENCE,LCY.AMT,RETURN.CODE)

    RETURN

UPDATE.LIMIT:


    R.INDIV.DEALER.LIMIT<EB.IND48.CURR.NO> += 1
    CALL F.WRITE(FN.INDIV.DEALER.LIMIT,V.DEALER.NO,R.INDIV.DEALER.LIMIT)

    V.DEALER.NO.HIS = V.DEALER.NO:';':R.INDIV.DEALER.LIMIT.HIS<EB.IND48.CURR.NO>
    CALL F.WRITE(FN.INDIV.DEALER.LIMIT.HIS,V.DEALER.NO.HIS,R.INDIV.DEALER.LIMIT.HIS)

    R.OVE.DEALING.LIMIT<EB.OVE45.CURR.NO> += 1
    CALL F.WRITE(FN.OVE.DEALING.LIMIT,V.DEALING.ROOM,R.OVE.DEALING.LIMIT)

    V.DEALING.ROOM.HIS = V.DEALING.ROOM:';':R.OVE.DEALING.LIMIT.HIS<EB.OVE45.CURR.NO>
    CALL F.WRITE(FN.OVE.DEALING.LIMIT.HIS,V.DEALING.ROOM.HIS,R.OVE.DEALING.LIMIT.HIS)

    RETURN
