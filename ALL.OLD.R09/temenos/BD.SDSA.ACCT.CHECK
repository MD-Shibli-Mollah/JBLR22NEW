    SUBROUTINE BD.SDSA.ACCT.CHECK

    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT GLOBUS.BP I_F.FUNDS.TRANSFER
    $INSERT GLOBUS.BP I_F.CATEGORY
    $INSERT GLOBUS.BP I_F.TELLER

    GOSUB INITIALIZE
    GOSUB OPENFILE
    GOSUB PROCESS

INITIALIZE:
    FN.ACC = 'FBNK.ACCOUNT'
    F.ACC = ''
    FN.CAT = 'F.CATEGORY'
    F.CAT = ''
    CALL GET.LOC.REF("TELLER","A.L",Y.TT.AL.POS)
    CALL GET.LOC.REF("FUNDS.TRANSFER","A.L",Y.FT.AL.POS)
    CALL GET.LOC.REF("CATEGORY","A.L",Y.CAT.AL.POS)
    RETURN

OPENFILE:
    CALL OPF(FN.ACC,F.ACC)
    CALL OPF(FN.CAT,F.CAT)

    RETURN

PROCESS:
!DEBUG
    Y.ACC = COMI
    IF APPLICATION NE 'TELLER' THEN
        IF LEFT(Y.ACC,2) EQ 'PL' THEN
            RETURN
        END

    END
    CALL F.READ(FN.ACC, Y.ACC, R.ACC, F.ACC, ERR.ACC)
    IF R.ACC<AC.CO.CODE> NE ID.COMPANY THEN
        ETEXT = "This account doesn't belongs to this company"
        CALL STORE.END.ERROR
!        AF = R.NEW(FT.DEBIT.ACCT.NO)
    END
!ELSE

    IF APPLICATION EQ 'TELLER' THEN
        Y.AC.CAT = Y.ACC[4,5]
        CALL F.READ(FN.CAT,Y.AC.CAT,R.FT.REC,F.CAT,Y.FT.ERR)
!IF APPLICATION EQ 'TELLER' THEN
        R.NEW(TT.TE.LOCAL.REF)<1,Y.TT.AL.POS>= R.FT.REC<EB.CAT.LOCAL.REF,Y.CAT.AL.POS>
    END
!ELSE
! R.NEW(FT.LOCAL.REF)<1,Y.FT.AL.POS>= R.FT.REC<EB.CAT.LOCAL.REF,Y.CAT.AL.POS>
! END
!END



    RETURN

END
