*-----------------------------------------------------------------------------
* <Rating>157</Rating>
*-----------------------------------------------------------------------------
******************************************************************************************
*Developed By: Md.Zakir Hossain(Janata Bank Limited)                                        *
*This routine is attachted to the version 'FUNDS.TRANSFER,RTGS.OUTW.TXN' as a            *
*BEFORE.AUTH.RTN and generate outward Pacs008 message                                    *
*Date:n/a                                                                         *
******************************************************************************************

    SUBROUTINE JBL.RTGS.OUT.TXN.AUTH
!PROGRAM JBL.RTGS.OUT.TXN.AUTH
    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_ENQUIRY.COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT GLOBUS.BP I_F.FUNDS.TRANSFER
    $INSERT GLOBUS.BP I_F.CATEGORY
    $INSERT GLOBUS.BP I_F.CUSTOMER
    $INSERT JBL.BP I_F.BD.RTGS.SERIAL.NUM
    $INSERT JBL.BP I_F.BD.BANK.ROUTING.LIST
    $INSERT JBL.BP I_F.BD.RTGS.PARAM
    $INSERT JBL.BP I_F.DISPO.PARAM

    FN.DISPO="F.EB.DISPO.PARAM"
    F.DISPO = ''
    CALL OPF(FN.DISPO,F.DISPO)

    CALL F.READ(FN.DISPO, 'SYSTEM' , R.DISPO , F.DISPO , Y.ERR)
    Y.ALL.BR.CODE = R.DISPO<EB.DIS26.BRANCH.CODE>
    FINDSTR ID.COMPANY IN Y.ALL.BR.CODE SETTING BR.F.POS,BR.V.POS,BR.S.POS THEN
        Y.DISPO.APROV.AMT = R.DISPO<EB.DIS26.OVERR.AMT,BR.V.POS>
        Y.TXN.AMT = R.NEW(FT.DEBIT.AMOUNT)
        IF Y.TXN.AMT EQ '' THEN
            Y.TXN.AMT = R.NEW(FT.CREDIT.AMOUNT)
        END
********************* DISPO CHECKING ******************
        IF Y.TXN.AMT GT Y.DISPO.APROV.AMT THEN
            IF R.NEW(FT.RECORD.STATUS) EQ 'INAO' THEN
                GOSUB INIT
                GOSUB OPENFILES
                GOSUB PROCESS
            END
******************* END DISPO CHECKING *****************
        END
        ELSE
*********************** NORMAL TRANSACTION *******************
            GOSUB INIT
            GOSUB OPENFILES
            GOSUB PROCESS
*********************** END NORMAL TRANSACTION ***************
        END
    END
    RETURN

INIT:

    FN.ACC = 'F.ACCOUNT';                        F.ACC = ''
    FN.FT = 'F.FUNDS.TRANSFER';                  F.FT = ''
    FN.CATEFORY = 'F.CATEGORY';                  F.CATEGORY = ''
    FN.RTGS.SLN = 'F.EB.BD.RTGS.SERIAL.NUM';     F.RTGS.SLN = ''
    FN.RL = 'F.EB.BD.BANK.ROUTING.LIST';         F.RL = ''
    FN.RTGS.PARAM = 'F.EB.BD.RTGS.PARAM';        F.RTGS.PARAM = ''

    FN.CUSTOMER = 'FBNK.CUSTOMER'
    F.CUSTOMER = ''
    R.CUSTOMER = ''

    CALL GET.LOC.REF('FUNDS.TRANSFER','BICC.CODE',BICC.CODE.POS)
    CALL GET.LOC.REF('FUNDS.TRANSFER','BRANCH',BRANCH.POS)
    CALL GET.LOC.REF('FUNDS.TRANSFER','ACCT.NO',ACCT.NO.POS)
    CALL GET.LOC.REF('FUNDS.TRANSFER','REMARKS',REMARKS.POS)
    CALL GET.LOC.REF('FUNDS.TRANSFER','BENEFI.NAME',BENEFI.NAME.POS)

    CALL GET.LOC.REF('FUNDS.TRANSFER','L.CUSTOM.OFF.CO',L.CUSTOM.OFF.CO.POS)
    CALL GET.LOC.REF('FUNDS.TRANSFER','L.CUSTOM.REG.NO',L.CUSTOM.REG.NO.POS)
    CALL GET.LOC.REF('FUNDS.TRANSFER','L.DECL.CODE',L.DECL.CODE.POS)

********Start Reg. year and  importer mobile no.*****************************
    CALL GET.LOC.REF('FUNDS.TRANSFER','L.CUS.REG.YEAR',L.CUSTOM.REG.YEAR.POS)
    CALL GET.LOC.REF('FUNDS.TRANSFER','L.IMPORTER.MOB',L.IMPORTER.MOB.POS)
***************************End*************************************
    RETURN

OPENFILES:
    CALL OPF(FN.ACC,F.ACC)
    CALL OPF(FN.FT,F.FT)
    CALL OPF(FN.CATEFORY,F.CATEGORY)
    CALL OPF(FN.RTGS.SLN,F.RTGS.SLN)
    CALL OPF(FN.RL,F.RL)
    CALL OPF(FN.RTGS.PARAM,F.RTGS.PARAM)
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)


    CALL F.READ(FN.RTGS.PARAM,'SYSTEM',REC.PARAM,F.RTGS.PARAM,ERR.RTGS.PARAM)

!Y.OUT.REQ.FILE.NAME ='OP8D20190521':ID.NEW:EREPLACE(OCONV(TIME(), "MTS"),":",''):'.csv'
    Y.OUT.REQ.FILE.NAME ='OP8D':TODAY:ID.NEW:EREPLACE(OCONV(TIME(), "MTS"),":",''):'.csv'

    Y.OUT.REQUEST.DIR = REC.PARAM<EB.BD.29.ROOT.DIR>:'/':REC.PARAM<EB.BD.29.OUTW.SUB.DIR>
    Y.OUT.BACKUP.DIR = 'RTGS.BAK/RTGS.OUTWARD/':TODAY

!Y.OUT.REQ.PATH = Y.OUT.REQUEST.DIR :'/':Y.OUT.REQ.FILE.NAME

    OPEN Y.OUT.BACKUP.DIR TO F.BACKUP.DIR ELSE
        CMD = 'CREATE.FILE DATA ':Y.OUT.BACKUP.DIR:' TYPE=UD'
        EXECUTE CMD
        CMD = 'DELETE ':Y.OUT.BACKUP.DIR:' .jbase_header'
        EXECUTE CMD

    END

    Y.OUT.REQ.PATH = Y.OUT.REQUEST.DIR :'/':Y.OUT.REQ.FILE.NAME
    OPENSEQ Y.OUT.REQ.PATH TO F.FILE.OUT.REQ THEN NULL

    Y.OUT.BACK.PATH = Y.OUT.BACKUP.DIR :'/':Y.OUT.REQ.FILE.NAME
    OPENSEQ Y.OUT.BACK.PATH TO F.FILE.OUT.BACK THEN NULL


    RETURN

PROCESS:

! GOSUB TXN.LIMIT.CHK       ;*to check maximum no of today's txn
    GOSUB MSG.VAR.ASSIGN      ;*assign value's of variables
    GOSUB GET.SEQ.NO          ;*generate unique id
    GOSUB MSG.GENERATE        ;*prepare pacs008 message
    GOSUB WRITE.LOG ;*write message to desired location

    RETURN

**************
TXN.LIMIT.CHK:
**************

*to check maximum no of today's txn
    Y.APP.ID = 'RTGS.SEQ.':TODAY
    CALL F.READ( FN.RTGS.SLN , Y.APP.ID , R.RTGS.SLN , F.RTGS.SLN , Y.ERR )
    IF R.RTGS.SLN NE ""  THEN
        ALL.SEQ = R.RTGS.SLN<EB.BD.92.RTGS.SEQ.NUM>
        TOT.SEQ = SUM(ALL.SEQ)
        IF TOT.SEQ GE '999999' THEN
            ETEXT = "Maximum No. of Today's Transaction Exceeded"
            CALL STORE.END.ERROR
            RETURN
        END
    END
*end of maximum no of txn check

    RETURN

***************
MSG.VAR.ASSIGN:
***************
    FrBICFI = 'JANBBDDH';                       ToBICFI = 'BBHOBDDH';                BizMsgIdr = ''
    MsgDefIdr = 'pacs.008.001.04';              BizSvc = 'RTGS';                     CreDt = TODAY
    Sgntr = '';                                 MsgId = '';                          CreDtTm = TODAY[1,4]:'-':TODAY[5,2]:'-':TODAY[7,2]:FIELD(TIMEDATE(),' ',1)
    BtchBookg = '';                             BatchBookingID = '';                 NbOfTxs = '1'
    InstrId = '';                               EndToEndId = 'NOTPROVIDED';          TxId = ''
    ClrChanl = 'RTGS';                          SvcLvlPrtry = '';                    LclInstrmPrtry = ''
    CtgyPurpPrtry = '001';                         Ccy = R.NEW(FT.DEBIT.CURRENCY);      IntrBkSttlmAmt = R.NEW(FT.DEBIT.AMOUNT)
    IntrBkSttlmDt = '';                         ChrgBr = 'SHAR';                     ChrgsInfAmt = '0'
    ChrgsInfCCY = 'BDT';                        ChrgsInfBICFI = '';                  ChrgsInfNm = ''
    ChrgsInfBranchId = '';                      InstgAgtBICFI = 'JANBBDDH';          InstgAgtNm = ''
    InstgAgtBranchId = '';                      InstdAgtBICFI = R.NEW(FT.LOCAL.REF)<1,BICC.CODE.POS>;             InstdAgtNm = ''
    InstdAgtBranchId = '';                      DbtrNm = '';                         DbtrPstlAdr = ''
    DbtrStrtNm = '';                            DbtrTwnNm='';                        DbtrAdrLine = ''
    DbtrCtry = '';                              DbtrAcctOthrId = R.NEW(FT.DEBIT.ACCT.NO); DbtrAgtBICFI = 'JANBBDDH'
    DbtrAgtNm = 'JANBBDDH';                     DbtrAgtBranchId = '';                     DbtrAgtAcctOthrId = DbtrAcctOthrId
    DbtrAgtAcctPrtry = '';                      CdtrAgtBICFI = R.NEW(FT.LOCAL.REF)<1,BICC.CODE.POS>;              CdtrAgtNm = CdtrAgtBICFI
    CdtrAgtBranchId = FIELD(R.NEW(FT.LOCAL.REF)<1,BRANCH.POS>,'-',2);CdtrAgtAcctOthrId = R.NEW(FT.LOCAL.REF)<1,ACCT.NO.POS>;CdtrAgtAcctPrtry = ''
    CdtrNm = R.NEW(FT.LOCAL.REF)<1,BENEFI.NAME.POS>;CdtrPstlAdr = '';                CdtrStrtNm = ''
    CdtrTwnNm = '';                             CdtrAdrLine = '';                    CdtrCtry = ''
    CdtrAcctOthrId = CdtrAgtAcctOthrId;         CdtrAcctPrtry = '';                  InstrInf = ''
    Ustrd = R.NEW(FT.LOCAL.REF)<1,REMARKS.POS>; PmntRsn = ''
    InstdAgtNm = InstdAgtBICFI
    InstdAgtBranchId = CdtrAgtBranchId
    CreDt = ICONV(CreDt, 'D')
    CreDt = TODAY[1,4]:'-':TODAY[5,2]:'-':TODAY[7,2]:'T':OCONV( CreDt,'MT'):'Z'
!CreDt = '2019-05-21T':OCONV( CreDt,'MT'):'Z'
!TmpIntrBkSttlmDt = '20190521'
    TmpIntrBkSttlmDt = TODAY
    IntrBkSttlmDt = TmpIntrBkSttlmDt[1,4]:'-':TmpIntrBkSttlmDt[5,2]:'-':TmpIntrBkSttlmDt[7,2]:'T'
    TmpIntrBkSttlmDt = ICONV(TmpIntrBkSttlmDt, 'D')
    IntrBkSttlmDt:=OCONV( TmpIntrBkSttlmDt,'MT'):'Z'

    CALL F.READ(FN.ACC,DbtrAcctOthrId,R.ACC,F.ACC,Y.ERR)
    DbtrNm = R.ACC<AC.ACCOUNT.TITLE.1>
!**********************For Comma Replace by space***************
    IF DbtrNm MATCHES "...,..."  THEN
        DbtrNm = CHANGE(DbtrNm,","," ")
    END
!***************************************************************
    SEL.CMD = 'SELECT ':FN.RL:' WITH BRANCH.CODE EQ ':ID.COMPANY
    CALL EB.READLIST(SEL.CMD,DbtrAgtBranchId,'',NO.OF.REC,Y.SEL.ERR)
    InstgAgtBranchId = DbtrAgtBranchId

    Y.L.CUSTOM.OFF.CODE=R.NEW(FT.LOCAL.REF)<1,L.CUSTOM.OFF.CO.POS>
    IF Y.L.CUSTOM.OFF.CODE NE '' THEN

        Y.L.CUSTOM.REG.NO = R.NEW(FT.LOCAL.REF)<1,L.CUSTOM.REG.NO.POS>
        Y.L.DECL.CODE = R.NEW(FT.LOCAL.REF)<1,L.DECL.CODE.POS>

*********Custom Registration Year & Importer Mobile No Added Newly*************
        Y.L.CUS.REG.YEAR =R.NEW(FT.LOCAL.REF)<1,L.CUSTOM.REG.YEAR.POS>
        Y.L.IMPORTER.MOB =R.NEW(FT.LOCAL.REF)<1,L.IMPORTER.MOB.POS>
**************************************************************************

!!!!!!!!Y.CUSTOMER.ID = R.ACC<AC.CUSTOMER>
!!!!!!CALL F.READ (FN.CUSTOMER,Y.CUSTOMER.ID,R.CUSTOMER,F.CUSTOMER,Y.CUS.ERR)
!!!!!!!!!Y.MOB.NO = FIELD(R.CUSTOMER<EB.CUS.SMS.1>,VM,1)
!!!!!!!!! Previous      Ustrd= Y.L.CUSTOM.OFF.CODE:' ':TODAY[1,4]:' ':Y.L.CUSTOM.REG.NO:' ':Y.L.DECL.CODE:' ':Y.MOB.NO
        Ustrd= Y.L.CUSTOM.OFF.CODE:' ':Y.L.CUS.REG.YEAR:' ':Y.L.CUSTOM.REG.NO:' ':Y.L.DECL.CODE:' ':Y.L.IMPORTER.MOB
        CtgyPurpPrtry = '041'
    END
    RETURN

*************
MSG.GENERATE:
*************

    Y.WRITE.DATA = FrBICFI:',':ToBICFI:',':BizMsgIdr:',':MsgDefIdr:',':BizSvc:',':CreDt:',':Sgntr:',':MsgId:',':CreDtTm
*                    1             2          3              4            5         6        7          8          9
    Y.WRITE.DATA:= ',':BtchBookg:',':BatchBookingID:',':NbOfTxs:',':InstrId:',':EndToEndId:',':TxId:',':ClrChanl:',':SvcLvlPrtry:',':LclInstrmPrtry
*                        10                  11           12          13          14            15          16          17                18
    Y.WRITE.DATA:= ',':CtgyPurpPrtry:',':Ccy:',':IntrBkSttlmAmt:',':IntrBkSttlmDt:',':ChrgBr:',':ChrgsInfAmt:',':ChrgsInfCCY:',':ChrgsInfBICFI:',':ChrgsInfNm
*                         19              20         21                   22             23            24              25              26             27
    Y.WRITE.DATA:= ',':ChrgsInfBranchId:',':InstgAgtBICFI:',':InstgAgtNm:',':InstgAgtBranchId:',':InstdAgtBICFI:',':InstdAgtNm:',':InstdAgtBranchId:',':DbtrNm:',':DbtrPstlAdr
*                                28              29               30                 31                32                33             34                35            36
    Y.WRITE.DATA:= ',':DbtrStrtNm:',':DbtrTwnNm:',':DbtrAdrLine:',':DbtrCtry:',':DbtrAcctOthrId:',':DbtrAgtBICFI:',':DbtrAgtNm:',':DbtrAgtBranchId:',':DbtrAgtAcctOthrId
*                          37            38             39            40               41               42               43            44                  45
    Y.WRITE.DATA:= ',':DbtrAgtAcctPrtry:',':CdtrAgtBICFI:',':CdtrAgtNm:',':CdtrAgtBranchId:',':CdtrAgtAcctOthrId:',':CdtrAgtAcctPrtry:',':CdtrNm:',':CdtrPstlAdr:',':CdtrStrtNm
*                          46                   47               48            49                  50                    51                  52           53             54
    Y.WRITE.DATA:= ',':CdtrTwnNm:',':CdtrAdrLine:',':CdtrCtry:',':CdtrAcctOthrId:',':CdtrAcctPrtry:',':InstrInf:',':Ustrd:',':PmntRsn:',':ID.NEW
*                          55            56              57           58                 59               60          61        62

    RETURN

***********
GET.SEQ.NO:
***********

!Y.BR.CODE = ID.COMPANY
!IF NOT(R.RTGS.SLN) THEN
!  Y.SERIAL.NO = '1'
! R.RTGS.SLN<EB.BD.92.BRANCH.CODE,1> = Y.BR.CODE
! R.RTGS.SLN<EB.BD.92.RTGS.SEQ.NUM,1> = Y.SERIAL.NO
! WRITE R.RTGS.SLN ON F.RTGS.SLN,Y.APP.ID
! END ELSE
!    LOCATE Y.BR.CODE IN R.RTGS.SLN<EB.BD.92.BRANCH.CODE,1> SETTING Y.POS THEN
!       Y.SERIAL.NO = R.RTGS.SLN<EB.BD.92.RTGS.SEQ.NUM,Y.POS> + 1
!      R.RTGS.SLN<EB.BD.92.RTGS.SEQ.NUM,Y.POS> = Y.SERIAL.NO
!     WRITE R.RTGS.SLN ON F.RTGS.SLN,Y.APP.ID
! END ELSE
!    Y.SERIAL.NO = 1
!   Y.TOT.BR = DCOUNT(R.RTGS.SLN<EB.BD.92.BRANCH.CODE>,@VM)
!   R.RTGS.SLN<EB.BD.92.BRANCH.CODE,Y.TOT.BR + 1> = Y.BR.CODE
!  R.RTGS.SLN<EB.BD.92.RTGS.SEQ.NUM,Y.TOT.BR + 1> = Y.SERIAL.NO
!  WRITE R.RTGS.SLN ON F.RTGS.SLN,Y.APP.ID
! END
! END

! ALL.SEQ = R.RTGS.SLN<EB.BD.92.RTGS.SEQ.NUM>
! TOT.SEQ = SUM(ALL.SEQ)
! Y.6.ZERO = '000000'
! Y.SEQ = Y.6.ZERO[LEN(TOT.SEQ),6-LEN(TOT.SEQ)]:TOT.SEQ
    BizMsgIdr = 'JANB':TODAY[3,2]:TODAY[5,2]:TODAY[7,2]:RIGHT(ID.NEW,6)
    MsgId = BizMsgIdr
    TxId = BizMsgIdr

    RETURN

**********
WRITE.LOG:
**********

    OPEN Y.OUT.REQUEST.DIR TO FP.FILE.OUT.REQ ELSE STOP
    OPEN Y.OUT.BACKUP.DIR TO FP.FILE.OUT.BACK ELSE STOP

    READ MY.OUT.REC FROM FP.FILE.OUT.REQ, Y.OUT.REQ.FILE.NAME THEN
        WRITESEQ Y.WRITE.DATA APPEND TO F.FILE.OUT.REQ ELSE
            ETEXT = 'No file name found to WRITE TRANSACTION data'
            CALL STORE.END.ERROR
            RETURN
        END
    END ELSE
        Y.WRITE.HEADER = 'FrBICFI,ToBICFI,BizMsgIdr,MsgDefIdr,BizSvc,CreDt,Sgntr,MsgId,CreDtTm,BtchBookg,BatchBookingID,NbOfTxs,InstrId,EndToEndId,TxId,ClrChanl,SvcLvlPrtry,LclInstrmPrtry,CtgyPurpPrtry,Ccy,IntrBkSttlmAmt,IntrBkSttlmDt,ChrgBr,ChrgsInfAmt,ChrgsInfCCY,ChrgsInfBICFI,ChrgsInfNm,ChrgsInfBranchId,InstgAgtBICFI,InstgAgtNm,InstgAgtBranchId,InstdAgtBICFI,InstdAgtNm,InstdAgtBranchId,DbtrNm,DbtrPstlAdr,DbtrStrtNm,DbtrTwnNm,DbtrAdrLine,DbtrCtry DbtrAcct,DbtrAcctOthrId,DbtrAgtBICFI,DbtrAgtNm,DbtrAgtBranchId,DbtrAgtAcctOthrId,DbtrAgtAcctPrtry,CdtrAgtBICFI,CdtrAgtNm,CdtrAgtBranchId,CdtrAgtAcctOthrId,CdtrAgtAcctPrtry,CdtrNm,CdtrPstlAdr,CdtrStrtNm,CdtrTwnNm,CdtrAdrLine,CdtrCtry,CdtrAcctOthrId,CdtrAcctPrtry,InstrInf,Ustrd,PmntRsn,FTID'

        WRITESEQ Y.WRITE.HEADER APPEND TO F.FILE.OUT.REQ ELSE
            ETEXT = "No file name found to WRITE TRANSACTION data"
            CALL STORE.END.ERROR
            RETURN
        END

        WRITESEQ Y.WRITE.HEADER APPEND TO F.FILE.OUT.BACK ELSE
            ETEXT = "No file name found to WRITE TRANSACTION data"
            CALL STORE.END.ERROR
            RETURN
        END

        READ MY.OUT.REC.TEMP FROM FP.FILE.OUT.REQ, Y.OUT.REQ.FILE.NAME THEN
            TEMP.HDR = FIELD(MY.OUT.REC.TEMP,@FM,1)
            IF TEMP.HDR EQ Y.WRITE.HEADER THEN
                WRITESEQ Y.WRITE.DATA APPEND TO F.FILE.OUT.REQ ELSE
                    ETEXT = 'No file name found to WRITE TRANSACTION data'
                    CALL STORE.END.ERROR
                    RETURN
                END
                WRITESEQ Y.WRITE.DATA APPEND TO F.FILE.OUT.BACK ELSE
                    ETEXT = 'No file name found to WRITE TRANSACTION data'
                    CALL STORE.END.ERROR
                    RETURN
                END
            END ELSE
                ETEXT = "No file name found to WRITE TRANSACTION data"
                CALL STORE.END.ERROR
                RETURN
            END
        END
    END

    WEOFSEQ F.FILE.OUT.REQ
    CLOSESEQ F.FILE.OUT.REQ
    WEOFSEQ F.FILE.OUT.BACK
    CLOSESEQ F.FILE.OUT.BACK

    RETURN
END
