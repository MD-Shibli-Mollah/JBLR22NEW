**************************************************************************
*-----------------------------------------------------------------------------
* <Rating>180</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE JBL.V.VAL.OLDLC.NUM
**************************************************************************
*Subroutine Description:
*-----------------------
* This Validate Routine is used to generate the unique sequential number for
* the LC contract & to update the new sequentail number in the sequntial
* number file LC.BD.SERIAL.NUMBER
*-------------------------------------------------------------------------
*Parameter Description
*--------- -----------
*  NA
*-------------------------------------------------------------------------
*Common Variable Description
*------  ------- -----------
*
* Variable name:   Insert file:          Description:
* COMI             I_COMMON              Will hold the last entered value
*
*-------------------------------------------------------------------------
*Called Subroutines: N/A
*------ ------------
* Routine Name:             Local/Core:     Description:
*
*-------------------------------------------------------------------------
* Modification History:
* ------------ --------
* 27/01/2011 -                            New   - Naveen Kumar BN
*                                                 Thesys Technologies
**************************************************************************
    $INCLUDE GLOBUS.BP I_COMMON
    $INCLUDE GLOBUS.BP I_EQUATE
    $INCLUDE GLOBUS.BP I_F.LETTER.OF.CREDIT
    $INCLUDE JBL.BP I_F.BD.SERIAL.NUMBER

    IF R.NEW(TF.LC.RECORD.STATUS) EQ 'IHLD' THEN RETURN
    IF MESSAGE EQ "VAL" THEN RETURN

    GOSUB INITIALISE
    GOSUB PROCESS

    RETURN
*------------
INITIALISE:
*------------
    FN.LETTER.OF.CREDIT = 'F.LETTER.OF.CREDIT'
    F.LETTER.OF.CREDIT = ''
    R.LETTER.OF.CREDIT = ''
    E.LETTER.OF.CREDIT = ''
    CALL OPF(FN.LETTER.OF.CREDIT,F.LETTER.OF.CREDIT)

    FN.LC.BD.SERIAL.NUMBER = 'F.LC.BD.SERIAL.NUMBER'
    F.LC.BD.SERIAL.NUMBER = ''
    R.LC.BD.SERIAL.NUMBER = ''
    E.LC.BD.SERIAL.NUMBER = ''
    CALL OPF(FN.LC.BD.SERIAL.NUMBER,F.LC.BD.SERIAL.NUMBER)

    RETURN
*-----------
PROCESS:
*---------
    Y.CB.LC.NUM = COMI
    Y.BRANCH = Y.CB.LC.NUM[1,4]
    Y.YEAR = Y.CB.LC.NUM[5,2]
    Y.LC.TYPE = Y.CB.LC.NUM[2]
    Y.YR.LC = 20:Y.YEAR

    CALL F.READ(FN.LC.BD.SERIAL.NUMBER,Y.YR.LC,R.LC.BD.SERIAL.NUMBER,F.LC.BD.SERIAL.NUMBER,E.LC.BD.SERIAL.NUMBER)
    IF NOT(R.LC.BD.SERIAL.NUMBER) THEN
        ETEXT = 'LC-YEAR'
        AF =  TF.LC.OLD.LC.NUMBER
        CALL STORE.END.ERROR
        RETURN
    END
    LOCATE Y.BRANCH IN R.LC.BD.SERIAL.NUMBER<LC.BD.10.BRANCH.CODE,1> SETTING Y.POS THEN
        LOCATE Y.LC.TYPE IN R.LC.BD.SERIAL.NUMBER<LC.BD.10.LC.TYPE,Y.POS,1> SETTING Y.POS.TYP THEN
            COMI = Y.CB.LC.NUM:FMT(R.LC.BD.SERIAL.NUMBER<LC.BD.10.LC.SERIAL.NUM,Y.POS,Y.POS.TYP>,'R%4')
            R.LC.BD.SERIAL.NUMBER<LC.BD.10.LC.SERIAL.NUM,Y.POS,Y.POS.TYP> += 1
            WRITE R.LC.BD.SERIAL.NUMBER ON F.LC.BD.SERIAL.NUMBER,Y.YR.LC
        END ELSE
            ETEXT = 'LC-LC.TYPE':FM:Y.YR.LC
            AF = TF.LC.OLD.LC.NUMBER
            CALL STORE.END.ERROR
            RETURN
        END
    END ELSE
        ETEXT = 'LC-BRANCH.CODE':FM:Y.YR.LC
        AF = TF.LC.OLD.LC.NUMBER
        CALL STORE.END.ERROR
        RETURN
    END
    RETURN
    CALL REFRESH.FIELD(AF,"")
*--------------------------------------------------------------------------------------------
END
