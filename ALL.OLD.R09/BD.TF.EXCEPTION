**************************************************************************
*-----------------------------------------------------------------------------
* <Rating>-42</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE BD.TF.EXCEPTION(GV)
**************************************************************************
*Subroutine Description:
*-----------------------
*PURPOSE: The routine is used to extract data from LC AND DRAWINGS WITH
*EXCEPTION EQ "YES". Its is a NOFILE Routine used in ENQUIRY BD.TF.EXCEPTION
*-------------------------------------------------------------------------
*Parameter Description
*--------- -----------
*
* GV Used to store the final output
*
*-------------------------------------------------------------------------
*Common Variable Description
*------  ------- -----------
*
*Variable name:   Insert file:          Description:
*
*
*
*-------------------------------------------------------------------------
*Called Subroutines:
*------ ------------
*Routine Name:             Local/Core:     Description:
* MULTI.GET.LOC.REF        Core
*
*<Description of the arguments>
*-------------------------------------------------------------------------
* Modification History:
* ------------ --------
* 27/01/2011 -                            New   - SRIDHAR PRASAD
*                                                 Thesys Technologies
**************************************************************************
    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_F.LETTER.OF.CREDIT
    $INSERT GLOBUS.BP I_F.DRAWINGS
    $INSERT GLOBUS.BP I_F.CUSTOMER

    FN.LC = 'F.LETTER.OF.CREDIT'
    FV.LC = ''
    CALL OPF(FN.LC,FV.LC)

    FN.DRAWINGS = 'F.DRAWINGS'
    FV.DRAWINGS = ''
    CALL OPF(FN.DRAWINGS,FV.DRAWINGS)

    FN.CUSTOMER = 'F.CUSTOMER'
    FV.CUSTOMER = ''
    CALL OPF(FN.CUSTOMER,FV.CUSTOMER)

    Y.APPL.NAME = 'LETTER.OF.CREDIT':FM:'DRAWINGS'
    Y.FLD.LIST = 'EXCEPTION':VM:'EXP.REASON':VM:'EXMD.AMT':FM:'EXCEPTION':VM:'EXP.REASON':VM:'EXMD.AMT'
    Y.FLD.POS = ''

    CALL MULTI.GET.LOC.REF(Y.APPL.NAME,Y.FLD.LIST,Y.FLD.POS)
    Y.EXEMPTION.POS = Y.FLD.POS<1,1>
    Y.EXEMPTION.REASON.POS = Y.FLD.POS<1,2>
    Y.EXEMPTION.AMOUNT.POS = Y.FLD.POS<1,3>

    Y.EXEMPTION.POS1 = Y.FLD.POS<2,1>
    Y.EXEMPTION.REASON.POS1 = Y.FLD.POS<2,2>
    Y.EXEMPTION.AMOUNT.POS1 = Y.FLD.POS<2,3>

    LC.SEL = 'SELECT ':FN.LC:' WITH EXCEPTION EQ YES'
    CALL EB.READLIST(LC.SEL,LC.LIST,'',LC.CNT,ERR)
    LOOP
        REMOVE LC.ID FROM LC.LIST SETTING POS
    WHILE LC.ID:POS
        CALL F.READ(FN.LC,LC.ID,R.LC,FV.LC,ERR)
        V1 = LC.ID
        V3 = R.LC<TF.LC.LOCAL.REF,Y.EXEMPTION.REASON.POS>
        V4 = R.LC<TF.LC.LOCAL.REF,Y.EXEMPTION.AMOUNT.POS>
        Y.CUS.ID = R.LC<TF.LC.APPLICANT.CUSTNO>
        CALL F.READ(FN.CUSTOMER,Y.CUS.ID,R.CUSTOMER,FV.CUSTOMER,ERR)
        V2 = R.CUSTOMER<EB.CUS.SHORT.NAME>
        IF GV EQ '' THEN
            GV := V1:"*":V2:"*"V3:"*":V4
        END ELSE
            GV := FM:V1:"*":V2:"*"V3:"*":V4
        END
    REPEAT


    DR.SEL = 'SELECT ':FN.DRAWINGS:' WITH EXCEPTION EQ YES'
    CALL EB.READLIST(DR.SEL,DR.LIST,'',DR.CNT,ERR)
    LOOP
        REMOVE DR.ID FROM DR.LIST SETTING POS
    WHILE DR.ID:POS
        CALL F.READ(DR.LC,DR.ID,R.DR,FV.DRAWINGS,ERR)
        V1 = DR.ID
        V3 = R.DR<TF.DR.LOCAL.REF,Y.EXEMPTION.REASON.POS1>
        V4 = R.DR<TF.DR.LOCAL.REF,Y.EXEMPTION.AMOUNT.POS1>
        Y.LEN = LEN(V1) - 2
        Y.LC.ID = V1[1,Y.LEN]
        CALL F.READ(FN.LC,Y.LC.ID,R.LC,FV.LC,ERR)
        Y.CUS.ID = R.LC<TF.LC.APPLICANT.CUSTNO>
        CALL F.READ(FN.CUSTOMER,Y.CUS.ID,R.CUSTOMER,FV.CUSTOMER,ERR)
        V2 = R.CUSTOMER<EB.CUS.SHORT.NAME>
        IF GV EQ '' THEN
            GV := V1:"*":V2:"*":V3:"*":V4
        END ELSE
            GV := FM:V1:"*":V2:"*"V3:"*":V4
        END
    REPEAT
    RETURN
END
