*-----------------------------------------------------------------------------
* <Rating>-3</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE JBL.S.LIEN.MARKING
    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_F.AZ.ACCOUNT
    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT GLOBUS.BP I_F.TELLER
    $INSERT GLOBUS.BP I_ENQUIRY.COMMON

    FN.AZ='F.AZ.ACCOUNT'
    F.AZ= ''
    REC.AZ = ''
**************ADD BY KAMRAN***********
    FN.AC ='F.ACCOUNT'
    F.AC = ''
**************************************
    CALL OPF(FN.AZ,F.AZ)
    CALL OPF(FN.AC,F.AC)


    Y.LIEN.MARK='LIEN.MARK'
    Y.LIEN.MARK.POS=''
    Y.LIEN.AGAINST = 'LIEN.AGAINST'
    Y.LOAN.AGAINST.POS = ''
    Y.ACC.ID = ID.NEW
    Y.AZ.ID = ID.NEW
    CALL GET.LOC.REF("ACCOUNT",Y.LIEN.MARK,Y.LIEN.MARK.POS)
********************************ADD BY KAMRAN**************************
    CALL GET.LOC.REF("ACCOUNT",Y.LIEN.AGAINST,Y.LIEN.AGAINST.POS)
***********************************************************************
    CALL GET.LOC.REF("AZ.ACCOUNT",Y.LIEN.MARK,Y.AZ.LIEN.MARK.POS)

    IF APPLICATION EQ 'AZ.ACCOUNT' THEN
************************ADDED BY KAMRAN*****************************************
        CALL F.READ(FN.AC,Y.ACC.ID,R.ACC,F.AC,ERR.AC)
        IF R.ACC<AC.LOCAL.REF,Y.LIEN.MARK.POS> EQ 'YES' THEN
            E="ACCOUNT ":ID.NEW:",ALREADY LIEN MARK"
            CALL ERR
        END

        CALL F.READ(FN.AZ,Y.AZ.ID,REC.AZ,F.AZ,ERR.AZ)
        IF REC.AZ<AZ.LOCAL.REF,Y.AZ.LIEN.MARK.POS> MATCHES 'Y...' THEN
            E= "ACCOUNT ":ID.NEW:",ALREADY LIEN MARK"
            CALL ERR
        END
****************************************END************************************
        IF APPLICATION EQ 'TELLER' THEN
            CALL F.READ(FN.AZ,R.NEW(TT.TE.ACCOUNT.2),REC.AZ,F.AZ,ERR.AZ)
            IF REC.AZ<AZ.LOCAL.REF,Y.LIEN.MARK.POS> MATCHES 'Y...' THEN
                E="ALREADY LIEN MARK---NOT ABLE TO PROCESS"
                CALL ERR
            END
        END
        RETURN
    END
