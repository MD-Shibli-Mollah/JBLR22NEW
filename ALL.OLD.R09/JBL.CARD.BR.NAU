    SUBROUTINE JBL.CARD.BR.NAU(Y.RETURN)
!PROGRAM JBL.CARD.BR.NAU

    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_ENQUIRY.COMMON
    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT GLOBUS.BP I_F.FUNDS.TRANSFER
    $INSERT BP I_F.ATM.CARD.MGT


    FN.ATM="F.EB.ATM.CARD.MGT$NAU"
    F.ATM=""
    FN.FT.NAU="F.FUNDS.TRANSFER$NAU"
    F.FT.NAU=""
    FN.FT="F.FUNDS.TRANSFER"
    F.FT=""
    FN.FT.HIS="F.FUNDS.TRANSFER$HIS"
    F.FT.HIS=""

    LOCATE "ACCT.NO" IN ENQ.SELECTION<2,1> SETTING ACCT.POS THEN
        Y.ACCT = ENQ.SELECTION<4,ACCT.POS>
    END
    LOCATE "REF.NO" IN ENQ.SELECTION<2,1> SETTING REF.POS THEN
        Y.REF = ENQ.SELECTION<4,REF.POS>
    END

    CALL OPF(FN.ATM,F.ATM)
    CALL OPF(FN.FT.NAU,F.FT.NAU)
    CALL OPF(FN.FT,F.FT)
    CALL OPF(FN.FT.HIS,F.FT.HIS)
    SEL.CMD = "SELECT ":FN.ATM:" WITH CARD.STATUS EQ PENDING AND RECORD.STATUS EQ INAU AND ISSUE.WAIVE.CHARGE EQ 'NO' AND CO.CODE EQ ": ID.COMPANY
    IF Y.ACCT NE "" THEN
        SEL.CMD = SEL.CMD :" AND ACCT.NO EQ " : Y.ACCT
    END
    IF Y.REF NE "" THEN
        SEL.CMD = SEL.CMD :" AND @ID EQ " : Y.REF
    END
    CALL EB.READLIST(SEL.CMD,SEL.LIST,"",NO.OF.RECORD,RET.CODE)

    LOOP
        REMOVE Y.REC.ID FROM SEL.LIST SETTING Y.POS
    WHILE Y.REC.ID:Y.POS
        CALL F.READ(FN.ATM,Y.REC.ID,R.ATM.REC,F.ATM,Y.ERR)
        IF R.ATM.REC<EB.ATM19.REQUEST.TYPE> EQ "REISSUE" AND R.ATM.REC<EB.ATM19.REISSUE.REASON> EQ 5 THEN


        END
        ELSE IF R.ATM.REC<EB.ATM19.REQUEST.TYPE> EQ "PINREISSUE" AND R.ATM.REC<EB.ATM19.REISSUE.REASON> EQ 7 THEN


        END
        ELSE IF R.ATM.REC<EB.ATM19.ATTRIBUTE5> NE "" THEN
            Y.FT.ID=R.ATM.REC<EB.ATM19.ATTRIBUTE5>

            CALL F.READ(FN.FT.NAU,Y.FT.ID,R.REC.NAU,F.FT.NAU,Y.ERR.FT.NAU)

            CALL F.READ(FN.FT,Y.FT.ID,R.REC.LIVE,F.FT,Y.ERR.FT)

            CALL EB.READ.HISTORY.REC(F.FT.HIS,Y.FT.ID,R.REC.HIS,Y.ERR.FT.HIS)

            Y.RECORD.STATUS=R.REC.HIS<FT.RECORD.STATUS>
            IF R.REC.NAU EQ "" AND R.REC.LIVE EQ "" AND (R.REC.HIS EQ "" OR Y.RECORD.STATUS EQ 'REVE') THEN
                Y.RETURN<-1>=Y.REC.ID
            END
        END
        ELSE
            Y.RETURN<-1>=Y.REC.ID
        END

    REPEAT
    CRT Y.RETURN
    RETURN
