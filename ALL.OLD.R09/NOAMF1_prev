****************************************************
* PROGRAM : PROGRAM TO CREATE A LIST OF ACCOUNT ON WHICH ARE NOT APPLIED TO AMF
* DEV     : ALIN BOBY
* DATE    : 29-06-2015
* REQ     : MIR ZAHIDUL ISLAM
****************************************************

    PROGRAM NOAMF1
    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT GLOBUS.BP I_F.ACCOUNT
    $INSERT GLOBUS.BP I_F.FUNDS.TRANSFER
    $INSERT GLOBUS.BP I_F.COMPANY
    $INSERT GLOBUS.BP I_ENQUIRY.COMMON

    GOSUB INIT
    GOSUB OPENFILES
    GOSUB PROCESS
    RETURN

INIT:

    FN.AC = 'F.ACCOUNT'; F.AC = ''
    FN.AC.HIS = 'F.ACCOUNT$HIS'; F.AC.HIS = ''
    FN.FT = 'F.FUNDS.TRANSFER'; F.FT = ''
    FN.FT.HIS = 'F.FUNDS.TRANSFER$HIS'; F.FT.HIS = ''

    *POST.REST=''
    Y.NO.DAYS = 'C'
    Y.DAYS = '+1C'
    RETURN

OPENFILES:

    CALL OPF(FN.AC,F.AC)
    CALL OPF(FN.AC.HIS,F.AC.HIS)
    CALL OPF(FN.FT,F.FT)
    CALL OPF(FN.FT.HIS,F.FT.HIS)
    RETURN

PROCESS:

    CRT "ENTER BRANCH CODE (e.g: '0873' for Sonargaon Rd.) : "
    INPUT BR.CODE
    CRT "ENTER CATEGORY (e.g: '6001' for savings) : "
    INPUT Y.CATEGORY
    CRT "ENTER START DATE (e.g: '20150625' START date when AMF applied) : "
    INPUT Y.START.DATE
    CRT "ENTER END DATE (e.g: '20150625' END date when AMF applied) : "
    INPUT Y.END.DATE


    BR.CODE="BD001":BR.CODE

    OPEN "NOAMF.DIR" TO F.NOAMF.DIR
    ELSE
        CMD = "CREATE.FILE NOAMF.DIR TYPE=UD"
        EXECUTE CMD
        OPEN "NOAMF.DIR" TO F.NOAMF.DIR
        ELSE
            CRT "OPENING OF NOAMF.DIR FAILED"
        END
    END
    Y.FILE.NAME = 'NOAMF.':BR.CODE:'.':Y.CATEGORY:'.':Y.START.DATE:'.':TODAY:'.csv'
    Y.FILE.DIR = 'NOAMF.DIR'
    Y.FILE.PATH = Y.FILE.DIR:'/':Y.FILE.NAME


******************
*LIST OF ACCOUNT BY CATEGORY
*******************
    CALL EB.READLIST("SELECT ":FN.AC:" WITH POSTING.RESTRICT EQ '' AND CATEGORY EQ ":Y.CATEGORY:" AND CO.CODE EQ ":BR.CODE,SEL.LIST.AC,"",RECORDS.AC,ERR.AC)


******************************************
!list all dates between begin and end date
******************************************
    IF Y.START.DATE GT Y.END.DATE THEN
        RETURN
    END ELSE
        CALL CDD ('', Y.START.DATE, Y.END.DATE, Y.NO.DAYS)
        Y.BEGIN.DT = Y.START.DATE
        FOR I = 1 TO Y.NO.DAYS + 1
            CALL JULDATE(Y.BEGIN.DT,JULIAN.DATE)
            Y.DATE.LIST<-1> = 'FT':JULIAN.DATE[3,5]:'...'
            CALL CDT('', Y.BEGIN.DT, Y.DAYS)
        NEXT
    END
    FT.ID.CNT = DCOUNT(Y.DATE.LIST,FM)

********************************
!select FT Record from live file
********************************
    SEL.CMD.FT = "SELECT ":FN.FT:" WITH ("
    FOR I = 1 TO FT.ID.CNT
        IF I = 1 THEN
            SEL.CMD.FT := "@ID LIKE ":Y.DATE.LIST<I>
        END ELSE
            SEL.CMD.FT := " OR @ID LIKE ":Y.DATE.LIST<I>
        END
    NEXT
    SEL.CMD.FT := ") AND CO.CODE EQ ":BR.CODE

******************************
!select FT Record from History
******************************
    SEL.CMD.FT.HIS = "SELECT ":FN.FT.HIS:" WITH ("
    FOR I = 1 TO FT.ID.CNT
        IF I = 1 THEN
            SEL.CMD.FT.HIS := "@ID LIKE ":Y.DATE.LIST<I>
        END ELSE
            SEL.CMD.FT.HIS := " OR @ID LIKE ":Y.DATE.LIST<I>
        END
    NEXT
    SEL.CMD.FT.HIS := ") AND CO.CODE EQ ":BR.CODE

    CALL EB.READLIST(SEL.CMD.FT,SEL.LIST.FT,"",NO.OF.RECORD.FT,FT.RET.CODE)
    CALL EB.READLIST(SEL.CMD.FT.HIS,SEL.LIST.FT.H,"",NO.OF.RECORD.FT.H,FT.H.RET.CODE)

****************************************
!read FT record from both history & live
****************************************
    IF NO.OF.RECORD.FT NE '0' THEN
        FOR I = 1 TO NO.OF.RECORD.FT
            Y.FT.ID = SEL.LIST.FT<I>
            CALL F.READ(FN.FT,Y.FT.ID,FT.REC,F.FT,Y.FT.ERR)
            IF FT.REC<FT.TRANSACTION.TYPE> EQ 'ACHY' THEN
                Y.DR.AC = FT.REC<FT.DEBIT.ACCT.NO>

                LOCATE Y.DR.AC IN  SEL.LIST.AC SETTING POS ELSE POS=0
                DEL SEL.LIST.AC<POS>



            END
        NEXT

        LOOP
            REMOVE Y.ACC.ID FROM SEL.LIST.AC SETTING POS
        WHILE Y.ACC.ID:POS

            CALL F.READ(FN.AC,Y.ACC.ID,R.AC.REC,F.AC,Y.AC.ERR)
            IF NOT(R.AC.REC) THEN
                CALL EB.READ.HISTORY.REC(F.AC.HIS,Y.ACC.ID,R.AC.REC,Y.AC.HIS.ERR)
            END

            Y.CATEG = R.AC.REC<AC.CATEGORY>
            Y.ALT.ID=R.AC.REC<AC.ALT.ACCT.ID>
            IF Y.CATEG EQ Y.CATEGORY THEN
                Y.AC.TITLE = R.AC.REC<AC.ACCOUNT.TITLE.1>:R.AC.REC<AC.ACCOUNT.TITLE.2>
                Y.RETURN<-1> = Y.CATEG:"*":Y.ACC.ID:"*":Y.AC.TITLE:"*":Y.ALT.ID
            END
        REPEAT


    END
    IF NO.OF.RECORD.FT.H NE '0' THEN
        FOR I = 1 TO NO.OF.RECORD.FT.H
            Y.FT.ID = FIELD(SEL.LIST.FT.H<I>,";",1)
            CALL EB.READ.HISTORY.REC(F.FT.HIS,Y.FT.ID,FT.REC,Y.FT.ERR)
            IF FT.REC<FT.TRANSACTION.TYPE> EQ 'ACHY' THEN
                Y.DR.AC = FT.REC<FT.DEBIT.ACCT.NO>



                LOCATE Y.DR.AC IN  SEL.LIST.AC SETTING POS ELSE POS=0

                DEL SEL.LIST.AC<POS>







            END
        NEXT

        LOOP
            REMOVE Y.ACC.ID FROM SEL.LIST.AC SETTING POS
        WHILE Y.ACC.ID:POS

            CALL F.READ(FN.AC,Y.ACC.ID,R.AC.REC,F.AC,Y.AC.ERR)
            IF NOT(R.AC.REC) THEN
                CALL EB.READ.HISTORY.REC(F.AC.HIS,Y.ACC.ID,R.AC.REC,Y.AC.HIS.ERR)
            END

            Y.CATEG = R.AC.REC<AC.CATEGORY>
            Y.ALT.ID=R.AC.REC<AC.ALT.ACCT.ID>
            IF Y.CATEG EQ Y.CATEGORY THEN
                Y.AC.TITLE = R.AC.REC<AC.ACCOUNT.TITLE.1>:R.AC.REC<AC.ACCOUNT.TITLE.2>
                Y.RETURN<-1> = Y.CATEG:"*":Y.ACC.ID:"*":Y.AC.TITLE:"*":Y.ALT.ID
            END
        REPEAT

    END
    IF NOT(Y.FILE.NAME) THEN
        CRT "NO FILE IS EXISTED, CREATING........."
    END
    ELSE
        WRITE Y.RETURN TO F.NOAMF.DIR,Y.FILE.NAME
        CRT "COMPLETE! PLEASE CHECK THE DIRECTORY NOAMF.DIR"
    END
    RETURN
END
