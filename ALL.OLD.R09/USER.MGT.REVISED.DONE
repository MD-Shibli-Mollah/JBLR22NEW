    SUBROUTINE USER.MGT.REVISED.DONE
!PROGRAM USER.MGT.REVISED.DONE
    $INSERT GLOBUS.BP I_COMMON
    $INSERT GLOBUS.BP I_EQUATE
    $INSERT BP I_F.USER.MGT
    $INSERT GLOBUS.BP I_F.USER
    FN.USER.MGT = 'F.EB.USER.MGT'
    F.USER.MGT = ''
    FN.USER.MGT.NAU = 'F.EB.USER.MGT$NAU'
    F.USER.MGT.NAU = ''
    FN.USER = 'F.USER'
    FN.USER.NAU = 'F.USER$NAU'
    F.USER = ''
    F.USER.NAU = ''
    CALL OPF(FN.USER.MGT,F.USER.MGT)
    CALL OPF(FN.USER.MGT.NAU,F.USER.MGT.NAU)
    CALL OPF(FN.USER.NAU,F.USER.NAU)
    CALL OPF(FN.USER,F.USER)

    Y.ID = ID.NEW
    Y.BANK.ID =RIGHT(LEFT(Y.ID,8),6)
    CALL F.READ(FN.USER,Y.ID,R.USER.REC,F.USER,ERR)
    IF R.USER.REC NE '' THEN
        SEL.CMD = 'SELECT ' :FN.USER.MGT: ' WITH USER.ID EQ ': Y.ID
    END
    ELSE
        SEL.CMD = 'SELECT ' :FN.USER.MGT: ' WITH EMP.BANK.ID EQ ': Y.BANK.ID
    END
    CALL EB.READLIST(SEL.CMD,SEL.LIST,'',NO.OF.REC,RECT.CODE)
    REMOVE Y.REQ.ID FROM SEL.LIST SETTING ID.POS
    CALL F.READ(FN.USER.MGT,Y.REQ.ID,R.REV.DONE,F.USER.MGT,ERR.USER)

    IF V$FUNCTION EQ 'D' THEN
        R.REV.DONE<EB.USE61.REQUEST.STATUS> = 'PENDING'
        CALL F.WRITE(FN.USER.MGT,Y.REQ.ID,R.REV.DONE)
    END
    RETURN
END
